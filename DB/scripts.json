[
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarClienteVenta",
    "Content": "CREATE procedure [dbo].[spBuscarClienteVenta]@buscar varchar(100),@bit bitasif(@bit = 0)select c.id as 'ID',td.descripcion as 'Documento',c.numeroDocumento as 'N',c.razonSocial as 'Razon',c.nombreComercial as 'Nombre_Comercial',cd.Direccion as 'Direccion',c.telefono as 'Telefono',c.correo as 'Correo',c.estado as 'Estado',TD.codigoSunat AS 'ID_DOCUMENTO',cd.Principal,cd.referencia as \"Referencia\",ISNULL(c.nacionalidad, 0) as 'nacionalidad'from mst_Cliente cinner join mst_TipoDocumento td on c.idDocumento = td.codigoSunatinner join mst_Cliente_Direccion cd on c.Id = cd.IdClientewhere c.flag = 1 and c.numeroDocumento =  @buscarorder by c.id descelseselect top 100 c.id as 'ID',td.descripcion as 'Documento',c.numeroDocumento as 'N',c.razonSocial as 'Razon',c.nombreComercial as 'Nombre_Comercial',cd.Direccion as 'Direccion',c.telefono as 'Telefono',c.correo as 'Correo',c.estado as 'Estado',TD.codigoSunat AS 'ID_DOCUMENTO',cd.Principal,cd.referencia as \"Referencia\",ISNULL(c.nacionalidad, 0) as 'nacionalidad',c.NombreCarrera 'NombreCarrera'from mst_Cliente cinner join mst_TipoDocumento td on c.idDocumento = td.codigoSunatinner join mst_Cliente_Direccion cd on c.Id = cd.IdClientewhere c.flag = 1 and c.numeroDocumento+razonSocial like '%' + @buscar + '%'order by c.id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_get_almacen_movimiento_by_id",
    "Content": "CREATE proc [dbo].[sp_get_almacen_movimiento_by_id]@id intasselectam.id 'id',am.estado 'estado',CONCAT(serie,'-', CAST(numero as varchar)) as 'serie',numero as 'numero',credito 'credito',total 'total',documento 'documento',c.razonSocial 'cliente',am.idCliente 'id_cliente',am.direccion 'direccion',am.fecha 'fecha',am.referencia 'referencia',IIF(am.ajuste = 0, iif(am.entrada = 1, 'Entrada', 'Salida'), 'Ajuste') 'tipo',a.Nombre 'almacen',am.idAlmacen 'id_almacen',am.doc_facturado 'doc_factura',am.cerrado 'cerrado',am.entrada 'entrada',am.salida 'salida',am.ajuste 'ajuste',IIF((select SUM(monto) from api_almacen_pagos ap where ap.almacen_movimiento_id = am.id) = am.total, cast(0 as bit), cast(1 as bit)) 'status_deuda',am.idvendedor 'id_vendedor',u.usuario 'vendedor',am.clasificadorId,am.importe_pagadofrom mst_almacen_movimiento amleft join mst_Cliente c on am.idCliente = c.Idinner join mst_almacen a on am.idAlmacen = a.Idinner join mst_Usuarios u on am.idvendedor = u.Idwhere am.id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_eliminar_almacen_movimiento_detalle_by_id",
    "Content": "CREATE proc [dbo].[sp_eliminar_almacen_movimiento_detalle_by_id]@id intasupdate mst_almacen_movimiento_detalle set estado = 0, flag = 0where id = @iddeclare @idAlmacen int = (select a.idAlmacen from mst_almacen_movimiento_detalle d inner join mst_almacen_movimiento a on d.almacen_movimiento_id = a.id where d.id=@id)declare @idProducto int = (select idProducto from mst_almacen_movimiento_detalle where id=@id)declare @idAlmacenMovimiento int = (select top 1 almacen_movimiento_id from mst_almacen_movimiento_detalle where id=@id)exec spStockActualizarSaldoItem @idAlmacen, @idProducto"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarColor",
    "Content": "CREATE proc [dbo].[spBuscarColor]@buscar varchar(10)asselect TOP 200id as 'ID', descripcion as 'Descripción',usuarioCrea as 'Usuario de Creación',fechaCrea as 'Fecha de Creación',usuarioModifica as 'Usuario de Modificación',fechaModifica as 'Fecha de Modificación',estado as 'Estado'from mst_Colorwhere descripcion like '%' + @buscar + '%' and flag = 1order by id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_get_almacen_movimiento_detalle_by_id_almacen_movimiento",
    "Content": "CREATE proc [dbo].[sp_get_almacen_movimiento_detalle_by_id_almacen_movimiento]@idalmacenmovimiento intasselecta.id 'id',idProducto 'id_producto',nombreProducto 'nombre_producto',a.idUnidad 'id_unidad',nombreUnidad 'nombre_unidad',factor 'factor',cantidad 'cantidad',precio 'precio',total 'total',almacen_movimiento_id 'almacen_movimiento_id',ISNULL(pp.Codigo, '') 'codigo_barra'from mst_almacen_movimiento_detalle ainner join mst_ProductoPresentacion pp on a.idProducto = pp.idProductosDetalle and pp.idUnidad = a.idUnidad and pp.estado = 1 and pp.flag = 1where almacen_movimiento_id = @idalmacenmovimiento and a.estado = 1 and a.flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_eliminar_pagos_almacenMovimiento_by_id",
    "Content": "CREATE proc [dbo].[sp_eliminar_pagos_almacenMovimiento_by_id]@id intasdelete from api_almacen_pagos where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetTotalCreditoMovimiento",
    "Content": "CREATE proc [dbo].[spGetTotalCreditoMovimiento]@idApertura int,@idCaja int,@idUsuario intasselectISNULL(SUM(total), 0) totalfrom mst_almacen_movimientowhere credito = 1 and idUsuario = @idUsuario and idCaja = @idCaja and idApertura = @idApertura"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarDocumentos_Serie__idusuario",
    "Content": "CREATE proc [dbo].[spBuscarDocumentos_Serie__idusuario]@idusuario int,@idserie intasselect cast(d.Codigo as varchar) + '-' + d.Descripcion Doc from mst_Doc_Serie dsinner join mst_Doc_Serie_Usuario dsu on dsu.idserie = ds.IdSerieinner join mst_Serie s on ds.IdSerie = s.Idinner join mst_documentos d on ds.IdDoc = d.Codigowhere dsu.IdUsuario = @idusuario and ds.IdSerie = @idserieand dsu.Estado = 1 and dsu.Flag = 1 and ds.Estado = 1 and ds.Flag = 1and s.Estado = 1 and s.Flag = 1order by d.id asc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_get_apertura_data",
    "Content": "CREATE proc [dbo].[sp_get_apertura_data]@idcaja int,@idusuario intasselect * from mst_aperturawhere idcaja = @idcaja and IdUsuario = @idusuario and Abierto_Cerrado = 0"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarPreCuenta",
    "Content": "CREATE PROC [dbo].[spInsertarPreCuenta]@idmesa int,@idpiso int,@bit bitASif((select count(id) from tabla_Pre_Venta where IdMesa = @idmesa and IdPiso = @idpiso and Pagado = 0 and Eliminado = 0)>0)beginupdate tabla_Pre_Venta set precuenta = 1where IdPiso = @idpiso and IdMesa = @idmesa and Pagado = 0 and Eliminado = 0end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spStockEntradas",
    "Content": "CREATE proc [dbo].[spStockEntradas]@idcompra intasdeclare @idprod intdeclare @cantidad moneydeclare @factor int declare @valor moneydeclare @idalmacen intdeclare Temp cursorFOR(select pp.idProductosDetalle,cantidad,um.factor,v.IdAlmacen from mst_ComprasDetalles vdinner join mst_unidadmedida um on vd.idunidad= um.idinner join mst_compras v on vd.IdCompra = v.Idinner join mst_ProductoPresentacion pp on vd.IdProducto = pp.idwhere IdCompra = @idcompra) open Tempfetch Temp into @idprod,@cantidad,@factor,@idalmacen;while(@@fetch_status = 0)begin\t\t\tset @valor = @cantidad  * CAST(@factor as money);\tupdate Stocks_Acumulados set \tEntradas = Entradas + @valor,\tsaldo = (entradas + @valor) - Salidas\twhere IdProducto = @idprod and IdAlmacen = @idalmacen;\tfetch Temp into @idprod,@cantidad,@factor,@idalmacen;\tend\tclose Temp;\tDEALLOCATE Temp;"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetStocksByProductoDetalle",
    "Content": "CREATE proc [dbo].[SpGetStocksByProductoDetalle]@idProductoDetalle intasselectstock.Id,stock.IdAlmacen,stock.IdProducto,a.Nombre 'Almacen',stock.Entradas,stock.Salidas,stock.Saldofrom Stocks_Acumulados stock inner join mst_Almacen a on stock.IdAlmacen = a.Idwhere stock.IdProducto = @idProductoDetalle"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetSeguimientoCompra",
    "Content": "CREATE proc [dbo].[spGetSeguimientoCompra]@idCompra intasselect sc.*, tps.Descripcion TipoPagoText from tbl_SeguimientoCompra scinner join tbl_TipoPago_Seguimiento tps on sc.IdTipoPago = tps.Idwhere sc.Flag = 1 and IdCompra = @idCompra"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_get_DatosAnexoEmpresa",
    "Content": "CREATE proc [dbo].[sp_get_DatosAnexoEmpresa]asselect CodigoAnexo from tabla_configuracion_general"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spFormatoPreCuenta",
    "Content": "CREATE PROC [dbo].[spFormatoPreCuenta]@idmesa int,@idpiso intasselect a.IdPiso,a.IdMesa,a.Total,b.Cantidad,b.Descripcion,b.Precio,b.Total from tabla_Pre_Venta ainner join tabla_Pre_Venta_Detalle bon a.IdMesa=@idmesa and a.IdPiso = @idpiso and b.IdMesa = @idmesa and b.IdPiso = @idpiso and a.Pagado = 0 and a.Eliminado = 0 and b.Pagado = 0 andb.Eliminado = 0"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarGrupo",
    "Content": "----------------------------------------------BUSCAR GRUPOCREATE procedure [dbo].[spBuscarGrupo]@buscar varchar(100),@id intasif(@id = 0)select Id as 'ID',descripcion as 'Nombre',usuarioCrea 'Usuario de Creación',fechaCrea as 'Fecha de Creación',usuarioModifica as 'Usuario de Modificación',fechaModifica as 'Fecha de Modificación',estado as 'Estado'from mst_Grupowhere descripcion like '%'+@buscar +'%'and flag = 1 order by id descelseselect Id as 'ID',descripcion as 'Nombre',usuarioCrea 'Usuario de Creación',fechaCrea as 'Fecha de Creación',usuarioModifica as 'Usuario de Modificación',fechaModifica as 'Fecha de Modificación',estado as 'Estado'from mst_Grupowhere CAST(id as varchar) = @buscar and Flag = 1order by id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetSeguimientoCompraById",
    "Content": "CREATE proc [dbo].[spGetSeguimientoCompraById]@id intasselect sc.*, tps.Descripcion TipoPagoText from tbl_SeguimientoCompra scinner join tbl_TipoPago_Seguimiento tps on sc.IdTipoPago = tps.Idwhere sc.Flag = 1 and  sc.id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_get_cliente",
    "Content": "CREATE proc [dbo].[sp_get_cliente]asselectc.id 'id',idDocumento 'documento',numeroDocumento 'num_documento',razonSocial 'razon_social',nombreComercial 'nombre_comercial',cd.Direccion 'direccion',telefono 'telefono',correo 'correo',c.estado 'estado',c.flag 'flag',c.delivery 'delivery'from mst_Cliente cleft join mst_Cliente_Direccion cd on cd.idcliente = c.idwhere c.estado = 1 and c.flag = 1 and cd.Principal = 1order by c.id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetTotalPagadosAlDiaMovimientos",
    "Content": "CREATE proc [dbo].[spGetTotalPagadosAlDiaMovimientos]@idApertura int,@idCaja int,@idUsuario intasselectISNULL(sum(monto), 0) totalfrom api_almacen_pagoswhere idApertura = @idApertura and idCaja = @idCaja and user_id = @idUsuario"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_reporte_cobranza",
    "Content": "CREATE proc [dbo].[sp_reporte_cobranza]@fecha dateasSELECT * FROM (SELECT v.IdUsuarioPreventa as CodVen, u.usuario as VENDEDOR,s.FechaPago,v.IdDocumento as Doc,(v.SerieDoc+'-'+CAST(v.NumeroDoc as varchar)) as NumDoc,v.TotalVenta,ISNULL(s.Monto,0) AS Monto,ts.Descripcion as tipo_pago FROM mst_Venta vINNER JOIN tbl_Seguimiento sON v.Id = s.IdVentaINNER JOIN tbl_TipoPago_Seguimiento tsON ts.Id = s.IdTipoPagoINNER JOIN mst_Usuarios uON u.Id = v.IdUsuarioPreventaWHERE s.Eliminado = 0 and s.FechaPago  = @fecha ) as cobranzaspivot (sum(Monto)for tipo_pago in ([EFECTIVO], [CHEQUE], [TRANSFERENCIA], [DEPOSITO])) PivotTable"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpDeleteControlTransportistaDetalle",
    "Content": "CREATE proc [dbo].[SpDeleteControlTransportistaDetalle]@id intasdelete from ControlTransportistasDetalle where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spDeleteAlmacen",
    "Content": "CREATE proc [dbo].[spDeleteAlmacen]@id intasupdate almacen set estado = 0, flag = 0where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_get_cobranza_por_dia_usuario",
    "Content": "CREATE proc [dbo].[sp_get_cobranza_por_dia_usuario]@idusuario intasselectCONCAT(v.SerieDoc, '-', v.NumeroDoc) 'Serie',v.FechaEmision 'FechaEmision',v.TotalVenta 'TotalVenta'from tbl_Seguimiento sinner join mst_Venta v on s.IdVenta = v.Idwhere v.IdUsuarioPreventa = @idusuario and s.FechaPago = CAST(GETDATE() as date)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_get_almacen_movimientos_salidas_pagos_by_almacen_movimiento_id",
    "Content": "CREATE proc [dbo].[sp_get_almacen_movimientos_salidas_pagos_by_almacen_movimiento_id]@id intasselectap.id,monto,ap.fecha,almacen_movimiento_id,tipo_pago_seguimiento_id,user_id,tp.Descripcion 'tipo_pago_text',u.usuario 'usuario_text'from api_almacen_pagos apinner join tbl_TipoPago_Seguimiento tp on ap.tipo_pago_seguimiento_id = tp.Idinner join mst_Usuarios u on ap.user_id = u.Idwhere almacen_movimiento_id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetTotalPagadosAldiaVentas",
    "Content": "CREATE proc [dbo].[spGetTotalPagadosAldiaVentas]@idApertura int,@idUsuario int,@idCaja intasselect ISNULL(SUM(monto), 0) totalfrom tbl_Seguimiento sINNER Join mst_Venta v on s.IdVenta = v.Idwhere s.idCaja = @idCaja and s.idApertura = @idApertura and s.idUsuario = @idUsuarioand v.IdFormaPago = 2and s.IdTipoPago = 1and s.Eliminado = 0"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_insertar_delivery_pedido_restaurant",
    "Content": "CREATE proc [dbo].[sp_insertar_delivery_pedido_restaurant]@id_mesa int,@delivery bitasupdate tabla_Pre_Venta set is_delivery = @deliverywhere IdMesa = @id_mesa"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarMarca",
    "Content": "-----------------------------------------------------------------------------------Buscar---------------------------CREATE procedure [dbo].[spBuscarMarca]@buscar varchar(100)asselect top 200 Id as 'ID', nombreMarca as 'Nombre Marca', usuarioCrea as 'Usuario de Creación',fechaCrea as 'Fecha de Creación', usuarioModifica as 'Usuario de Modificacion',fechaModifica as 'Fecha de Modificación', estado as 'Estado'from mst_Marca where nombreMarca like '%'+@buscar+'%' and flag = 1order by id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetTipoPagoSeguimiento",
    "Content": "CREATE proc [dbo].[spGetTipoPagoSeguimiento]asselect * from tbl_TipoPago_Seguimientowhere Estado = 1 and Flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_insertar_count_pecho_pierna_text_observation_venta",
    "Content": "CREATE proc [dbo].[sp_insertar_count_pecho_pierna_text_observation_venta]@idVenta int,@countPecho int,@countPierna int,@textObservation varchar(250)asupdate mst_Venta set countPecho = @countPecho,countPierna = @countPierna,textObservation = @textObservationwhere Id = @idVenta"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spDeleteVentaCronograma",
    "Content": "CREATE proc [dbo].[spDeleteVentaCronograma]@id intasupdate venta_cronograma set estado = 0, flag = 0where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spCerrarCompra",
    "Content": "CREATE proc [dbo].[spCerrarCompra]@id int,@onof bitasif(@onof = 0)update mst_Compras set Estado = 0where id = @idelseupdate mst_Compras set Estado = 1where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spPreVenta_Mostrar_Normal",
    "Content": "CREATE proc [dbo].[spPreVenta_Mostrar_Normal]@esconvenio bit,@fechaini date,@fechafin date,@esconfecha bit,@idconvenio int,@opcion intasif (@esconfecha = 0)\tbegin\t\tif(@esconvenio = 0)\t\t\tbegin\t\t\t\tselect TOP 200\t\t\t\tc.IdPedido N,\t\t\t\tc.Fecha,\t\t\t\td.Descripcion Doc,\t\t\t\tc.RazonSocial,\t\t\t\tc.Direccion,\t\t\t\tu.nombre Atendio,\t\t\t\tc.sub_total as Sub_Total,\t\t\t\tc.Otro_Imp as 'ICBPER',\t\t\t\tc.igv as 'Igv',\t\t\t\tc.Total,\t\t\t\tBolFac,\t\t\t\tc.Id\t\t\t\tfrom tabla_Pre_Venta c \t\t\t\tinner join mst_Usuarios u on c.IdUsuario = u.Id\t\t\t\tinner join mst_documentos d on c.BolFac = d.Codigo\t\t\t\twhere c.Pagado = 0 \t\t\t\tand c.Eliminado = 0 \t\t\t\tand c.IdMesa = 0 \t\t\t\tand BolFac  != '07' and BolFac != '08'\t\t\t\torder by c.id desc\t\t\tend\t\telse\t\t\tbegin\t\t\t\tselect TOP 200\t\t\t\tc.IdPedido N,\t\t\t\tc.Fecha,\t\t\t\td.Descripcion Doc,\t\t\t\tc.RazonSocial,\t\t\t\tc.Direccion,\t\t\t\tu.nombre Atendio,\t\t\t\tc.sub_total as Sub_Total,\t\t\t\tc.Otro_Imp as 'ICBPER',\t\t\t\tc.igv as 'Igv',\t\t\t\tc.Total,\t\t\t\tBolFac,\t\t\t\tPagado as Estado,\t\t\t\tc.Id\t\t\t\tfrom tabla_Pre_Venta_Convenio c \t\t\t\tinner join mst_Usuarios u on c.IdUsuario = u.Id\t\t\t\tinner join mst_documentos d on c.BolFac = d.Codigo\t\t\t\twhere c.Pagado = 0 \t\t\t\tand c.Eliminado = 0 \t\t\t\tand c.IdMesa = 0 \t\t\t\tand BolFac  != '07' and BolFac != '08'\t\t\t\torder by c.id desc\t\t\tend\tendelse\tbegin\t\tif(@esconvenio = 1)\t\t\tbegin\t\t\t\tif(@opcion = 1)\t\t\t\t\tbegin\t\t\t\t\t\tselect \t\t\t\t\t\tc.IdPedido N,\t\t\t\t\t\tc.Fecha,\t\t\t\t\t\td.Descripcion Doc,\t\t\t\t\t\tc.RazonSocial,\t\t\t\t\t\tc.Direccion,\t\t\t\t\t\tu.nombre Atendio,\t\t\t\t\t\tc.sub_total as Sub_Total,\t\t\t\t\t\tc.Otro_Imp as 'ICBPER',\t\t\t\t\t\tc.igv as 'Igv',\t\t\t\t\t\tc.Total,\t\t\t\t\t\tBolFac,\t\t\t\t\t\tPagado as Estado,\t\t\t\t\t\tc.Id\t\t\t\t\t\tfrom tabla_Pre_Venta_Convenio c \t\t\t\t\t\tinner join mst_Usuarios u on c.IdUsuario = u.Id\t\t\t\t\t\tinner join mst_documentos d on c.BolFac = d.Codigo\t\t\t\t\t\twhere c.Pagado = 0 \t\t\t\t\t\tand c.Eliminado = 0 \t\t\t\t\t\tand c.IdMesa = 0 \t\t\t\t\t\tand BolFac  != '07' and BolFac != '08' and cast(c.fecha as date) between @fechaini and @fechafin and c.idconvenio = @idconvenio \t\t\t\t\t\torder by c.id desc\t\t\t\t\t\t\tend\t\t\t\telse if (@opcion = 2)\t\t\t\t\tbegin\t\t\t\t\t\tselect\t\t\t\t\t\tc.IdPedido N,\t\t\t\t\t\tc.Fecha,\t\t\t\t\t\td.Descripcion Doc,\t\t\t\t\t\tc.RazonSocial,\t\t\t\t\t\tc.Direccion,\t\t\t\t\t\tu.nombre Atendio,\t\t\t\t\t\tc.sub_total as Sub_Total,\t\t\t\t\t\tc.Otro_Imp as 'ICBPER',\t\t\t\t\t\tc.igv as 'Igv',\t\t\t\t\t\tc.Total,\t\t\t\t\t\tBolFac,\t\t\t\t\t\tPagado as Estado,\t\t\t\t\t\tc.Id\t\t\t\t\t\tfrom tabla_Pre_Venta_Convenio c \t\t\t\t\t\tinner join mst_Usuarios u on c.IdUsuario = u.Id\t\t\t\t\t\tinner join mst_documentos d on c.BolFac = d.Codigo\t\t\t\t\t\twhere c.Pagado = 1 \t\t\t\t\t\tand c.Eliminado = 0 \t\t\t\t\t\tand c.IdMesa = 0 \t\t\t\t\t\tand BolFac  != '07' and BolFac != '08' and cast(c.fecha as date) between @fechaini and @fechafin and c.IdConvenio = @idconvenio \t\t\t\t\t\torder by c.id desc\t\t\t\t\t\t\tend\t\t\t\telse \t\t\t\t\tbegin\t\t\t\t\t\tselect TOP 200\t\t\t\t\t\t\tc.IdPedido N,\t\t\t\t\t\t\tc.Fecha,\t\t\t\t\t\t\td.Descripcion Doc,\t\t\t\t\t\t\tc.RazonSocial,\t\t\t\t\t\t\tc.Direccion,\t\t\t\t\t\t\tu.nombre Atendio,\t\t\t\t\t\t\tc.sub_total as Sub_Total,\t\t\t\t\t\t\tc.Otro_Imp as 'ICBPER',\t\t\t\t\t\t\tc.igv as 'Igv',\t\t\t\t\t\t\tc.Total,\t\t\t\t\t\t\tBolFac,\t\t\t\t\t\t\tPagado as Estado,\t\t\t\t\t\t\tc.Id\t\t\t\t\t\t\tfrom tabla_Pre_Venta_Convenio c \t\t\t\t\t\t\tinner join mst_Usuarios u on c.IdUsuario = u.Id\t\t\t\t\t\t\tinner join mst_documentos d on c.BolFac = d.Codigo\t\t\t\t\t\t\twhere \t\t\t\t\t\t\tc.Eliminado = 0 \t\t\t\t\t\t\tand c.IdMesa = 0 \t\t\t\t\t\t\tand BolFac  != '07' and BolFac != '08' and cast(c.fecha as date) between @fechaini and @fechafin and c.IdConvenio = @idconvenio \t\t\t\t\t\t\torder by c.id desc\t\t\t\t\t\t\tend\t\t\tend\t\t\t\tend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetTransportistaByDni",
    "Content": "CREATE proc [dbo].[SpGetTransportistaByDni]@dni varchar(8)asselect t.id Id,td.Id 'IdDocumento',td.descripcion 'Documento',DniRuc 'Numero',Nombre,Telefono,Licencia,Direccionfrom mst_Transportistas tinner join mst_TipoDocumento td on t.CodidoTipoDoc = td.codigoSunatwhere t.Estado = 1 and t.Flag = 1 and t.DniRuc = @dni"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_insertar_llevar_pedido_restaurant",
    "Content": "CREATE proc [dbo].[sp_insertar_llevar_pedido_restaurant]@id_mesa int,@llevar bitasupdate tabla_Pre_Venta set is_llevar = @llevarwhere IdMesa = @id_mesa"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarPrecioPorUnidad",
    "Content": "CREATE proc [dbo].[spBuscarPrecioPorUnidad]@codigobarra varchar(200),@idunidad intas--declare @idunidad int = (select id from mst_unidadmedida where nombreunidad = @unidad)select pp.precioUnitario,pp.Id,um.factor,um.id as 'ID_UNIDAD' from mst_ProductoPresentacion ppinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Idinner join mst_UnidadMedida um on pp.idunidad = um.Idwhere ((pd.codigoBarra = @codigobarra or pp.Codigo = @codigobarra) or cast(pd.Id as varchar) = @codigobarra) and pp.idUnidad = @idunidadAND pp.flag = 1 and pp.estado = 1and pd.estado = 1and pd.flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spPedirProforma",
    "Content": "CREATE proc [dbo].[spPedirProforma]@id intasdeclare @idpedido int = (select (isnull(max(IdPedido),0)+1) as Cant from tabla_Pre_Venta)insert into tabla_Pre_Venta(IdPedido,CodigoDoc,IdCliente,DniRuc,RazonSocial,Direccion,Email,pagado,Eliminado,IdUsuario,BolFac,sub_total,igv,Descuento,Total,Idalmacen)select @idpedido,temp.CodigoDoc,temp.idcliente,temp.dniruc,temp.RazonSocial,temp.direccion,temp.email,temp.pagado,temp.eliminado,temp.idusuario,temp.bolfac,temp.sub_total,temp.igv,temp.descuento,temp.total,temp.idalmacenfrom(\tselect CodigoDoc, IdCliente,DniRuc,RazonSocial,Direccion,Email,0 as Pagado,0 as Eliminado,IdUsuario,'03' as bolfac,sub_total,igv,Descuento,Total,Idalmacen\tfrom tabla_Proforma\twhere Id = @id and Pagado = 0 and Eliminado = 0) as temp---insert into tabla_Pre_Venta_Detalle(IdPedido,IdProducto,Descripcion,CodigoBarra,UMedida,Cantidad,Precio,Subtotal,igv,Descuento,total,Pagado,Eliminado,Factor,IdUnidad,Adicional1)select @idpedido,temp.idproducto,temp.descripcion,temp.codigobarra,temp.umedida,temp.cantidad,temp.precio,temp.subtotal,temp.igv,temp.descuento,temp.total,temp.pagado,temp.eliminado,temp.factor,temp.idunidad,temp.Adicional1from(\tselect IdProducto,Descripcion,CodigoBarra,UMedida,Cantidad,Precio,Subtotal,igv,Descuento,total,0 AS Pagado,0 as eliminado,Factor,IdUnidad,Adicional1\tfrom tabla_Proforma_Detalle\twhere idproforma = @id and Pagado = 0 and Eliminado = 0) as temp "
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddClienteDireccion",
    "Content": "CREATE proc [dbo].[SpAddClienteDireccion]@id int,@idCliente int,@direccion varchar(max),@principal bit,@referencia textasif @id = 0begin\tinsert into mst_Cliente_Direccion (IdCliente, Direccion, Estado, Flag, Principal, Referencia)\tvalues (@idCliente, @direccion, 1,1,@principal, @referencia)\tselect CAST(SCOPE_IDENTITY() as int) as 'id'endelsebegin\tupdate mst_Cliente_Direccion set IdCliente = @idCliente, Direccion = @direccion,\tPrincipal = @principal, Referencia = @referencia\twhere Id = @id\tselect @id as 'id'end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_get_precios_by_id_detalle",
    "Content": "CREATE proc [dbo].[sp_get_precios_by_id_detalle]@idalmacen int,@iddetalle int asselectid 'id',C_Interno 'codigo',Cod_Barra 'codigo_barra',RTRIM(LTRIM(Descripcion)) 'descripcion',U_Medida 'unidad_medida',Factor 'factor', Proveedor 'proveedor',Stock_Actual 'stock',F_Vencimiento 'fecha_vencimiento',Precio_Unit 'precio',IdAlmacen 'idalmacen',Id_Unidad 'idunidad',checkStock,PrincipalAlmacen,'' 'imagen'from vw_FiltroProductoswhere C_Interno = @iddetalle and IdAlmacen = @idalmacenorder by C_Interno desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarTransportista",
    "Content": "-----------------------CREATE proc [dbo].[spInsertarTransportista]@nombre varchar(100),@codidoTipoDoc int,@dniruc varchar(20),@licencia varchar(20),@direccion varchar(100),@telefono varchar(20),@email varchar(100),@usuariocrea varchar(50)asinsert into mst_Transportistas(Nombre,CodidoTipoDoc,DniRuc,Licencia,Direccion,Telefono,Email,UsuarioCrea)values(@nombre,@codidoTipoDoc,@dniruc,@licencia,@direccion,@telefono,@email,@usuariocrea)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarProducto_Barra",
    "Content": "----------buscar por codigo barra---------------------CREATE procedure [dbo].[spBuscarProducto_Barra]@buscar varchar(100)asselectpp.Id Id,pd.codigoBarra [Cod/Barra],p.nombreProducto + ' ' + pd.descripcion + ' ' + mmm.descripcion + ' ' +mm.nombreMarca + ' ' + --g.nombreGrupo +' '+--l.nombreLinea+' '+--f.nombreFamilia+' ' +t.descripcion+' '+ c.descripcion  as 'Descripcion',um.nombreUnidad [U. Medida],um.factor [Factor],ppp.nombre [Proveedor],pd.imagenProducto Imagen,pp.precioUnitario Precio,um.id [Id Unidad],p.Id [Id Producto],p.estado Estadofrom mst_Producto p inner join mst_ProductoDetalle pd on p.Id = pd.idProductoinner join mst_ProductoPresentacion pp on pd.Id=  pp.idProductosDetalleinner join mst_Marca mm on p.idMarca = mm.Id--inner join mst_Grupo g on p.idGrupo = g.Id--inner join mst_Linea l on p.idLinea = l.Id--inner join mst_Familia f on p.idFamilia = f.Idinner join mst_Talla t on pd.idTalla = t.Idinner join mst_Color c on pd.idColores = c.Idinner join mst_UnidadMedida um on pp.idUnidad = um.Idinner join mst_Medidas mmm on pd.idmedida = mmm.idinner join mst_Proveedor ppp on p.idproveedor = ppp.idwhere  p.id = pd.IdProducto and pd.Id = pp.IdProductosDetalle and pd.codigoBarra =@buscarand p.flag = 1 and pd.flag = 1 and pp.flag = 1order by p.id asc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spActualizarTotalesProforma",
    "Content": "CREATE proc [dbo].[spActualizarTotalesProforma]@id intasdeclare @subtotal money,@descuento money,@igv moneyset @subtotal  =  (select SUM(Subtotal) from tabla_Proforma_Detalle  where IdProforma = @id and Pagado = 0 and Eliminado = 0)set @descuento  =  (select SUM(Descuento) from tabla_Proforma_Detalle where IdProforma = @id and Pagado = 0 and Eliminado = 0)set @igv  = (select sum(igv) from tabla_Proforma_Detalle  where IdProforma = @id and Pagado = 0 and Eliminado = 0)update tabla_Proforma set sub_total = @subtotal,Descuento = @descuento,igv = @igv,total = ROUND(((@subtotal + @igv)-@descuento), 2)where Id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_get_productos_by_almacen",
    "Content": "CREATE proc [dbo].[sp_get_productos_by_almacen]@idalmacen int,@text VARCHAR(250),@isPrincipal bit = 0asselect top 10id 'id',C_Interno 'codigo',Codigo 'codigo_barra',RTRIM(LTRIM(Descripcion)) 'descripcion',U_Medida 'unidad_medida',Factor 'factor',Imagen 'imagen',Proveedor 'proveedor',Stock_Actual 'stock',F_Vencimiento 'fecha_vencimiento',Precio_Unit 'precio',IdAlmacen 'idalmacen',idUnidad 'idunidad',checkStockfrom vw_FiltroProductoswhere IdAlmacen = @idalmacenand (Descripcion like CONCAT('%', @text, '%') or Cod_Barra = @text or Codigo = @text)--and PrincipalAlmacen = @isPrincipal"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarTransportista",
    "Content": "----------------------------------CREATE proc [dbo].[spModificarTransportista]@id int,@nombre varchar(100),@codidoTipoDoc int,@dniruc varchar(20),@licencia varchar(20),@direccion varchar(100),@telefono varchar(20),@email varchar(100),@usuariomodifica varchar(50)asupdate mst_Transportistas setNombre = @nombre,CodidoTipoDoc = @codidoTipoDoc,DniRuc = @dniruc,licencia = @licencia,Direccion = @direccion,Telefono =@telefono,Email = @email,UsuarioModifica = @usuariomodifica,FechaModifica = GETDATE()where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarProducto_Barra_Pre",
    "Content": "CREATE procedure [dbo].[spBuscarProducto_Barra_Pre]@buscar varchar(100)asselect top 200 pd.id as 'ID' ,pd.codigobarra as 'Codigo Barra',p.nombreProducto +' '+m.nombreMarca+' '+t.descripcion+' '+c.descripcion +' ' + mmm.descripcion [Descripcion],um.nombreUnidad as 'Unidad',(pp.PrecioUnitario) as 'Precio',cast(pro.id as varchar) + '-' + pro.nombre [Proveedor],p.estado as 'Estado',um.id [Id Unidad],p.Idfrom mst_producto pinner join mst_ProductoDetalle pd on p.id = pd.idProductoinner join mst_ProductoPresentacion pp on pd.Id = pp.idProductosDetalleinner join mst_Marca m on p.idMarca = m.Idinner join mst_Talla t on pd.idTalla = t.Idinner join mst_Color c on pd.idColores = c.Idinner join mst_UnidadMedida um on pp.idUnidad = um.Idinner join mst_proveedor pro on p.idproveedor = pro.idinner join mst_Medidas mmm on pd.idmedida = mmm.idwhere pd.codigoBarra =@buscarand p.flag = 1 and pd.flag = 1 and pp.flag = 1order by p.id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarProformaDetalle",
    "Content": "CREATE proc [dbo].[spMostrarProformaDetalle]@id intasselectcast(IdProducto as varchar)IdProducto,CodigoBarra,Descripcion,UMedida,Factor,Cantidad,Precio,Descuento,Subtotal,cast(IdUnidad as varchar) + '-' + cast(Id as varchar)IdUnidaD_IdDetalle,igv,total,Adicional1 adicional1,getdate() adicional2,'' adicional3,'' adicional4,CAST('0' AS bit) igv_incluido,CAST('0' AS bit) IsCodBarraBusquedafrom tabla_Proforma_Detallewhere Pagado = 0 and Eliminado = 0 and IdProforma = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddComprasDetalles",
    "Content": "CREATE proc [dbo].[SpAddComprasDetalles]@Id int,@IdProducto int,@Descripcion varchar(100),@IdUnidad int,@Cantidad int,@Precio money,@Subtotal money,@Igv money,@Descuento money,@Total money,@Usuariocrea varchar(50),@IdCompra int,@IgvIncluido bit,@Lote varchar(50),@FechaVencimiento date,@RegistroSanitario varchar(100),@CodigoBarra varchar(50),@Unidad VARCHAR(50)asif @Id = 0begin\tinsert into mst_ComprasDetalles (IdProducto,Descripcion,IdUnidad,Cantidad,Precio,Subtotal,Igv,Descuento,Total,UsuarioCrea,Estado,Flag,IdCompra, igv_incluido, Lote, FechaVencimiento, RegistroSanitario, CodigoBarra, Unidad)\tvalues(@idproducto,@descripcion,@idunidad,@cantidad,@precio,@subtotal,@igv,@descuento,@total,@usuariocrea,1,1,@idcompra,@IgvIncluido, @Lote, @FechaVencimiento, @RegistroSanitario, @CodigoBarra, @Unidad)\tselect CAST(SCOPE_IDENTITY() as int) as Idendelse\tbegin\tupdate mst_ComprasDetalles set IdProducto = @IdProducto, Descripcion = @Descripcion, @IdUnidad = @IdUnidad, Cantidad = @Cantidad, Precio = @Precio, Subtotal = @Subtotal, Igv = @Igv,\tDescuento = @Descuento, Total = @Total, UsuarioModifica = @Usuariocrea, IdCompra = @IdCompra, igv_incluido = @IgvIncluido, Lote = @Lote, FechaVencimiento = @FechaVencimiento,\tRegistroSanitario = @RegistroSanitario, CodigoBarra = @CodigoBarra, Unidad = @Unidad\twhere Id = @Id\tselect @Id as Id\tend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarTransportista",
    "Content": "-----------------------CREATE proc [dbo].[spEliminarTransportista]@id intasupdate mst_Transportistas set estado = 0, flag = 0where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarProducto_Nombre",
    "Content": "CREATE proc [dbo].[spBuscarProducto_Nombre]@idalmacen int,@topin int,@buscar varchar(100),@anulados bit,@idgrupo intasif(@anulados = 0)if @idgrupo > 0\tbegin\tselect top (@topin)  *,\tdbo.F_GetUltimoCostoProductoDetalle(Id, @idalmacen) as 'Costo'\tfrom\tvw_FiltroMstProductos\twhere idalmacen = @idalmacen and estado = 1 and idgrupo = @idgrupo and\t((Descripcion  like '%'+@buscar+'%') \tor (iif(cast(F_Vence as varchar) is null,'Sin definir',cast(F_Vence as varchar)) like '%' + @buscar+'%' )\tor (cast(Id as varchar) = @buscar))\tor Cod_Barra = @buscar\tendelse\tbegin\tselect top (@topin)  * ,\tdbo.F_GetUltimoCostoProductoDetalle(Id, @idalmacen) as 'Costo'\tfrom\tvw_FiltroMstProductos\twhere idalmacen = @idalmacen and estado = 1 and\t((Descripcion  like '%'+@buscar+'%') \tor (iif(cast(F_Vence as varchar) is null,'Sin definir',cast(F_Vence as varchar)) like '%' + @buscar+'%' )\tor (cast(Id as varchar) = @buscar))\t \tendelseif @idgrupo > 0\tbegin\tselect top (@topin) * ,\tdbo.F_GetUltimoCostoProductoDetalle(Id, @idalmacen) as 'Costo'\tfrom vw_FiltroMstProductos\twhere idalmacen = @idalmacen and estado = 0 and idgrupo = @idgrupo and\t((Descripcion like '%'+@buscar+'%') \tor (iif(cast(F_Vence as varchar) is null,'Sin definir',cast(F_Vence as varchar)) like '%' + @buscar+'%')\tor (cast(Id as varchar) = @buscar))\t \tendelse\tbegin\tselect top (@topin) * ,\tdbo.F_GetUltimoCostoProductoDetalle(Id, @idalmacen) as 'Costo'\tfrom vw_FiltroMstProductos\twhere idalmacen = @idalmacen and estado = 0 and\t((Descripcion like '%'+@buscar+'%') \tor (iif(cast(F_Vence as varchar) is null,'Sin definir',cast(F_Vence as varchar)) like '%' + @buscar+'%')\tor (cast(Id as varchar) = @buscar))\t \tend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarProformaDetalle",
    "Content": "CREATE proc [dbo].[spEliminarProformaDetalle]@id intasdelete from tabla_Proforma_Detalle where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "InsertarUsuarioItemsInicio",
    "Content": "CREATE proc [dbo].[InsertarUsuarioItemsInicio]@idusuario intasinsert into tabla_Usuarios_Menu (idmenu,idusuario)select id,@idusuario from tabla_Menus;insert into tabla_Usuario_SubMenu(idmenu,idsubmenu,idusuario)select idmenu,id,@idusuario from tabla_SubMenus;"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_get_stock_by_id_detalle_and_id_almacen",
    "Content": "CREATE proc [dbo].[sp_get_stock_by_id_detalle_and_id_almacen]@idalmacen int,@idproducto intasselectid,IdAlmacen 'idalmacen',IdProducto 'idproducto',Entradas 'entradas',Salidas 'salidas',Saldo 'saldo'from Stocks_Acumuladoswhere IdAlmacen = @idalmacen and IdProducto = @idproducto"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarTransportita",
    "Content": "----------------------------CREATE proc [dbo].[spMostrarTransportita]asselectt.id,nombre,td.descripcion [DniRuc],t.DniRuc [Numero],t.Licencia,t.Direccion,t.Telefono,t.Email,t.UsuarioCrea,t.FechaCrea,t.UsuarioModifica,t.FechaModifica,t.CodidoTipoDocfrom mst_Transportistas tinner join mst_TipoDocumento td on t.CodidoTipoDoc = td.codigoSunatwhere t.Flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarProducto_Nombre_Pre",
    "Content": "----------buscar por nombre---------------------CREATE procedure [dbo].[spBuscarProducto_Nombre_Pre]@buscar varchar(100)asselect top 200 pp.id as 'ID' ,pd.codigobarra as 'Codigo Barra',p.nombreProducto +' '+m.nombreMarca+' '+t.descripcion+' '+c.descripcion +' ' + mmm.descripcion [Descripcion],um.nombreUnidad as 'Unidad',um.factor as 'Factor',(pd.imagenProducto) as 'Imagen',(pp.PrecioUnitario) as 'Precio',um.id [Id Unidad]from mst_producto pinner join mst_ProductoDetalle pd on p.id = pd.idProductoinner join mst_ProductoPresentacion pp on pd.Id = pp.idProductosDetalleinner join mst_Marca m on p.idMarca = m.Id--inner join mst_Grupo g on p.idGrupo = g.Id--inner join mst_Linea l on p.idLinea = l.Id--inner join mst_Familia f on p.idFamilia = f.Idinner join mst_Talla t on pd.idTalla = t.Idinner join mst_Color c on pd.idColores = c.Idinner join mst_UnidadMedida um on pp.idUnidad = um.Idinner join mst_Medidas mmm on pd.idmedida = mmm.idwhere p.id = pd.IdProducto and pd.Id = pp.IdProductosDetalle and (p.nombreProducto +' '+m.nombreMarca+' '+t.descripcion+' '+c.descripcion +' ' + mmm.descripcion)like '%'+@buscar+'%'and p.flag = 1 and pd.flag = 1 and pp.flag = 1order by p.id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarVenta_Ext",
    "Content": "CREATE proc [dbo].[spInsertarVenta_Ext]@idcaja int,@fecha date,@total money,@idpiso int,@idmesa int,@idapertura intasinsert into tabla_Venta_Ext(idcaja,fecha,IdPiso,IdMesa,IdApertura, total)values(@idcaja,@fecha,@idpiso,@idmesa,@idapertura,@total)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddDocumentoVentaDefecto",
    "Content": "CREATE proc [dbo].[SpAddDocumentoVentaDefecto]@documento char(2)asupdate tabla_configuracion_general set DocumentoVentaDefecto = @documento"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_get_menu",
    "Content": "CREATE proc [dbo].[sp_get_menu]asselect * from menu"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarTransportista",
    "Content": "CREATE proc [dbo].[spBuscarTransportista]@buscar varchar(100)asselectt.id,nombre,td.descripcion [DniRuc],t.DniRuc [Numero],t.Licencia,t.Direccion,t.Telefono,t.Email,t.UsuarioCrea,t.FechaCrea,t.UsuarioModifica,t.FechaModifica,t.CodidoTipoDocfrom mst_Transportistas tinner join mst_TipoDocumento td on t.CodidoTipoDoc = td.codigoSunatwhere Nombre+Licencia like '%' + @buscar + '%' and t.Flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spPreVenta_Mostrar_Normal_Detalles",
    "Content": "CREATE proc [dbo].[spPreVenta_Mostrar_Normal_Detalles]@idpedido int, --1@bit bit, --0@idpiso int, --1@esconvenio bit --1asif(@bit = 0)\tbegin\t\tif(@esconvenio = 0)\t\t\tbegin\t\t\t\tselect cast(IdProducto as varchar)IdProducto\t\t\t\t,CodigoBarra,\t\t\t\tDescripcion,\t\t\t\tUMedida,\t\t\t\tFactor,\t\t\t\tCantidad,\t\t\t\tPrecio,\t\t\t\tDescuento,\t\t\t\tSubtotal,\t\t\t\tcast(IdUnidad as varchar) + '-' + cast(Id as varchar)IdUnidaD_IdDetalle,\t\t\t\tigv,\t\t\t\ttotal,\t\t\t\tadicional1,\t\t\t\tAdicional2,\t\t\t\tAdicional3,\t\t\t\tAdicional4,\t\t\t\tigv_incluido,\t\t\t\tIsCodBarraBusqueda\t\t\t\tfrom tabla_Pre_Venta_Detalle\t\t\t\twhere IdPedido = @idpedido and Pagado=  0 and Eliminado = 0\t\t\tend\t\telse\t\t\tbegin\t\t\t\tselect cast(IdProducto as varchar)IdProducto\t\t\t\t,CodigoBarra,\t\t\t\tDescripcion,\t\t\t\tUMedida,\t\t\t\tFactor,\t\t\t\tCantidad,\t\t\t\tPrecio,\t\t\t\tDescuento,\t\t\t\tSubtotal,\t\t\t\tcast(IdUnidad as varchar) + '-' + cast(Id as varchar)IdUnidaD_IdDetalle,\t\t\t\tigv,\t\t\t\ttotal,\t\t\t\tadicional1,\t\t\t\tAdicional2,\t\t\t\tAdicional3,\t\t\t\tAdicional4,\t\t\t\tigv_incluido,\t\t\t\t0 as 'IsCodBarraBusqueda'\t\t\t\tFrom tabla_Pre_Venta_Detalle_Convenio\t\t\t\twhere IdPedido = @idpedido and Pagado =  0 and Eliminado = 0\t\t\t\tend\tendelse if(@bit = 1)\tbegin\t\tselect cast(IdProducto as varchar)IdProducto\t\t\t\t,CodigoBarra,\t\t\t\tDescripcion,\t\t\t\tUMedida,\t\t\t\tFactor,\t\t\t\tCantidad,\t\t\t\tPrecio,\t\t\t\tDescuento,\t\t\t\tSubtotal,\t\t\t\tcast(IdUnidad as varchar) + '-' + cast(Id as varchar)IdUnidaD_IdDetalle,\t\t\t\tigv,\t\t\t\ttotal,\t\t\t\tIdPiso,\t\t\t\tadicional1,\t\t\t\tAdicional2,\t\t\t\tAdicional3,\t\t\t\tAdicional4,\t\t\t\tigv_incluido,\t\t\t\tIsCodBarraBusqueda\t\t\t\tfrom tabla_Pre_Venta_Detalle\t\t\t\twhere IdMesa = @idpedido and IdPiso = @idpiso and Pagado=  0 and Eliminado = 0\tend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarProductoDetalle",
    "Content": "--buscarCREATE proc [dbo].[spBuscarProductoDetalle]@id intasselect pd.id as 'Id-Detalle',cast(t.id as varchar)+ '-' + t.descripcion as 'Talla',cast(c.Id as varchar) + '-' + c.descripcion as 'Color',pd.codigoBarra as 'Codigo-Barra',pd.imagenProducto as 'Imagen',pd.estado as 'Estado'from mst_ProductoDetalle pdinner join mst_Talla t on pd.idTalla = t.Idinner join mst_Color c on pd.idColores = c.Idwhere pd.idProducto = @idand pd.flag = 1order by pd.Id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarVentaDet_Ext",
    "Content": "-------CREATE proc [dbo].[spInsertarVentaDet_Ext]@idventa int,@idventadet int,@idproducto int,@descripcion varchar(200),@precio money,@cantidad money,@total moneyasinsert into tabla_Venta_Det_Ext(idventa,idproducto, Descripcion,precio, cantidad,total)values(@idventa,@idproducto,@descripcion,@precio, @cantidad,@total)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddEntradaDirectaProducto",
    "Content": "CREATE proc [dbo].[SpAddEntradaDirectaProducto]@state bitasupdate tabla_configuracion_general set EntradaDirectaProducto = @state"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarGastos",
    "Content": "CREATE proc [dbo].[spBuscarGastos]@buscar VARCHAR(250),@fecha_ini date,@fecha_fin dateasselect *,cast(t.Id as varchar) + '-'+ t.Descripcion TipoGasto from mst_GastosOperativos ginner join mst_tipoGasto t on g.IdTipoGasto = t.Idwhere eliminado = 0 and g.Concepto + ' ' + g.Proveedor like '%' + @buscar+'%' and CAST(g.Fecha as date) BETWEEN @fecha_ini and @fecha_fin--where descripcion like '%' + @buscar + '%' and flag = 1order by g.id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spReaperturarCaja",
    "Content": "CREATE proc [dbo].[spReaperturarCaja]@idapertura int,@idCaja int,@idUsuario intasupdate mst_Apertura set Abierto_Cerrado = 0where numero = @idapertura and IdCaja = @idCajaand IdUsuario = @idUsuario"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarPreContacto_Normal",
    "Content": "CREATE proc [dbo].[spModificarPreContacto_Normal]@id int,@codigodoc char(2),@idcliente int,@dniruc varchar(50),@razonsocial varchar(200),@direccion varchar(200),@email varchar(200),@idusuario int,@bolfac char(2),@pm bitasif(@pm = 0)beginupdate tabla_Pre_Venta setCodigoDoc = @codigodoc,IdCliente = @idcliente,DniRuc = @dniruc,RazonSocial = @razonsocial,Direccion = @direccion,Email = @email,IdUsuario = @idusuario,bolfac = @bolfacwhere IdPedido = @idand Pagado = 0 and Eliminado = 0endelsebeginupdate tabla_Pre_Venta setCodigoDoc = @codigodoc,IdCliente = @idcliente,DniRuc = @dniruc,RazonSocial = @razonsocial,Direccion = @direccion,Email = @email,IdUsuario = @idusuario,bolfac = @bolfacwhere IdMesa = @idand Pagado = 0 and Eliminado = 0endexec spIngresarOtrosImpuestos_Preventa @id, @pm"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarProductoPresentacion",
    "Content": "--buscarCREATE proc [dbo].[spBuscarProductoPresentacion]@id intasselect pp.id as 'ID-P',pp.idproductosdetalle as 'ID-D',(select nombreunidad from mst_UnidadMedida um where um.id = pp.idunidad) as 'Unidad',pp.preciounitario as 'Precio',pp.estado as 'Estado'from mst_ProductoPresentacion ppwhere pp.idproductosdetalle = @id and pp.flag = 1order by pp.id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetClienteById",
    "Content": "CREATE proc [dbo].[SpGetClienteById]@id intasselect top 1c.Id,idDocumento 'IdDocumento',td.descripcion 'Documento',numeroDocumento 'NumeroDocumento',razonSocial 'RazonSocial',cd.Direccion 'Direccion',telefono 'Telefono',correo 'Correo',ISNULL(delivery, 0) 'Delivery',ISNULL(nacionalidad, 1) 'Nacionalidad',DefaultPago 'DefaultPago',c.NombreCarrera,c.IdProgramaEstudio,c.Nivelfrom mst_Cliente c inner join mst_TipoDocumento td on c.idDocumento = td.codigoSunatinner join mst_Cliente_Direccion cd on c.Id = cd.IdClientewhere c.estado = 1 and c.flag = 1and cd.Principal = 1and c.id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarPreVenta",
    "Content": "CREATE proc [dbo].[spEliminarPreVenta]@id int,@bit bit,@idpiso int,@esconvenio bitasif(@bit = 0)beginif(@esconvenio = 0)\tbegin\t\tdelete from tabla_Pre_Venta where idpedido = @id and Pagado = 0\t\tdelete from tabla_Pre_Venta_Detalle where IdPedido = @id and Pagado = 0\tendelse\tbegin\t\tdelete from tabla_Pre_Venta_Convenio where Id = @id and Pagado = 0\t\tdelete from tabla_Pre_Venta_Detalle_Convenio where IdPedido = @id and Pagado = 0\tendendelsedelete from tabla_Pre_Venta where IdMesa = @id and IdPiso =@idpiso and Pagado = 0delete from tabla_Pre_Venta_Detalle where IdMesa = @id and IdPiso = @idpiso and Pagado = 0"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddUnidadMedida",
    "Content": "CREATE proc [dbo].[SpAddUnidadMedida]@id int,@nombreUnidad varchar(50),@factor floatasif @id = 0begin\tinsert into mst_UnidadMedida (nombreUnidad, factor)\tvalues(@nombreUnidad, @factor)\tselect CAST(SCOPE_IDENTITY() as int)endelsebegin\tupdate mst_UnidadMedida set nombreUnidad = @nombreUnidad,\tfactor = @factor, fechaModifica = GETDATE()\twhere id = @id\tselect @idend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarVenta_Ext",
    "Content": "------------------------------------------------------------------CREATE proc [dbo].[spEliminarVenta_Ext]@idventa intasdelete from tabla_Venta_Ext where idventa = @idventadelete from tabla_venta_det_extwhere IdVenta = @idventa"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddInventario",
    "Content": "CREATE proc [dbo].[SpAddInventario]@id int,@idAlmacen int,@almacen VARCHAR(50),@observacion varchar(max),@tipoInventario int,@fecha datetime,@isClosed bit,@usuarioCrea varchar(50),@estado bitasif @id = 0begin\tinsert into Inventario (IdAlmacen, Almacen, Observacion,TipoInventario,\tFecha, IsClosed, UsuarioCrea)\tvalues(@idAlmacen, @almacen,  @observacion,@tipoInventario,\t@fecha,@isClosed,@usuarioCrea)\tselect CAST(SCOPE_IDENTITY() as int) 'id'endelsebegin\tupdate Inventario set IdAlmacen = @idAlmacen, Almacen = @almacen, Observacion = @observacion,\tTipoInventario = @tipoInventario, Fecha = @fecha, IsClosed = @isClosed,\tUsuarioModifica = @usuarioCrea, FechaModifica = GETDATE()\twhere id = @id\tselect @id 'id'end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spPagarPreVenta",
    "Content": "CREATE proc [dbo].[spPagarPreVenta]@id int,@mesaoid bit,@idpiso intasif(@mesaoid = 0)\tbegin\t\tupdate tabla_Pre_Venta set Pagado = 1 where IdPedido = @id\t\tupdate tabla_Pre_Venta_Detalle set Pagado = 1 where IdPedido = @id\t\t\tendelse\tbegin\tupdate tabla_Pre_Venta set Pagado = 1 where IdMesa = @id and IdPiso = @idpiso and Pagado = 0\t\tupdate tabla_Pre_Venta_Detalle set Pagado = 1 where IdMesa = @id and IdPiso = @idpiso and pagado = 0 \t\tend "
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarProductoVentaBarra",
    "Content": "CREATE proc [dbo].[spBuscarProductoVentaBarra]@buscar varchar(100)asselect pp.Id Id,pd.codigoBarra [Cod/Barra],p.nombreProducto + ' ' + pd.descripcion + ' ' + mmm.descripcion + ' ' +mm.nombreMarca + ' ' + --g.nombreGrupo +' '+--l.nombreLinea+' '+--f.nombreFamilia+' ' +t.descripcion+' '+ c.descripcion  as 'Descripcion',um.nombreUnidad [U. Medida],um.factor [Factor],pd.imagenProducto Imagen,pp.precioUnitario Precio,um.id [Id Unidad]from mst_Producto p inner join mst_ProductoDetalle pd on p.Id = pd.idProductoinner join mst_ProductoPresentacion pp on pd.Id=  pp.idProductosDetalleinner join mst_Marca mm on p.idMarca = mm.Id--inner join mst_Grupo g on p.idGrupo = g.Id--inner join mst_Linea l on p.idLinea = l.Id--inner join mst_Familia f on p.idFamilia = f.Idinner join mst_Talla t on pd.idTalla = t.Idinner join mst_Color c on pd.idColores = c.Idinner join mst_UnidadMedida um on pp.idUnidad = um.Idinner join mst_Medidas mmm on pd.idmedida = mmm.idwhere p.flag = 1 and p.estado = 1 and codigoBarra = @buscarorder by pp.Id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetCompras",
    "Content": "CREATE proc [dbo].[SpGetCompras]@text varchar(max),@fechaInit date,@fechaFin dateasselectc.id as 'Id',IIF(c.TipoDoc = '01', 'Factura', 'Boleta') as 'Documento',a.Nombre as 'Almacen',fp.FormadePago as 'FormaPago',CONCAT(Serie, '-', Numero) as 'Serie',c.RazonSocial as 'Proveedor',c.Direccion,c.Telefono,c.FechaEmision,c.Subtotal,c.TotalIgv,c.Totaldescuento as 'TotalDescuento',c.Total,c.ImportePagado,c.UsuarioCrea,IIF(c.Total > c.ImportePagado, cast(1 as bit), cast(0 as bit)) as 'Deuda',c.isclosed as 'Closed'from mst_Compras cinner join mst_Almacen a on c.IdAlmacen = a.Idinner join mst_FormaPago fp on c.FormaPago = fp.Idwhere c.Estado = 1 and  c.Flag = 1and FechaEmision between @fechaInit and @fechaFinand (CONCAT(Serie, Numero) like CONCAT('%', @text, '%')or c.RazonSocial like CONCAT('%', @text, '%'))order by c.id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarVenta_Det_Ext",
    "Content": "CREATE proc [dbo].[spEliminarVenta_Det_Ext]@idventadet intasdelete from tabla_Venta_Det_Extwhere IdVenta_Det = @idventadet"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddInventarioDetalle",
    "Content": "CREATE proc [dbo].[SpAddInventarioDetalle]@id int,@idInventario int,@idGrupo int,@grupo varchar(100),@idProducto int,@nombreProducto VARCHAR(max),@codigoBarra VARCHAR(50),@cantidad money,@costo money,@total money,@idUnidad int,@unidad varchar(50),@factor money,@usuarioCrea varchar(50),@estado bitasif @id = 0begin\tinsert into InventarioDetalle(IdInventario, IdGrupo,Grupo, IdProducto, NombreProducto, CodigoBarra, Cantidad, Costo, Total, IdUnidad, Unidad, Factor,\tUsuarioCrea, FechaCrea, Estado, Flag)\tvalues(@idInventario,@idGrupo,@grupo, @idProducto, @nombreProducto, @codigoBarra, @cantidad,@costo, @total, @idUnidad, @unidad,@factor,\t@usuarioCrea, GETDATE(), 1, 1)endelsebegin\tupdate InventarioDetalle set IdInventario = @idInventario,IdGrupo = @idGrupo, Grupo = @grupo, IdProducto = @idProducto,\tNombreProducto = @nombreProducto, CodigoBarra = @codigoBarra,\tCantidad = @cantidad, Costo = @costo, Total = @total, IdUnidad = @idUnidad, Unidad = @unidad, Factor = @factor,\tUsuarioModifica = @usuarioCrea, FechaModifica = GETDATE(), Estado= @estado\twhere id = @id\tselect @id 'id'end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_get_reporte_cobranza_vendedor_almacenMovimiento",
    "Content": "CREATE proc [dbo].[sp_get_reporte_cobranza_vendedor_almacenMovimiento]@fecha_ini date,@fecha_fin date,@id_vendedor intasSELECT * FROM (SELECT am.idvendedor as CodVen,u.usuario as VENDEDOR,s.fecha,am.idCliente as Doc,(am.serie+'-'+CAST(am.numero as varchar)) as NumDoc,am.total,ISNULL(s.Monto,0) AS Monto,ts.Descripcion as tipo_pago,c.RazonSocial as clienteFROM mst_almacen_movimiento aminner join mst_Cliente c on am.idCliente = c.IdINNER JOIN api_almacen_pagos s ON am.id = s.almacen_movimiento_idINNER JOIN tbl_TipoPago_Seguimiento ts ON ts.Id = s.tipo_pago_seguimiento_idINNER JOIN mst_Usuarios u ON u.Id = AM.idvendedorWHERE CAST(s.fecha as date) between @fecha_ini and @fecha_fin and am.idvendedor = @id_vendedor) as cobranzaspivot (sum(Monto)for tipo_pago in ([EFECTIVO], [CHEQUE], [TRANSFERENCIA], [DEPOSITO])) PivotTable"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spReporteSalidaClientes",
    "Content": "CREATE proc [dbo].[spReporteSalidaClientes]@fecha_inicio date,@fecha_fin dateasSELECT ma.Id,(ma.serie+'-'+cast(ma.numero as varchar(10))) as serie_num, ma.fecha,mc.numeroDocumento,mc.razonSocial,ma.direccion,SUM(mad.total) as Total, iif(ma.credito=1,'CREDITO','CONTADO') as credito, ma.documento, ma.referenciaFROM mst_almacen_movimiento maINNER JOIN mst_almacen_movimiento_detalle madON ma.Id = mad.almacen_movimiento_idINNER JOIN mst_Cliente mcON mc.Id = ma.IdClienteWHERE ma.entrada=0 AND (mad.estado = 1 AND mad.flag = 1) AND (ma.estado=1 AND ma.flag=1) AND ma.fecha BETWEEN @fecha_inicio AND @fecha_fin--and ma.Id = 10030GROUP BY ma.Id,ma.serie,ma.numero, ma.fecha,mc.numeroDocumento,mc.razonSocial,ma.direccion,ma.credito, ma.documento, ma.referencia"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarProductoVentaBarraRapida",
    "Content": "CREATE proc [dbo].[spBuscarProductoVentaBarraRapida]@buscar varchar(100),@opcion intasif(@opcion=1)beginselect pp.Id Id,pd.codigoBarra 'CodBarra',p.nombreProducto + ' ' + pd.descripcion + ' ' + mmm.descripcion + ' ' +mm.nombreMarca + ' ' + --g.nombreGrupo +' '+--l.nombreLinea+' '+--f.nombreFamilia+' ' +t.descripcion+' '+ c.descripcion  as 'Descripcion',um.nombreUnidad 'UnidadMedida',um.factor [Factor],pd.imagenProducto Imagen,pp.precioUnitario Precio,um.id 'IdUnidad',pp.Principal,p.IdGrupo as 'idgrupo',pd.Id as 'IdProductoDetalle'from mst_Producto p inner join mst_ProductoDetalle pd on p.Id = pd.idProductoinner join mst_ProductoPresentacion pp on pd.Id=  pp.idProductosDetalleinner join mst_Marca mm on p.idMarca = mm.Id--inner join mst_Grupo g on p.idGrupo = g.Id--inner join mst_Linea l on p.idLinea = l.Id--inner join mst_Familia f on p.idFamilia = f.Idinner join mst_Talla t on pd.idTalla = t.Idinner join mst_Color c on pd.idColores = c.Idinner join mst_UnidadMedida um on pp.idUnidad = um.Idinner join mst_Medidas mmm on pd.idmedida = mmm.idwhere p.flag = 1 and p.estado = 1 and pd.estado = 1and pd.flag  = 1and pp.estado = 1and pp.flag = 1and (pd.codigoBarra = @buscar or pp.Codigo=@buscar) --or cast(pd.id as varchar) = @buscar)--and pp.principal = 1order by pp.id descendelsebeginselect pp.Id Id,pd.codigoBarra 'CodBarra',p.nombreProducto + ' ' + pd.descripcion + ' ' + mmm.descripcion + ' ' +mm.nombreMarca + ' ' + --g.nombreGrupo +' '+--l.nombreLinea+' '+--f.nombreFamilia+' ' +t.descripcion+' '+ c.descripcion  as 'Descripcion',um.nombreUnidad 'UnidadMedida',um.factor [Factor],pd.imagenProducto Imagen,pp.precioUnitario Precio,um.id 'IdUnidad',pp.Principal,p.IdGrupo as 'idgrupo',pd.Id as 'IdProductoDetalle'from mst_Producto p inner join mst_ProductoDetalle pd on p.Id = pd.idProductoinner join mst_ProductoPresentacion pp on pd.Id=  pp.idProductosDetalleinner join mst_Marca mm on p.idMarca = mm.Id--inner join mst_Grupo g on p.idGrupo = g.Id--inner join mst_Linea l on p.idLinea = l.Id--inner join mst_Familia f on p.idFamilia = f.Idinner join mst_Talla t on pd.idTalla = t.Idinner join mst_Color c on pd.idColores = c.Idinner join mst_UnidadMedida um on pp.idUnidad = um.Idinner join mst_Medidas mmm on pd.idmedida = mmm.idwhere p.flag = 1 and p.estado = 1 and pd.estado = 1and pd.flag  = 1and pp.estado = 1and pp.flag = 1and cast(pd.id as varchar) = @buscar--and pp.principal = 1order by pp.id descend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarProforma",
    "Content": "CREATE proc [dbo].[spEliminarProforma]@id intasupdate tabla_Proforma set Eliminado = 1where Id = @idupdate tabla_Proforma_Detalle set Eliminado = 1where IdProforma = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetUnidadMedidaById",
    "Content": "CREATE proc [dbo].[SpGetUnidadMedidaById]@id intasselect Id,nombreUnidad 'Descripcion',factorfrom mst_UnidadMedidawhere id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddPedido",
    "Content": "-------------------------CREATE proc [dbo].[SpAddPedido]@id int,@idPedido int,@idMesa int,@codigoDoc int,@idCliente int,@dniRuc varchar(20),@razonSocial varchar(250),@direccion varchar(250),@email varchar(250),@pagado bit,@eliminado bit,@idUsuario int,@bolFac char(2),@subTotal money,@igv money,@descuento money,@total money,@idAlmacen int,@proforma bit,@idPiso int,@numSecuencia int,@preCuenta bit,@otrosImpuestos money,@adicional varchar(max),@beneficiario varchar(max),@idConvenio int,@idParentesco int,@isLlevar bit,@isDelivery bit,@countPecho int,@countPierna int,@textObservacion varchar(max)asif @Id = 0begin\tinsert into tabla_Pre_Venta (IdPedido, IdMesa, CodigoDoc, IdCliente, DniRuc, RazonSocial, Direccion,\tEmail, Pagado, Eliminado, IdUsuario, BolFac, sub_total, igv, Descuento, Total, Idalmacen, Proforma,\tIdPiso, NumSecuencia, PreCuenta, Otro_Imp, Adicional, Beneficiario, IdConvenio, Fecha, is_llevar,\tis_delivery, countPecho, countPierna, textObservation)\tvalues (@IdPedido, @IdMesa, @CodigoDoc, @IdCliente, @DniRuc, @RazonSocial, @Direccion,\t@Email, @Pagado, @Eliminado, @IdUsuario, @BolFac, @SubTotal, @Igv, @Descuento, @Total, @IdAlmacen, @Proforma,\t@IdPiso, @NumSecuencia, @PreCuenta, @OtrosImpuestos, @Adicional, @beneficiario, @IdConvenio, GETDATE(), @IsLlevar,\t@IsDelivery, @CountPecho, @CountPierna, @TextObservacion)\tselect CAST(SCOPE_IDENTITY() as int) 'id'endelsebegin\tupdate tabla_Pre_Venta set IdPedido = @IdPedido, IdMesa = @IdMesa, CodigoDoc = @CodigoDoc, IdCliente = @IdCliente,\tDniRuc = @DniRuc, RazonSocial = @RazonSocial, Direccion = @Direccion, Email = @Email, Pagado = @Pagado, Eliminado = @Eliminado,\tIdUsuario = @IdUsuario, BolFac = @BolFac, sub_total = @SubTotal, igv = @Igv, Descuento = @Descuento, Total = @Total, Idalmacen = @IdAlmacen,\tProforma = @Proforma, IdPiso = @IdPiso, NumSecuencia = @NumSecuencia, PreCuenta = @PreCuenta, Otro_Imp = @OtrosImpuestos, Adicional = @Adicional,\tBeneficiario = @beneficiario, IdConvenio = @IdConvenio, is_llevar = @IsLlevar, is_delivery = @IsDelivery, countPecho = @CountPecho,\tcountPierna = @CountPierna, textObservation = @TextObservacion\t\twhere Id = @Id\tselect @Id as 'id'end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarFamilia",
    "Content": "---Procedimiento de Almacenado MostrarCREATE procedure [dbo].[spMostrarFamilia]@top bitasif(@top = 0)select top 200 f.Id as 'ID',f.nombreFamilia as 'Nombre',l.nombreLinea as 'Linea', f.usuarioCrea as 'Usuario Creador', f.fechaCrea as 'Fecha de Creación', f.usuarioModifica as 'Usuario Modifica', f.fechaModifica as 'Fecha Modificación', f.estado as 'Estado',cast(l.Id as varchar) as 'ID LINEA'from  mst_Familia finner join  mst_Linea l on f.idLinea = l.Idwhere f.flag = 1order by f.id descelseselect f.Id as 'ID',f.nombreFamilia as 'Nombre',l.nombreLinea as 'Linea', f.usuarioCrea as 'Usuario Creador', f.fechaCrea as 'Fecha de Creación', f.usuarioModifica as 'Usuario Modifica', f.fechaModifica as 'Fecha Modificación', f.estado as 'Estado',cast(l.Id as varchar) as 'ID LINEA'from  mst_Familia finner join  mst_Linea l on f.idLinea = l.Idwhere f.flag = 1order by f.id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_get_reporte_movimiento_emitidos_almacenMovimiento",
    "Content": "CREATE proc [dbo].[sp_get_reporte_movimiento_emitidos_almacenMovimiento]@fecha dateasSELECT c.idDocumento,(am.serie+'-'+CAST(am.numero AS varchar)) as NumDoc, c.RazonSocial, CAST(am.fecha AS date) AS fecha, am.total,u.nombreFROM mst_almacen_movimiento aminner join mst_Cliente c on am.idCliente = c.IdINNER JOIN mst_Usuarios u ON u.Id = am.idvendedorWHERE CAST(am.fecha AS date) =  @fecha"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarGuiaDetalle",
    "Content": "CREATE proc [dbo].[spMostrarGuiaDetalle]@id intasselect IdProducto,gd.CodigoBarra,descripcion Descripcion,Cantidad,um.nombreUnidad Unidad,um.factor,Peso,cast(IdUnidad as varchar) + '-' + cast(gd.Id as varchar) as 'IdUnidad_Detalle',gd.Adicional1from mst_Guia_det gdinner join mst_unidadmedida um on gd.IdUnidad = um.idwhere IdGuia= @id and gd.Flag = 1  and Anulado = 0"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarProductoVentaNombre",
    "Content": "CREATE proc [dbo].[spBuscarProductoVentaNombre]@buscar varchar(100),@idalmacen int,@idgrupo int,@opcion int,@compras bit = 0,@esTienda int = 0asdeclare @toppp int = 100if(@idgrupo = 0)beginif(@opcion = 1)beginselect top (@toppp) * from vw_FiltroProductos where (Descripcion like '%' + @buscar + '%') and idalmacen = @idalmacenand PrincipalAlmacen = case when @compras = 0 then PrincipalAlmacen else 1 endand VerEnVentas = case when @esTienda = 0 then VerEnVentas else 1 endorder by idproducto,principal descendelse if(@opcion = 2)beginselect top (@toppp) * from vw_FiltroProductoswhere cast(C_Interno as varchar) = @buscar and idalmacen = @idalmacenand PrincipalAlmacen = case when @compras = 0 then PrincipalAlmacen else 1 endand VerEnVentas = case when @esTienda = 0 then VerEnVentas else 1 endorder by Id descendelse if(@opcion = 3)beginselect top (@toppp) * fromvw_FiltroProductoswhere cast(Cod_Barra as varchar) = @buscar and idalmacen = @idalmacenand PrincipalAlmacen = case when @compras = 0 then PrincipalAlmacen else 1 endand VerEnVentas = case when @esTienda = 0 then VerEnVentas else 1 endorder by Id descend---endelsebeginselect *from vw_FiltroProductoswhere (Descripcion like '%' + @buscar + '%' or Cod_Barra = @buscar) and idalmacen = @idalmacen and IdGrupo = @idgrupo and idmedida != 2and PrincipalAlmacen = case when @compras = 0 then PrincipalAlmacen else 1 endorder by Descripcion descend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spFormatoproforma",
    "Content": "CREATE proc [dbo].[spFormatoproforma]@id intasSELECT *,dbo.fn_ConvertirNumeroLetra(a.Total,'Soles') as TotalLetras FROM tabla_Proforma aINNER JOIN tabla_Proforma_Detalle b ON a.id=b.idproformaINNER JOIN mst_TipoDocumento c ON c.codigoSunat=a.CodigoDocINNER JOIN mst_documentos d ON d.codigo=a.BolFacinner join mst_Usuarios e on e.id = a.IdUsuariowhere a.Id = @id and a.Eliminado = 0 and b.Eliminado = 0"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpDeleteUnidadMedida",
    "Content": "CREATE proc [dbo].[SpDeleteUnidadMedida]@id intasupdate mst_UnidadMedida set estado = 0, flag = 0 where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddProducto",
    "Content": "CREATE proc [dbo].[SpAddProducto]@id int,@nombreProducto varchar(max),@idMarca int,@idProveedor int,@idTipoProducto varchar(50),@idGrupo int,@estado bit,@usuario VARCHAR(50)asif @Id = 0begin\tinsert into mst_Producto(NombreProducto, idMarca, idproveedor, IdTipoProducto, IdGrupo, estado, usuarioCrea, fechaCrea)\tvalues(@nombreProducto, @idMarca, @idProveedor, @idTipoProducto, @idGrupo, @estado, @usuario, GETDATE())\tselect CAST(SCOPE_IDENTITY() as int) as 'id'endelsebegin\tupdate mst_Producto set NombreProducto = @nombreProducto, IdMarca = @idMarca, IdProveedor = @idProveedor, IdTipoProducto=@idTipoProducto, IdGrupo=@idGrupo,\tEstado = @estado, usuarioModifica = @usuario, fechaModifica = GETDATE()\twhere Id = @Id\tselect @id as 'id'end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarSeries_Documentos__idusuario",
    "Content": "CREATE proc [dbo].[spBuscarSeries_Documentos__idusuario]@idusuario int,@iddoc char(2)asselect s.id, s.Serie from mst_Doc_Serie_Usuario dsuinner join mst_Doc_Serie ds on dsu.idserie = ds.Idinner join mst_Serie s on ds.IdSerie = s.Idinner join mst_documentos d on ds.IdDoc = d.Codigowhere dsu.IdUsuario = @idusuario and ds.IdDoc = @iddocand dsu.Estado = 1 and dsu.Flag = 1 and ds.Estado = 1 and ds.Flag = 1and s.Estado = 1 and s.Flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spFormatoGuia",
    "Content": "CREATE proc [dbo].[spFormatoGuia]@id intasSELECT a.*,b.CodigoBarra,b.descripcion,um.nombreUnidad,b.Cantidad,b.Peso,d.Descripcion,e.Nombre,e.dniruc,e.Licencia,e.Direccion,e.Telefono,e.Email,f.descripcionFROM mst_Guia aINNER JOIN mst_Guia_det b ON a.Id=b.IdGuiainner join mst_UnidadMedida um on b.IdUnidad = um.IdINNER JOIN mst_TipoDocumento c ON c.codigoSunat=a.CodigoTipoDocINNER JOIN mst_documentos d ON d.codigo=a.IdDocumentoINNER JOIN mst_Transportistas e ON e.Id=a.IdTrasnportistainner join mst_motivo_guia f on f.id=a.IdMotivowhere a.Id = @id and a.Anulado = 0 and b.Anulado = 0--and e.Estado = 1 and e.Flag = 1 and B.Anulado = 0--and b.Anulado = 0"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddProductoDetalle",
    "Content": "CREATE proc [dbo].[SpAddProductoDetalle]@id int,@idProducto int,@idTalla int,@idColor int,@stockMinimo float,@stockActual float,@fechaVence date,@descripcion varchar(max),@codigoBarra varchar(100), @estado bit,@idMedida int,@checkStock bit,@usuario VARCHAR(50)asif @Id = 0begin\tinsert into mst_ProductoDetalle (idProducto, idTalla, idColores, stockminimo, stockactual, fechavencimiento , descripcion, codigoBarra,  estado, idmedida, checkStock, fechaCrea, usuarioCrea)\tvalues(@IdProducto, @IdTalla, @IdColor, @StockMinimo, @stockActual, @fechaVence, @descripcion, @CodigoBarra, @estado, @IdMedida, @CheckStock, GETDATE(), @usuario)\tselect CAST(SCOPE_IDENTITY() as int) as 'id'endelsebegin\tupdate mst_ProductoDetalle set idTalla = @IdTalla, idColores = @IdColor, fechavencimiento = @fechaVence,\tdescripcion = @descripcion, stockminimo = @StockMinimo, stockactual=@stockActual, codigoBarra = @CodigoBarra, fechaModifica = GETDATE(), estado = @Estado,\tidmedida = @IdMedida, checkStock = @CheckStock, usuarioModifica = @usuario\twhere Id = @Id\tselect @Id as 'id'end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarSoloBoleta_y_Factura",
    "Content": "CREATE proc [dbo].[spBuscarSoloBoleta_y_Factura]@coddocumento char(2),@serie varchar(4)asselect m.id,m.FechaEmision as 'Fecha Emision',cast((m.SerieDoc) as varchar) + '-' + cast((m.NumeroDoc) as varchar) as 'Documento',m.RazonSocial as 'Razón Social',m.TotalVenta as 'Total'from mst_Venta mwhere (m.IdDocumento = @coddocumento) and m.iddocumento != 07and m.Anulado = 0 order by m.Id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarInventario_Detalle",
    "Content": "----CREATE proc [dbo].[spEliminarInventario_Detalle]@id intasupdate mst_Inventario_Detalle set Flag=0where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddProductoPresentacion",
    "Content": "CREATE proc [dbo].[SpAddProductoPresentacion]@id int,@idProductoDetalle int,@idUnidad int,@precio money,@isPrincipal bit,@codigoBarra varchar(200),@isPrincipalAlmacen bit,@verEnVentas bit,@usuario VARCHAR(50)asif @Id = 0begin\tinsert into mst_ProductoPresentacion(idProductosDetalle, IdUnidad, precioUnitario, Principal, Codigo, PrincipalAlmacen, VerEnVentas, fechaCrea, usuarioCrea)\tvalues(@idProductoDetalle, @idUnidad, @precio, @isPrincipal, @codigoBarra, @isPrincipalAlmacen, @verEnVentas, GETDATE(), @usuario)\tselect CAST(SCOPE_IDENTITY() as int) as 'id'endelsebegin\tupdate mst_ProductoPresentacion set idUnidad = @idUnidad, precioUnitario = @precio, Principal = @isPrincipal, Codigo=@codigoBarra,\tPrincipalAlmacen=@isPrincipalAlmacen, VerEnVentas=@verEnVentas, fechaModifica=GETDATE(), usuarioModifica=@usuario\twhere id = @Id\tselect @Id as 'id'end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spAddVerVentasUsario",
    "Content": "CREATE proc [dbo].[spAddVerVentasUsario]@id int,@check bitasupdate mst_Usuarios set verVentas = @checkwhere id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_get_sub_menu",
    "Content": "CREATE proc [dbo].[sp_get_sub_menu]asselect * from sub_menu"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarCompra",
    "Content": "-----CREATE proc [dbo].[spInsertarCompra]@fechaemision date,@fechaingreso datetime,@idalmacen int,@doc char(2),@serie char(4),@numero char(8),@idproveedor int,@codigotipodoc int,@dniruc varchar(20),@razon varchar(100),@direccion varchar(100),@email varchar(100),@idformapago int,@fechavence date,@observacion text,@subtotal money,@totaligv money,@totaldescuento money,@totaltotal money,@importepagado money,@usuariocrea varchar(50),@porc_igv moneyasinsert into mst_Compras(FechaEmision,FechaIngreso,IdAlmacen,TipoDoc,Serie,Numero,IdProveedor,FormaPago,FechaVence,Observacion,Subtotal,TotalIgv,Totaldescuento,Total,ImportePagado,UsuarioCrea,estado, Flag,codigotipodoc,dniruc,razonsocial,Direccion,email, porc_igv)values(@fechaemision,@fechaingreso,@idalmacen,@doc,@serie,@numero,@idproveedor,@idformapago,@fechavence,@observacion,@subtotal,@totaligv,@totaldescuento,@totaltotal,@importepagado,@usuariocrea,1,1,@codigotipodoc,@dniruc,@razon,@direccion,@email, @porc_igv)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetUnidadesByIdProductoDetalle",
    "Content": "CREATE proc [dbo].[SpGetUnidadesByIdProductoDetalle]@idProductoDetalle intasselectum.Id,um.nombreUnidad 'Descripcion',pp.Principal,pp.Id 'id_presentacion',pd.Id 'IdProductoDetalle',pp.Codigo 'CodigoBarra',pd.codigoBarra 'CodigoBarraDetalle'from mst_ProductoDetalle pdinner join mst_ProductoPresentacion pp on pd.Id = pp.idProductosDetalleinner join mst_UnidadMedida um on pp.idUnidad = um.Idwhere pd.Id = @idProductoDetalle and pp.estado = 1 and pp.flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetAuditoria",
    "Content": "CREATE proc [dbo].[SpGetAuditoria]asselectid,CONCAT(Serie, '-', Numero) 'serie',Fecha,Usuario,FechaModifica,UsuarioModifica,IsClosedfrom AuditoriaORDER BY id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarTalla",
    "Content": "--buscarCREATE proc [dbo].[spBuscarTalla]@buscar varchar(10)asselect id as 'ID', descripcion as 'Descripción', usuarioCrea as 'Usuario de Creación',fechaCrea as 'Fecha de Creación', usuarioModifica as 'Usuario de Modificación',  fechaModifica as 'Fecha de Modificación',estado as 'Estado'from mst_Tallawhere descripcion like '%' + @buscar + '%' and flag = 1order by id desc"
  },
  {
    "Type": "VIEW",
    "Name": "vw_FiltroProductos",
    "Content": "CREATE VIEW [dbo].[vw_FiltroProductos] AS selectpp.Id as Id,pd.Id as C_Interno,pd.codigoBarra as [Cod_Barra],p.nombreProducto + ' ' + pd.descripcion + ' ' + LTRIM(mmm.descripcion) + ' ' +LTRIM(mm.nombreMarca) + ' ' + LTRIM(t.descripcion)+' '+ LTRIM(c.descripcion) as 'Descripcion',LTRIM(um.nombreUnidad) [U_Medida],um.factor [Factor],'' Imagen,pro.nombre [Proveedor],stock.saldo [Stock_Actual],fechavencimiento as [F_Vencimiento],CAST(pp.precioUnitario as decimal(18,2)) [Precio_Unit],um.id [Id_Unidad],p.IdGrupo as 'idgrupo',stock.IdAlmacen,pd.idmedida,pp.principal,pp.idUnidad,pd.checkstock,CAST(ISNULL(PrincipalAlmacen, 0) as bit) 'PrincipalAlmacen',pp.Codigo,p.Id 'IdProducto',pp.VerEnVentasfrom mst_Producto p inner join mst_ProductoDetalle pd on p.Id = pd.idProductoinner join mst_ProductoPresentacion pp on pd.Id=  pp.idProductosDetalleinner join mst_Marca mm on p.idMarca = mm.Idinner join mst_Talla t on pd.idTalla = t.Idinner join mst_Color c on pd.idColores = c.Idinner join mst_UnidadMedida um on pp.idUnidad = um.Idinner join mst_Medidas mmm on pd.idmedida = mmm.idinner join mst_Proveedor pro on p.idproveedor = pro.idinner join stocks_acumulados stock on pd.id = stock.idproductowhere p.flag = 1 and p.estado = 1and pd.flag = 1 and pd.estado = 1and pp.flag = 1 and pp.estado = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddProductoPresentacionCodigoBarra",
    "Content": "CREATE proc [dbo].[SpAddProductoPresentacionCodigoBarra]@id int,@idProductoPresentacion int,@codigoBarra varchar(50),@estado bitasif @id = 0begin\tinsert into ProductoPresentacionCodigoBarra(IdProductoPresentacion, CodigoBarra, Estado, Flag)\tvalues(@idProductoPresentacion, @codigoBarra, 1,1)\tselect CAST(SCOPE_IDENTITY() as int) 'id'endelsebegin\tupdate ProductoPresentacionCodigoBarra set IdProductoPresentacion = @idProductoPresentacion,\tCodigoBarra = @codigoBarra, Estado = @estado\twhere id = @id\tselect @id 'id'end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetVerVentasUsuario",
    "Content": "CREATE proc [dbo].[spGetVerVentasUsuario]@id intasselect verVentasfrom mst_Usuarioswhere id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_get_tipo_pago_movimiento",
    "Content": "CREATE proc [dbo].[sp_get_tipo_pago_movimiento]asselect id 'id',Descripcion 'descripcion'from tbl_TipoPago_Seguimientowhere Estado = 1 and Flag = 1order by id asc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarCompra",
    "Content": "----CREATE proc [dbo].[spModificarCompra]@id int,@fechaemision date,@fechaingreso datetime,@idalmacen int,@doc char(2),@serie char(4),@numero char(8),@idproveedor int,@codigotipodoc int,@dniruc varchar(20),@razon varchar(100),@direccion varchar(100),@email varchar(100),@idformapago int,@fechavence date,@observacion text,@subtotal money,@totaligv money,@totaldescuento money,@totaltotal money,@importepagado money,@usuariocrea varchar(50),@estado bit,@porc_igv moneyasupdate mst_Compras setFechaEmision = @fechaemision,FechaIngreso = @fechaingreso,IdAlmacen = @idalmacen,TipoDoc = @doc,Serie = @serie,Numero = @numero,IdProveedor = @idproveedor,FormaPago = @idformapago,FechaVence =@fechavence,Observacion = @observacion,Direccion = @direccion,Subtotal = @subtotal,TotalIgv = @totaligv,Totaldescuento = @totaldescuento,Total = @totaltotal,ImportePagado = @importepagado,UsuarioCrea = @usuariocrea,FechaCrea =@id,codigotipodoc = @codigotipodoc,dniruc = @dniruc,razonsocial = @razon,email = @email,porc_igv = @porc_igvwhere  Id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetUnidadesProductoVenta",
    "Content": "CREATE proc [dbo].[SpGetUnidadesProductoVenta]@idProductoDetalle intasselectum.Id,um.nombreUnidad 'Unidad',um.factor 'Factor',pp.precioUnitario 'Precio',pp.Principal,pd.idProducto 'IdProducto',pd.Id 'IdProductoDetalle',pp.Id 'IdProductoPresentacion',pp.Codigo 'CodigoBarra',pd.codigoBarra 'CodigoBarraDetalle'from mst_ProductoDetalle pdinner join mst_ProductoPresentacion pp on pd.Id = pp.idProductosDetalleinner join mst_UnidadMedida um on pp.idUnidad = um.Idwhere pd.Id = @idProductoDetalle and pp.estado = 1 and pp.flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarTipoUsuario",
    "Content": "CREATE proc [dbo].[spBuscarTipoUsuario]@buscar varchar(100)asselect id,descripcion,usuarioCrea,fechaCrea,usuarioModifica,fechaModifica,estado from mst_TipoUsuariowhere descripcion like '%'+@buscar+'%'and flag = 1order by id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetNacionalidad",
    "Content": "CREATE proc [dbo].[SpGetNacionalidad]asselect * from nacionalidad"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddRestPisos",
    "Content": "CREATE proc [dbo].[SpAddRestPisos]@id int,@piso int,@mesas int,@inicio intasif @id = 0begininsert into tabla_RestPisos(NumPiso,CantMesas, numInicio)values(@piso,@mesas,@inicio)select CAST(SCOPE_IDENTITY() as int) as 'id'endelsebeginupdate tabla_RestPisos set NumPiso = @piso, CantMesas = @mesas, numInicio = @inicio where id = @idselect @id as 'id'end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddCompra",
    "Content": "CREATE proc [dbo].[SpAddCompra]@Id int,@FechaEmision date,@FechaIngreso datetime, @IdAlmacen int,@TipoDoc char(2),@Serie char(4),@Numero char(8),@IdProveedor int,@FormaPago int,@FechaVence date,@Observacion text,@Direccion varchar(100),@Subtotal money,@TotalIgv money,@TotalDescuento money,@Total money,@ImportePagado money,@UsuarioCrea varchar(50),@FechaCrea datetime,@UsuarioModifica varchar(50),@FechaModifica datetime,@Estado bit,@Flag bit,@CodigoTipoDoc int,@DniRuc varchar(20),@RazonSocial varchar(100),@Email varchar(100),@PorcIgv money,@Telefono VARCHAR(20)asif @Id = 0begin\tinsert into mst_Compras (FechaEmision, FechaIngreso, IdAlmacen, TipoDoc, Serie, Numero, IdProveedor,\tFormaPago, FechaVence, Observacion, Direccion, Subtotal, TotalIgv, Totaldescuento, Total,\tImportePagado, UsuarioCrea, FechaCrea, UsuarioModifica, FechaModifica, Estado, Flag, CodigoTipoDoc,\tDniRuc, RazonSocial, Email, Porc_Igv, Telefono)\tvalues(@FechaEmision, @FechaIngreso, @IdAlmacen, @TipoDoc, @Serie, @Numero, @IdProveedor,\t@FormaPago, @FechaVence, @Observacion, @Direccion, @Subtotal, @TotalIgv, @TotalDescuento, @Total,\t@ImportePagado, @UsuarioCrea, @FechaCrea, @UsuarioModifica, @FechaModifica, @Estado, @Flag, @CodigoTipoDoc,\t@DniRuc, @RazonSocial, @Email, @PorcIgv, @Telefono)\tselect CAST(SCOPE_IDENTITY() as int) idendelsebeginupdate mst_Compras set FechaEmision = @FechaEmision, FechaIngreso = @FechaIngreso, IdAlmacen = @IdAlmacen,TipoDoc = @TipoDoc, Serie = @Serie, Numero = @Numero, IdProveedor = @IdProveedor, FormaPago = @FormaPago,FechaVence = @FechaVence, Observacion = @Observacion, Direccion= @Direccion, Subtotal = @Subtotal, TotalIgv = @TotalIgv,Totaldescuento = @TotalDescuento, Total = @Total, ImportePagado = @ImportePagado, UsuarioCrea = @UsuarioCrea,FechaCrea = @FechaCrea, UsuarioModifica = @UsuarioModifica, FechaModifica = @FechaModifica, Estado = @Estado, Flag = @Flag,CodigoTipoDoc = @CodigoTipoDoc, DniRuc = @DniRuc, RazonSocial = @RazonSocial, Email = @Email, Porc_Igv = @PorcIgv,Telefono = @Telefonowhere id = @Idselect @id idend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_get_vendedores",
    "Content": "CREATE proc [dbo].[sp_get_vendedores]asselectu.id,nombre,dni,direccion,telefono,usuario,correo,foto,is_cobradorfrom mst_Usuarios uinner join mst_TipoUsuario tu on u.idtipoUsuario = tu.Idwhere tu.descripcion = 'vendedor' or tu.descripcion = 'ventas' and u.estado = 1 and u.flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarCompra",
    "Content": "-----------------------------CREATE proc [dbo].[spEliminarCompra]@id intasupdate mst_Compras set Estado = 0, Flag = 0where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarUnidad",
    "Content": "----------------------------------------------------------------buscar unidad---------------------------CREATE procedure [dbo].[spBuscarUnidad]@textobuscar varchar(100)asselect id as 'ID', nombreUnidad as 'Nombre Unidad',factor as 'Factor' ,usuarioCrea as 'Usuario Creador', fechaCrea as 'Fecha de Registro', usuarioModifica as 'Usuario Modifica', fechaModifica as 'Fecha de Modificación' , estado as 'Estado'from mst_UnidadMedidawhere nombreUnidad like '%' + @textobuscar + '%' and flag = 1Order by id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddUsuario",
    "Content": "CREATE proc [dbo].[SpAddUsuario]@id int,@idTipoUsuario int,@nombre varchar(max),@dni varchar(8),@direcion varchar(max),@telefono varchar(20),@usuario varchar(50),@pass varchar(max),@usuarioCrea varchar(50),@correo varchar(100),@foto image,@isCobrador bit,@verVentas bitasif @id = 0begin\tinsert into mst_Usuarios (idtipoUsuario, nombre, dni, Direccion, telefono, usuario, pass, Correo,Foto, is_cobrador, verVentas, usuarioCrea, fechaCrea)\tvalues (@idTipoUsuario,@nombre,@dni,@direcion,@telefono,@usuario,@pass,@correo,@foto,@isCobrador,@verVentas,@usuarioCrea,GETDATE())\tselect CAST(SCOPE_IDENTITY() as int) as 'id'endelsebegin\tupdate mst_Usuarios set idtipoUsuario = @idTipoUsuario, nombre = @nombre, dni = @dni, Direccion = @direcion,\ttelefono = @telefono, usuario = @usuario, pass = @pass, Correo = @correo, Foto = @foto, is_cobrador = @isCobrador,\tverVentas = @verVentas, usuarioModifica = @usuarioCrea, fechaModifica= GETDATE()\twhere Id = @id\tselect @id as 'id'end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_reporte_cobranza_vendedor",
    "Content": "CREATE proc [dbo].[sp_reporte_cobranza_vendedor]@fecha_ini date,@fecha_fin date,@id_vendedor int,@id_usuario_cajero intasdeclare @tipo_usuario int = (select idtipoUsuario from mst_Usuarios where id = @id_vendedor)--1,admin--2,cajero--3,vendedorif @tipo_usuario <> 2begin\tSELECT * FROM \t(\tSELECT v.IdUsuarioPreventa as CodVen, u.usuario as VENDEDOR,s.FechaPago,\tv.IdDocumento as Doc,\t(v.SerieDoc+'-'+CAST(v.NumeroDoc as varchar)) as NumDoc,\tv.TotalVenta,\tISNULL(s.Monto,0) AS Monto,\tts.Descripcion as tipo_pago,\tv.RazonSocial as cliente\tFROM mst_Venta v\tINNER JOIN tbl_Seguimiento s\tON v.Id = s.IdVenta\tINNER JOIN tbl_TipoPago_Seguimiento ts\tON ts.Id = s.IdTipoPago\tINNER JOIN mst_Usuarios u\tON u.Id = v.IdUsuarioPreventa\tWHERE s.Eliminado = 0 and s.FechaPago between @fecha_ini and @fecha_fin and v.IdUsuarioPreventa = @id_vendedor\t) as cobranzas\tpivot (\tsum(Monto)\tfor tipo_pago in ([EFECTIVO], [CHEQUE], [TRANSFERENCIA], [DEPOSITO])) PivotTableendelsebegin\tSELECT * FROM \t(\tSELECT v.IdUsuarioPreventa as CodVen, u.usuario as VENDEDOR,s.FechaPago,\tv.IdDocumento as Doc,\t(v.SerieDoc+'-'+CAST(v.NumeroDoc as varchar)) as NumDoc,\tv.TotalVenta,\tISNULL(s.Monto,0) AS Monto,\tts.Descripcion as tipo_pago,\tv.RazonSocial as cliente\tFROM mst_Venta v\tINNER JOIN tbl_Seguimiento s\tON v.Id = s.IdVenta\tINNER JOIN tbl_TipoPago_Seguimiento ts\tON ts.Id = s.IdTipoPago\tINNER JOIN mst_Usuarios u\tON u.Id = v.IdUsuarioPreventa\tWHERE s.Eliminado = 0 and s.FechaPago between @fecha_ini and @fecha_fin and s.idUsuario = @id_usuario_cajero\t) as cobranzas\tpivot (\tsum(Monto)\tfor tipo_pago in ([EFECTIVO], [CHEQUE], [TRANSFERENCIA], [DEPOSITO])) PivotTableend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarCompra",
    "Content": "----CREATE proc [dbo].[spMostrarCompra]@top bitasif(@top= 0)select c.Id ,c.FechaEmision,c.FechaIngreso,a.Nombre [Almacén],d.Descripcion[Documento],CAST(c.Serie as varchar) + '-' + CAST(c.Numero as varchar) [Serie],p.nombre[Proveedor],c.Direccion,fp.FormadePago,c.FechaVence,c.Subtotal,c.TotalIgv,c.Totaldescuento,c.Total,c.Estadofrom mst_Compras cinner join mst_Almacen a on c.IdAlmacen = a.Idinner join mst_documentos d on c.TipoDoc = d.Codigoinner join mst_Proveedor p on c.IdProveedor = p.idinner join mst_FormaPago fp on c.FormaPago = fp.Idwhere c.Flag = 1elseselect c.Id ,c.FechaEmision,c.FechaIngreso,CAST(a.Id as varchar) + '-' + a.Nombre [Id-Almacén],CAST( d.Codigo as varchar) +'-' + d.Descripcion[Documento],CAST(c.Serie as varchar) + '-' + CAST(c.Numero as varchar) [Serie],cast(p.id as varchar)[IdProveedor],c.CodigoTipoDoc,c.DniRuc,c.RazonSocial,c.Direccion,c.Email,CAST(fp.id as varchar) + '-' + fp.FormadePago,c.FechaVence,c.Subtotal,c.TotalIgv,c.Totaldescuento,c.Total,c.Estado,c.Observacion,c.porc_igvfrom mst_Compras cinner join mst_Almacen a on c.IdAlmacen = a.Idinner join mst_documentos d on c.TipoDoc = d.Codigoinner join mst_Proveedor p on c.IdProveedor = p.idinner join mst_FormaPago fp on c.FormaPago = fp.Idwhere c.Flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarUsuario",
    "Content": "CREATE proc [dbo].[spBuscarUsuario]@buscar varchar(100)asselect u.Id Id,tu.descripcion [Tipo de Usuario],u.nombre Nombre,u.dni Dni,u.direccion Direccion,u.telefono Telefono,u.correo Correo,u.usuario Usuario,u.pass Pass,u.usuarioCrea [Usuario Crea],u.fechaCrea [Fecha Crea],u.usuarioModifica [Usuario Modifica],u.fechaModifica [Fecha Modifica], u.Foto,u.estado Estado, tu.Id IDtipoUsuario from mst_Usuarios uinner join mst_TipoUsuario tu on u.idtipoUsuario = tu.Idwhere u.flag = 1 and tu.flag = 1 and u.nombre like '%' + @buscar + '%'order by u.id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spContadorPedidos",
    "Content": "CREATE proc [dbo].[spContadorPedidos]@esconvenio bitasif(@esconvenio = 0)\tbegin\t\tselect max(IdPedido) from tabla_Pre_Venta\t\twhere Proforma = 0\tendelse\tbegin\tselect max(idpedido) from tabla_Pre_Venta_Convenio\t\tend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spStockEliminarItemSalidaEntrada",
    "Content": "CREATE proc [dbo].[spStockEliminarItemSalidaEntrada]@idproducto int,@bit bit,@idcompraventa bitasdeclare @iddetalle int = (select idProductosDetalle from mst_ProductoPresentacion where Id = @idproducto);declare @idalmacenaux int;if(@bit = 0)beginset @idalmacenaux = (select idalmacen from mst_Venta where id = @idcompraventa);declare @cantidad money = (select Cantidad from mst_Venta_det where id = @idproducto)declare @factor money = (select um.Factor from mst_Venta_det vd inner join mst_UnidadMedida um on vd.idunidad = um.id where vd.Id = @idproducto)declare @valor money = @cantidad * @factorupdate Stocks_Acumulados set Salidas = Salidas - @valor, saldo = saldo - @valorwhere idproducto = @iddetalle and IdAlmacen = @idalmacenauxendelse if(@bit = 1)beginset @idalmacenaux = (select IdAlmacen from mst_Compras where id=@idcompraventa);declare @cantidad2 money = (select Cantidad from mst_ComprasDetalles where id = @idproducto)declare @factor2 money = (select um.Factor from mst_ComprasDetalles vd inner join mst_UnidadMedida um on vd.idunidad = um.id where vd.id = @idproducto)declare @valor2 money = @cantidad * @factorupdate Stocks_Acumulados set Entradas = Entradas - @valor,saldo = saldo - @valorwhere idproducto = @iddetalle  and IdAlmacen = @idalmacenauxend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpRemoveAlmacenTrasladoDetalle",
    "Content": "CREATE proc [dbo].[SpRemoveAlmacenTrasladoDetalle]@id intasupdate mst_almacen_traslado_detalle set estado=0,Flag=0where id = @idselect 1;"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarCompraDetalle",
    "Content": "---------------------------------------------------------------------------------------------------------------CREATE proc [dbo].[spInsertarCompraDetalle]@idproducto int,@descripcion varchar(100),@idunidad int,@cantidad int,@precio money,@subtotal money,@igv money,@descuento money,@total money,@usuariocrea varchar(50),@idcompra int,@igv_incluido bitasinsert into mst_ComprasDetalles (IdProducto,Descripcion,IdUnidad,Cantidad,Precio,Subtotal,Igv,Descuento,Total,UsuarioCrea,Estado,Flag,IdCompra, igv_incluido)values(@idproducto,@descripcion,@idunidad,@cantidad,@precio,@subtotal,@igv,@descuento,@total,@usuariocrea,1,1,@idcompra,@igv_incluido)declare @idalmacen int = (select idalmacen from mst_Compras where id = @idcompra)declare @idproductodet int = (select idProductosDetalle from mst_ProductoPresentacion where Id =  @idproducto)exec spStockActualizarSaldoItem @idalmacen,@idproductodet"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spCalcularSecuenciaBoletaFacturaEtc",
    "Content": "CREATE proc [dbo].[spCalcularSecuenciaBoletaFacturaEtc]@codigodoc char(2),@serie char(4),@bit bitasif(@bit = 0)select max(NumeroDoc) from mst_Ventawhere IdDocumento = @codigodoc and SerieDoc  = @serieelseselect max(NumeroDoc) from mst_Ventawhere SerieDoc  = @serie "
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarLinea",
    "Content": "-----MOSTRAR LINEACREATE procedure [dbo].[spMostrarLinea]@top bitasif(@top = 0)select top 200 l.id as 'ID', l.nombreLinea as 'Nombre', g.nombreGrupo as 'Grupo',l.usuarioCrea as 'Usuario de Creación',l.fechaCrea as 'Fecha de Creación',l.usuarioModifica as 'Usuario de Modificación', l.fechaModifica as 'Fecha de Modificación', l.estado as 'Estado',CAST(g.Id AS varchar) as 'ID GRUPO'from  mst_Linea linner join  mst_Grupo g on l.idGrupo = g.idwhere l.flag = 1order by l.id descelseselectl.id as 'ID', l.nombreLinea as 'Nombre', g.nombreGrupo as 'Grupo',l.usuarioCrea as 'Usuario de Creación',l.fechaCrea as 'Fecha de Creación',l.usuarioModifica as 'Usuario de Modificación', l.fechaModifica as 'Fecha de Modificación', l.estado as 'Estado',CAST(g.Id AS varchar) as 'ID GRUPO'from  mst_Linea linner join  mst_Grupo g on l.idGrupo = g.idwhere l.flag = 1order by l.id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_guardar_almacen_movimiento_detalle",
    "Content": "CREATE proc [dbo].[sp_guardar_almacen_movimiento_detalle]@idproducto int,@nombreproducto varchar(250),@idunidad int,@nombreunidad varchar(250),@factor numeric(9,3),@cantidad numeric(9,3),@precio numeric(9,3),@total numeric(9,3),@almacenmovimientoid int,@id intasif @id = 0begininsert into mst_almacen_movimiento_detalle(idProducto, nombreProducto, idUnidad, nombreUnidad,factor, cantidad, precio, total, almacen_movimiento_id)values(@idproducto, @nombreproducto, @idunidad, @nombreunidad,@factor, @cantidad, @precio, @total, @almacenmovimientoid)select SCOPE_IDENTITY() as 'id';endelsebeginupdate mst_almacen_movimiento_detalle set idProducto = @idproducto, nombreProducto = @nombreproducto,idUnidad = @idunidad, nombreUnidad = @nombreunidad,factor = @factor, cantidad = @cantidad, precio=@precio, total = @totalwhere id = @idselect @id as 'id';end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_reporte_comprobantes_emitidos",
    "Content": "CREATE proc [dbo].[sp_reporte_comprobantes_emitidos]@fecha dateasSELECT v.IdDocumento,(v.SerieDoc+'-'+CAST(v.NumeroDoc AS varchar)) as NumDoc, v.RazonSocial, CAST(v.FechaEmision AS date) AS FechaEmision, v.TotalVenta,p.FormadePago,u.nombreFROM mst_Venta vINNER JOIN mst_FormaPago pON v.IdFormaPago = p.IdINNER JOIN mst_Usuarios uON u.Id = v.IdUsuarioPreventaWHERE CAST(v.FechaEmision AS date) =  @fecha"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarLinea_Grupo",
    "Content": "CREATE proc [dbo].[spMostrarLinea_Grupo]@id intasselect id,nombreLinea from mst_Lineawhere idGrupo = @id and flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spAddControlTransportista",
    "Content": "CREATE proc [dbo].[spAddControlTransportista]@id int,@TransportistaId int,@Nombre varchar(200),@HoraSalida datetime,@HoraLlegada datetime,@Observacion text,@isClosed bit,@total floatasif @id = 0begin\tinsert into ControlTransportistas (TransportistaId, TransportistaNombre, HoraSalida, HoraLlegada, Observacion, IsClosed, Total)\tvalues(@TransportistaId, @Nombre, @HoraSalida, null, @Observacion, @isClosed, @total)\tselect CAST(SCOPE_IDENTITY() as int)endelsebegin\tif @isClosed = 0 begin set @horallegada = null end\tupdate ControlTransportistas set TransportistaId = @TransportistaId, \tTransportistaNombre = @Nombre, HoraLlegada = @HoraLlegada, Observacion = @Observacion, IsClosed = @isClosed,\tTotal=  @total\twhere id = @id\tselect CAST(@id as int)end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarPedidoVenta",
    "Content": "CREATE proc [dbo].[spMostrarPedidoVenta]@id int,@pm bitasif(@pm = 0)select CodigoDoc,IdCliente,DniRuc,RazonSocial,Direccion,Email,IdUsuario,Idalmacen,0 as IdMesa, Adicional, Beneficiario, IdConvenio, IdParentesco, countPecho, countPierna, textObservationfrom tabla_Pre_Ventawhere IdPedido = @id and Pagado = 0 and Eliminado = 0elseselect CodigoDoc,IdCliente,DniRuc,RazonSocial,Direccion,Email,IdUsuario,Idalmacen, IdMesa, Adicional, Beneficiario, IdConvenio, IdParentesco, countPecho, countPierna, textObservationfrom tabla_Pre_Ventawhere IdMesa = @id and Pagado = 0 and Eliminado = 0"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetVentaById",
    "Content": "CREATE proc [dbo].[SpGetVentaById]@id intasselectId,IdDocumento,SerieDoc,NumeroDoc,FechaEmision,SubTotal 'Subtotal',Igv,Descuento,TotalVenta,Total_Letras 'TotalLetras',IdCliente,CodigoTipoDoc,DniRuc,RazonSocial,Direccion,Email,Anulado,Observacion,TipoNotCred,DescripNotCred,TipoDocAfectado,NumeroDocAfectado,IdFormaPago,IdUsuarioPreventa,IdApertura,IdCaja,ImportePagado,Hassh,IdAlmacen,IdGuia,IdPiso,IdUsuario,TipoMoneda,Otro_Imp 'OtroImp',Tipo_Operacion 'TipoOperacion',Adicional,Beneficiario,IdConvenio,IdParentesco,cortesia 'Cortesia',delivery 'Delivery',llevar 'Llevar',countPecho 'CountPecho',countPierna 'CountPierna',textObservation 'TextObservacion',fecha_apertura 'FechaApertura'from mst_Ventawhere Id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spCambiarPresentacionPrincipal",
    "Content": "CREATE proc [dbo].[spCambiarPresentacionPrincipal] @iddetalle int,@id int,@estado bit,@bit bitasif(@bit =0)beginupdate mst_ProductoPresentacion set Principal = 0where idProductosDetalle = @iddetalleupdate mst_ProductoPresentacion set Principal = 1where id = @idendelseupdate mst_ProductoDetalle set estado = @estadowhere Id = @iddetalle"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetControlTransportistaByDni",
    "Content": "CREATE proc [dbo].[SpGetControlTransportistaByDni]@dni intasselectct.Id,ct.TransportistaId,t.DniRuc 'Dni',t.Nombre,ct.HoraSalida,ct.HoraLlegada,ct.Observacion,ct.IsClosed,ct.Totalfrom ControlTransportistas ct inner join mst_Transportistas t on ct.TransportistaId = t.Idwhere t.DniRuc = @dni"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spCancelarPreVenta",
    "Content": "-------CREATE proc [dbo].[spCancelarPreVenta]@id intasupdate tabla_Pre_Venta set Eliminado = 1 where idmesa = @idupdate tabla_Pre_Venta set Eliminado = 1 where idmesa = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarPisos",
    "Content": "CREATE proc [dbo].[spMostrarPisos]asselect * from tabla_RestPisoswhere estado = 1 and flag =1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetControlTransportistaById",
    "Content": "CREATE proc [dbo].[SpGetControlTransportistaById]@id intasselectct.Id,ct.TransportistaId,t.DniRuc 'Dni',t.Nombre,ct.HoraSalida,ct.HoraLlegada,ct.Observacion,ct.IsClosed,ct.Totalfrom ControlTransportistas ct inner join mst_Transportistas t on ct.TransportistaId = t.Idwhere ct.id = @idorder by ct.IsClosed"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spReporteDetalladoTotal_FormaPago",
    "Content": "CREATE proc [dbo].[spReporteDetalladoTotal_FormaPago]@id int,@idpiso int,@idcaja int,@idusuario intasif @idpiso = 0\tselect fp.* from tabla_FormaPago fp\tinner join mst_Venta v on fp.IdVenta = v.Id\tWHERE v.IdApertura = @id and v.IdCaja = @idcaja and v.IdUsuario = @idusuario  \tORDER BY v.IdDocumento,v.serieDoc,v.NumeroDocelse\tselect fp.* from tabla_FormaPago fp\tinner join mst_Venta v on fp.IdVenta = v.Id\tWHERE v.IdApertura = @id and v.IdCaja = @idcaja and v.IdUsuario = @idusuario and v.IdPiso = @idpiso\tORDER BY v.IdDocumento,v.serieDoc,v.NumeroDoc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spCargaProductos",
    "Content": "CREATE proc [dbo].[spCargaProductos]@id intasselect p.nombreProducto,m.nombreMarca Marca,g.Descripcion Grupo, l.Descripcion Linea,f.Descripcion Familia,pro.nombre,p.estado,p.idMarca,p.idsegmento,p.idfamilia,p.idclase,pro.id,p.IdTipoProducto,substring(p.idproductosunat,7,2) idprodsunat,p.IdGrupofrom mst_Producto p inner join mst_Marca m on p.idMarca = m.Idinner join mst_segmento g on p.IdSegmento = g.Codigoinner join mst_Familia l on p.IdFamilia = l.Codigoinner join mst_Clase f on p.IdClase = f.Codigoinner join mst_Proveedor pro on p.idproveedor = pro.idwhere p.id = @id and p.flag = 1 order by p.Id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpCheckComprobantesPorEnviar",
    "Content": "CREATE proc [dbo].[SpCheckComprobantesPorEnviar]asSELECT CASE v.iddocumentoWHEN '01' THEN 'FE'WHEN '03' THEN 'BV'WHEN '07' THEN 'NC'WHEN '08' THEN 'ND'END AS Documento, CAST(v.FechaEmision as date) AS Fecha,COUNT(v.Id) AS CantidadFROM mst_Venta vLEFT JOIN tbl_info_cpe cpeON v.Id = cpe.id_cab_cpeWHERE id_cab_cpe IS NULL AND v.IdDocumento <>'99' AND v.Anulado = 0 --AND cpe.doc_firma = 0 AND cpe.doc_cdr = 0 --AND CAST(v.FechaEmision as date) BETWEEN '2021-11-01' AND '2021-11-15'GROUP BY v.iddocumento,CAST(v.FechaEmision as date),cpe.id_cab_cpeORDER BY CAST(v.FechaEmision as date)"
  },
  {
    "Type": "SQL_SCALAR_FUNCTION",
    "Name": "F_GetUltimoCostoProductoDetalle",
    "Content": "CREATE function [dbo].[F_GetUltimoCostoProductoDetalle](@idProductoDetalle int, @idAlmacen int)returns moneyasbegindeclare @costo money = 0set @costo = (select top 1  Costo from (---INVENTARIO--------selectId_Producto as 'IdProducto',Costo as 'Costo',i.FechaCrea as 'FechaCrea',i.Id_Almacen 'IdAlmacen'from mst_Inventario_Detalle idinner join mst_Inventario i on id.Id_Inventario = i.Idwhere (i.Estado = 0 and i.Flag = 1)and (id.Estado = 1 and id.Flag = 1)---INVENTARIO--------union all---COMPRAS--------selectcd.IdProducto,(cd.Precio/u.factor) as 'Costo',c.FechaCrea,c.IdAlmacen 'IdAlmacen'from mst_ComprasDetalles cdinner join mst_Compras c on cd.IdCompra = c.Idinner join mst_UnidadMedida u on u.Id = cd.IdUnidadwhere c.Estado = 1 and c.Flag = 1 and cd.Estado = 1 and cd.Flag = 1and c.IsClosed = 1---COMPRAS--------union all---ENTRADAS--------select idProducto as 'IdProducto',(precio/factor) as 'Costo',m.fecha as 'FechaCrea',m.idAlmacen 'IdAlmacen'from mst_almacen_movimiento_detalle mdinner join mst_almacen_movimiento m on md.almacen_movimiento_id = m.idwhere entrada = 1 and m.estado = 1 and m.flag = 1 and md.estado = 1 and md.flag = 1---ENTRADAS--------union all---TRASLADOS--------selecttd.idProducto as 'IdProducto',(td.precio/td.factor) as 'Costo',t.fecha as 'FechaCrea',t.idAlmacenEntrada as 'IdAlmacen'from mst_almacen_traslado_detalle tdinner join mst_almacen_traslado t on td.almacen_traslado_id = t.idwhere td.estado = 1 and td.flag = 1 and t.estado = 1 and t.flag = 1---TRASLADOS--------) as Tempwhere Temp.IdProducto = @idProductoDetalleand Temp.IdAlmacen = @idAlmacenorder by Temp.FechaCrea desc)set @costo =isnull(@costo,0)return (@costo)end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpSearchProductByCodigoBarraOrIdDetalle",
    "Content": "CREATE proc [dbo].[SpSearchProductByCodigoBarraOrIdDetalle]@codigoBarra varchar(100),@idDetalle intasif @idDetalle = 0begin\tselect \tpp.Id Id,\tpd.codigoBarra 'CodBarra',\tp.nombreProducto + ' ' + \tpd.descripcion + ' ' + \tmmm.descripcion + ' ' +\tmm.nombreMarca + ' ' + \tt.descripcion+' '+ \tc.descripcion  as 'Descripcion',\tum.nombreUnidad 'UnidadMedida',\tum.factor [Factor],\tpd.imagenProducto Imagen,\tpp.precioUnitario Precio,\tum.id 'IdUnidad',\tpp.Principal,\tp.IdGrupo as 'idgrupo',\tpd.Id as 'IdProductoDetalle',\tpp.PrincipalAlmacen\tfrom mst_Producto p \tinner join mst_ProductoDetalle pd on p.Id = pd.idProducto\tinner join mst_ProductoPresentacion pp on pd.Id=  pp.idProductosDetalle\tinner join mst_Marca mm on p.idMarca = mm.Id\tinner join mst_Talla t on pd.idTalla = t.Id\tinner join mst_Color c on pd.idColores = c.Id\tinner join mst_UnidadMedida um on pp.idUnidad = um.Id\tinner join mst_Medidas mmm on pd.idmedida = mmm.id\twhere p.flag = 1 \tand p.estado = 1 \tand pd.estado = 1\tand pd.flag  = 1\tand pp.estado = 1\tand pp.flag = 1\tand (pd.codigoBarra = @codigoBarra or pp.Codigo = @codigoBarra)\torder by pp.id descendelsebegin\tselect \tpp.Id Id,\tpd.codigoBarra 'CodBarra',\tp.nombreProducto + ' ' + \tpd.descripcion + ' ' + \tmmm.descripcion + ' ' +\tmm.nombreMarca + ' ' + \tt.descripcion+' '+ \tc.descripcion  as 'Descripcion',\tum.nombreUnidad 'UnidadMedida',\tum.factor [Factor],\tpd.imagenProducto Imagen,\tpp.precioUnitario Precio,\tum.id 'IdUnidad',\tpp.Principal,\tp.IdGrupo as 'idgrupo',\tpd.Id as 'IdProductoDetalle',\tpp.PrincipalAlmacen\tfrom mst_Producto p \tinner join mst_ProductoDetalle pd on p.Id = pd.idProducto\tinner join mst_ProductoPresentacion pp on pd.Id=  pp.idProductosDetalle\tinner join mst_Marca mm on p.idMarca = mm.Id\tinner join mst_Talla t on pd.idTalla = t.Id\tinner join mst_Color c on pd.idColores = c.Id\tinner join mst_UnidadMedida um on pp.idUnidad = um.Id\tinner join mst_Medidas mmm on pd.idmedida = mmm.id\twhere p.flag = 1 \tand p.estado = 1 \tand pd.estado = 1\tand pd.flag  = 1\tand pp.estado = 1\tand pp.flag = 1\tand (pd.Id = @idDetalle)\torder by pp.id descend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spCargarDetalles",
    "Content": "CREATE proc [dbo].[spCargarDetalles]@id intasselect'' [-],''[x],p.id Id,p.codigoBarra,p.descripcion,t.descripcion Talla,c.descripcion Color,mmm.descripcion,p.imagenProducto,p.stockinicial,p.stockminimo,iif(CONVERT(varchar,p.fechavencimiento,103) IS NULL,'00/00/0000',CONVERT(varchar,p.fechavencimiento,103)) Fechavence,p.idmedida,p.idTalla,p.idColores,p.estado [Estado],checkStockfrom mst_ProductoDetalle pinner join mst_Talla t on p.idTalla = t.Idinner join mst_Color c on p.idColores = c.Idinner join mst_medidas mmm on p.idmedida = mmm.idwhere idProducto = @id and p.flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetClienteDireccionByIdCliente",
    "Content": "CREATE proc [dbo].[SpGetClienteDireccionByIdCliente]@idCliente intasselect * from mst_Cliente_Direccionwhere IdCliente = @idCliente and Estado = 1 and Flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddPedidostDetalles",
    "Content": "CREATE proc [dbo].[SpAddPedidostDetalles]@id int,@idPedido int,@idMesa int,@idProducto int,@descripcion varchar(max),@codigoBarra varchar(50),@unidad varchar(50),@cantidad float,@precio float,@subtotal float,@igv float,@descuento float,@total float,@pagado bit,@eliminado bit,@factor float,@idUnidad int,@idPiso int,@numSecuencia int,@adicional1 varchar(max),@adicional2 date,@adicional3 varchar(max),@adicional4 varchar(max),@igvIncluido bit,@isCodBarraBusqueda bitasif @id = 0begin\tinsert into tabla_Pre_Venta_Detalle(IdPedido, IdMesa, IdProducto, Descripcion, CodigoBarra, UMedida, Cantidad, Precio, Subtotal, igv, Descuento, total, Pagado, Eliminado, Factor,\tIdUnidad, IdPiso, NumSecuencia, Adicional1, Adicional2, Adicional3, Adicional4, igv_incluido, IsCodBarraBusqueda)\tvalues (@idPedido, @idMesa, @idProducto, @descripcion, @codigoBarra, @unidad, @cantidad, @precio, @subtotal, @igv, @descuento, @total, @pagado, @eliminado, @factor,\t@idUnidad, @idPiso, @numSecuencia, @adicional1, @adicional2, @adicional3, @adicional4, @igvIncluido, @isCodBarraBusqueda)\tselect CAST(SCOPE_IDENTITY() as int)endelsebegin\tupdate tabla_Pre_Venta_Detalle set IdPedido = @idPedido, IdMesa=@idMesa, IdProducto=@idProducto,Descripcion=@descripcion,CodigoBarra=@codigoBarra,UMedida=@unidad,Cantidad=@cantidad,\tPrecio=@precio,Subtotal=@subtotal,igv=@igv,Descuento=@descuento,total=@total,Pagado=@pagado,Eliminado=@eliminado,Factor=@factor,IdUnidad=@idUnidad,IdPiso=@idPiso,NumSecuencia=@numSecuencia,\tAdicional1=@adicional1,Adicional2=@adicional2,Adicional3=@adicional3,Adicional4=@adicional4,igv_incluido=@igvIncluido,IsCodBarraBusqueda=@isCodBarraBusqueda\twhere id= @id\tselect @idend"
  },
  {
    "Type": "VIEW",
    "Name": "ViewProductoForApp",
    "Content": "CREATE view [dbo].[ViewProductoForApp]asSELECT pp.Id as Id, p.NombreProducto ProductName, g.Descripcion ProductGroup, pp.IdUnidad ProductUnidadId, u.NombreUnidad ProductUnidad, pp.PrecioUnitario ProductPriceFROM mst_Producto pINNER JOIN mst_ProductoDetalle pd ON pd.idProducto = p.IdINNER JOIN mst_ProductoPresentacion pp ON pp.idProductosDetalle = pd.IdINNER JOIN mst_Grupo g ON g.Id = p.IdGrupoINNER JOIN mst_UnidadMedida u ON u.Id = pp.idUnidadWHERE (p.flag = 1 AND p.estado = 1) AND (pd.flag = 1 AND pd.estado = 1)AND (pp.flag = 1 AND pp.estado = 1)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarCompraDetalle",
    "Content": "---CREATE proc [dbo].[spModificarCompraDetalle]@id int,@idproducto int,@descripcion varchar(100),@idunidad int,@cantidad int,@precio money,@subtotal money,@igv money,@descuento money,@total money,@usuariocrea varchar(50),@estado bit,@igv_incluido bitasupdate mst_ComprasDetalles setIdProducto = @idproducto,Descripcion = @descripcion,IdUnidad = @idunidad,Cantidad = @cantidad,Precio = @precio,Subtotal = @subtotal,Igv = @igv,Descuento = @descuento,Total = @total,UsuarioCrea = @usuariocrea,Estado = @estado,igv_incluido = @igv_incluidowhere id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetVentas",
    "Content": "CREATE proc [dbo].[SpGetVentas]@fechaInicio date,@fechaFin dateasselectId,IdDocumento,SerieDoc,NumeroDoc,FechaEmision,SubTotal 'Subtotal',Igv,Descuento,TotalVenta,Total_Letras 'TotalLetras',IdCliente,CodigoTipoDoc,DniRuc,RazonSocial,Direccion,Email,Anulado,Observacion,TipoNotCred,DescripNotCred,TipoDocAfectado,NumeroDocAfectado,IdFormaPago,IdUsuarioPreventa,IdApertura,IdCaja,ImportePagado,Hassh,IdAlmacen,IdGuia,IdPiso,IdUsuario,TipoMoneda,Otro_Imp 'OtroImp',Tipo_Operacion 'TipoOperacion',Adicional,Beneficiario,IdConvenio,IdParentesco,cortesia 'Cortesia',delivery 'Delivery',llevar 'Llevar',countPecho 'CountPecho',countPierna 'CountPierna',textObservation 'TextObservacion',fecha_apertura 'FechaApertura'from mst_Ventawhere FechaEmision between @fechaInicio and @fechaFin"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spCargarPresentaciones",
    "Content": "CREATE proc [dbo].[spCargarPresentaciones]@id intasselect '' [-],''[x],@id [Id detalle],um.nombreUnidad Unidad,um.factor,p.precioUnitario,p.Principal ,p.Id [Id Pres],um.Id,p.PrincipalAlmacen,Codigo,VerEnVentasfrom mst_ProductoPresentacion pinner join mst_UnidadMedida um on p.idUnidad = um.Idwhere idProductosDetalle = @id and p.flag = 1 and p.estado = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetCodigosBarrasByIdProducto",
    "Content": "CREATE proc [dbo].[SpGetCodigosBarrasByIdProducto]@idProductoPresentacion intasselect * from ProductoPresentacionCodigoBarrawhere idProductoPresentacion = @idProductoPresentacionand estado = 1 and flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarAlacenTraslado",
    "Content": "CREATE proc [dbo].[spInsertarAlacenTraslado]@id int,@id_almacen_salida int,@id_almacen_entrada int,@fecha datetime,@descripcion nvarchar(max),@cerrado bit,@estado bit,@op bitasif(@op = 0)\tbegin\tinsert into mst_almacen_traslado(idAlmacenSalida, idAlmacenEntrada, fecha, descripcion, cerrado, estado)\tvalues(@id_almacen_salida, @id_almacen_entrada, @fecha, @descripcion, @cerrado, @estado)\tselect SCOPE_IDENTITY();\tendelse\tbegin\tupdate mst_almacen_traslado set idAlmacenSalida = @id_almacen_salida, idAlmacenEntrada = @id_almacen_entrada, fecha = @fecha, descripcion = @descripcion, cerrado = @cerrado, estado = @estado\twhere id = @id\t\tend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spActualizarTotales_Venta",
    "Content": "CREATE proc [dbo].[spActualizarTotales_Venta]@id intasEXEC spIngresarOtrosImpuestos_Venta @iddeclare @total moneydeclare @igv money = (select SUM(igv) from mst_Venta_det  where IdVenta = @id and Anulado = 0)declare @subtotal money =  (select SUM(Subtotal) from mst_Venta_det  where IdVenta = @id and Anulado = 0)declare @descuento money =  (select SUM(Descuento) from mst_Venta_det where IdVenta = @id and Anulado = 0)declare @formapago int = ((select IdFormaPago from mst_Venta where Id = @id and Anulado = 0))declare @tipomoneda varchar(10) = (select TipoMoneda from mst_Venta where id = @id)DECLARE\t@icbper money = (select SUM(Otro_Imp) from mst_Venta where Id = @id and Anulado = 0)--set @igv = ROUND(@igv, 2)set @subtotal = ROUND(@subtotal, 2) --if(@tipomoneda = 'PEN')\tBEGIN\tSET @tipomoneda = 'SOLES'\tENDELSE \tBEGIN\tSET @tipomoneda = 'DOLARES'\tENDdeclare @totalletras varchar(max) = (select dbo.fn_ConvertirNumeroLetra( ROUND(( (@subtotal + @igv) -@descuento) + @icbper, 1),@tipomoneda))set @total = ROUND(((@subtotal + @igv) -@descuento) + @icbper,1)if(@formapago = 1)beginupdate mst_Venta set TotalVenta = ROUND(((@subtotal + @igv) -@descuento) + @icbper,1),SubTotal = @subtotal,Descuento = @descuento,Igv = @igv,ImportePagado = ROUND(((@subtotal + @igv) -@descuento) + @icbper,1),Total_Letras = @totalletraswhere Id = @id----------end----------elsebeginupdate mst_Venta set TotalVenta = ROUND(((@subtotal + @igv) -@descuento) + @icbper,1),SubTotal = @subtotal,Descuento = @descuento,Igv = @igv ,ImportePagado = 0,Total_Letras = @totalletraswhere Id = @idend-----update tabla_Venta_Ext setTotal = @totalwhere IdVenta = @id--nuevos campos, todo va estar igual solo para el envio se hace esto"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarCompraDetalle",
    "Content": "---CREATE proc [dbo].[spMostrarCompraDetalle]@id intasselect cd.IdProducto, pd.codigoBarra, cd.Descripcion, um.nombreUnidad, um.factor,cd.Cantidad, cd.Precio, cd.Descuento, cd.Subtotal, CAST( cd.IdUnidad as varchar) + '-' +CAST( cd.Id as varchar),cd.Igv, cd.Total,cd.Igv_incluidofrom mst_ComprasDetalles cd inner join mst_ProductoPresentacion pp on cd.IdProducto = pp.Idinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Idinner join mst_UnidadMedida um on cd.IdUnidad = um.Idwhere IdCompra = @id and cd.Flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spCargarProductoVenta",
    "Content": "CREATE proc [dbo].[spCargarProductoVenta]@id intasselectpp.Id Id,pd.codigoBarra as 'Cod_Barra',p.nombreProducto + ' ' + pd.descripcion + ' ' + LTRIM(mmm.descripcion) + ' ' +LTRIM(mm.nombreMarca) + ' ' + LTRIM(t.descripcion)+' '+ LTRIM(c.descripcion) as 'Descripcion',LTRIM(um.nombreUnidad) U_Medida,um.factor 'Factor',pd.imagenProducto Imagen,pro.nombre 'Proveedor',pd.stockactual 'Stock_Actual',pd.fechavencimiento 'F_Vencimiento',pp.precioUnitario Precio,um.id 'Id_Unidad',pd.Id cod_internofrom mst_Producto p inner join mst_ProductoDetalle pd on p.Id = pd.idProductoinner join mst_ProductoPresentacion pp on pd.Id=  pp.idProductosDetalleinner join mst_Marca mm on p.idMarca = mm.Idinner join mst_Talla t on pd.idTalla = t.Idinner join mst_Color c on pd.idColores = c.Idinner join mst_UnidadMedida um on pp.idUnidad = um.Idinner join mst_Medidas mmm on pd.idmedida = mmm.idinner join mst_Proveedor pro on p.idproveedor = pro.idwhere p.flag = 1 and p.estado = 1 and pd.flag = 1 and pd.estado = 1 and pp.estado = 1 and pp.flag = 1 and pp.id = @idorder by p.Id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetColor",
    "Content": "CREATE proc [dbo].[SpGetColor]@text VARCHAR(50)asselectId,descripcionfrom mst_Colorwhere Estado = 1 and Flag =1 and descripcion like '%'+@text+'%'"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarMesas",
    "Content": "CREATE proc [dbo].[spInsertarMesas] @idpiso int,@cantidad int,@num_inicio intasdeclare @init int = @num_iniciodeclare @cont int =1if((select COUNT(id) from tabla_RestMesas where IdPiso = @idpiso)>=1)begindelete from tabla_RestMesas where IdPiso = @idpisowhile(@cont <= @cantidad)begininsert into tabla_RestMesas(IdPiso,NumMesa)values(@idpiso,@init)set @cont = @cont+1set @init = @init+1endendelsebeginwhile(@cont <= @cantidad)begininsert into tabla_RestMesas(IdPiso,NumMesa)values(@idpiso,@init)set @cont = @cont+1set @init = @init+1endend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarDescripcion",
    "Content": "CREATE proc [dbo].[spMostrarDescripcion]asselect isnull(descripcion,'') as 'nombre' from mst_ProductoDetalle"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spCargarVentas_Id",
    "Content": "CREATE proc [dbo].[spCargarVentas_Id]@id int,@bit bit,@fechainicio date,@fechafinal date,@idVendedor int = 0asif(@bit = 0)select *,cast(d.codigoSunat as varchar) + '-'+d.descripcion TipoDoc,dc.descripcion as D_DOC, c.nacionalidadfrom mst_Venta v inner join mst_TipoDocumento d on v.CodigoTipoDoc = d.codigoSunatINNER join mst_documentos dc on v.IdDocumento = dc.Codigoinner join mst_Cliente c on v.IdCliente = c.Idinner join mst_Usuarios us on v.IdUsuarioPreventa = us.Idwhere v.Id = @id and Anulado = 0and v.IdUsuarioPreventa = CASe @idVendedor when 0 then v.IdUsuarioPreventa else @idVendedor endelseselect *,cast(d.codigoSunat as varchar) + '-'+d.descripcion TipoDoc,dc.descripcion as D_DOC, c.nacionalidadfrom mst_Venta v inner join mst_TipoDocumento d on v.CodigoTipoDoc = d.codigoSunatINNER join mst_documentos dc on v.IdDocumento = dc.Codigoinner join mst_Cliente c on v.IdCliente = c.Idinner join mst_Usuarios us on v.IdUsuarioPreventa = us.Idwhere cast(FechaEmision as date) between @fechainicioand @fechafinaland v.IdUsuarioPreventa = CASe @idVendedor when 0 then v.IdUsuarioPreventa else @idVendedor end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpDeleteProveedor",
    "Content": "CREATE proc [dbo].[SpDeleteProveedor]@id intasupdate mst_Proveedor set estado = 0, flag = 0where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spmostrarIds_Productos",
    "Content": "CREATE proc [dbo].[spmostrarIds_Productos]@id int,@bit intasif(@bit = 0)beginselectp.Id as 'IdProducto',pd.Id as 'IdProductoDet',pp.Id as 'IdProductoPres',p.IdGrupo as 'IdGrupo'from mst_ProductoPresentacion ppinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.idinner join mst_Producto p on pd.idProducto = p.Idwhere p.Id = @idendelse if(@bit = 1)beginselectp.Id as 'IdProducto',pd.Id as 'IdProductoDet',pp.Id as 'IdProductoPres',p.IdGrupo as 'IdGrupo'from mst_ProductoPresentacion ppinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.idinner join mst_Producto p on pd.idProducto = p.Idwhere pd.Id = @idendif(@bit = 2)beginselectp.Id as 'IdProducto',pd.Id as 'IdProductoDet',pp.Id as 'IdProductoPres',p.IdGrupo as 'IdGrupo'from mst_ProductoPresentacion ppinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.idinner join mst_Producto p on pd.idProducto = p.Idwhere pp.Id = @idend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarVentaDetalle_Ext",
    "Content": "CREATE proc [dbo].[spModificarVentaDetalle_Ext]@idventa_det int,@idproducto int,@descripcion varchar(200),@precio money,@cantidad money,@total moneyasupdate tabla_venta_det_ext set idproducto = @idproducto,descripcion = @descripcion,precio = @precio,cantidad = @cantidad,total = @totalwhere idventa_det = @idventa_det"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spCargarVentasDetalle_Id",
    "Content": "CREATE proc [dbo].[spCargarVentasDetalle_Id]@id int,@bit bitasif(@bit = 0)beginselect pp.Id,vd.codigoBarra,vd.descripcion,um.nombreUnidad,um.Factor,vd.Cantidad,vd.PrecioUnit,vd.Descuento,vd.Subtotal,vd.Igv,vd.Total,cast(vd.IdUnidad as varchar )+ '-' + cast(vd.Id as varchar) IdUnidad_IdDetalle,pd.Id as IdDetalle,Adicional1,Adicional2,Adicional3,Adicional4,vd.igv_incluido,vd.IsCodBarraBusqueda 'IsCodBarraBusqueda'from mst_Venta_det vdinner join mst_ProductoPresentacion pp on vd.IdProducto = pp.Idinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Idinner join mst_Producto p on pd.idProducto = p.Id------inner join mst_UnidadMedida um on vd.IdUnidad = um.Idwhere IdVenta = @id --and Anulado = 0 and vd.Flag = 1 --and pp.flag = 1--and pd.flag = 1--and pd.estado = 1--and p.estado = 1--and p.flag = 1endelseselect vd.IdProducto as Id,vd.CodigoBarra,vd.descripcion,um.nombreUnidad,um.Factor,vd.Cantidad,vd.PrecioUnit,vd.Descuento,vd.Subtotal,vd.Igv,vd.Total,cast(vd.IdUnidad as varchar )+ '-' + cast(vd.Id as varchar) IdUnidad_IdDetalle,1 as IdDetalle,Adicional1,Adicional2,Adicional3,Adicional4,vd.igv_incluido,vd.IsCodBarraBusqueda 'IsCodBarraBusqueda'from mst_Venta_det vd------inner join mst_UnidadMedida um on vd.IdUnidad = um.Idwhere IdVenta = @id --and Anulado = 0 and vd.Flag = 1 --and pp.flag = 1--and pd.flag = 1--and pd.estado = 1--and p.estado = 1--and p.flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetComprasById",
    "Content": "CREATE proc [dbo].[SpGetComprasById]@Id intasselect * from mst_Compraswhere id = @Id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarPago",
    "Content": "CREATE proc [dbo].[spModificarPago]@idventa int,@contado bit,@credito bit,@efectivo money,@visa money,@mastercard money,@total money,@vuelto money,@debitoVisa bit,@debitoMastercard bitasdeclare @total2 money = (select TotalVenta from mst_Venta where id = @idventa)update tabla_FormaPago set Contado = @contado,Credito = @credito,Efectivo = @efectivo,visa = @visa,Mastercard = @mastercard,Total = @total2,Vuelto = @vuelto,DebitoVisa = @debitoVisa,DebitoMastercard = @debitoMastercardwhere IdVenta = @idventa"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spCargarVentasEditar",
    "Content": "CREATE proc [dbo].[spCargarVentasEditar]@id intasselect v.FechaEmision,CAST(d.Codigo as varchar) +'-'+ d.Descripcion,v.SerieDoc,v.NumeroDoc,v.DescripNotCred,v.NumeroDocAfectado,CAST(td.Id as varchar) +'-'+ td.descripcion,c.Id,v.DniRuc,v.RazonSocial,v.Direccion,v.Email,v.Observacion,CAST(fp.Id as varchar)+'-'+ fp.FormadePago,v.TotalVentafrom mst_Venta vinner join mst_documentos d on v.IdDocumento = d.Codigoinner join mst_TipoDocumento td on v.CodigoTipoDoc = td.Idinner join mst_Cliente c on v.IdCliente = c.Idinner join mst_FormaPago fp on v.IdFormaPago = fp.Idwhere v.id =@id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarCliente_Delivery",
    "Content": "CREATE procedure [dbo].[spInsertarCliente_Delivery]@id int,@idDocumento int,@numeroDocumento varchar(20),@razonSocial varchar(200),@nombreComercial varchar(200),@telefono varchar(20),@correo varchar(100),@usuarioCrea varchar(50)asIF(@id != 1)BEGINIF((select count(id) from mst_cliente where id = @id) >= 1)BEGINupdate mst_Cliente set idDocumento = @idDocumento, numerodocumento = @numeroDocumento, razonsocial = @razonsocial, nombrecomercial = @nombreComercial,telefono = @telefono,correo = @correo,usuarioModifica = @usuarioCrea,fechaModifica = getdate()where id = @idENDELSEBEGINinsert into mst_Cliente(idDocumento, numeroDocumento, razonSocial,nombreComercial,telefono, correo, usuarioCrea, delivery)values(@idDocumento, @numeroDocumento, @razonSocial,@nombreComercial,@telefono, @correo, @usuarioCrea, 1)declare @id_despues int = SCOPE_IDENTITY();select @id_despues as 'id'ENDEND"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetComprasDetallesByIdCompra",
    "Content": "CREATE proc [dbo].[SpGetComprasDetallesByIdCompra]@idCompra intasselect * from mst_ComprasDetalleswhere IdCompra = @idCompra and Estado = 1 and Flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddMarca",
    "Content": "CREATE proc [dbo].[SpAddMarca]@id int,@descripcion varchar(50)asif @id = 0begin\tinsert into mst_Marca (nombreMarca)\tvalues(@descripcion)\tselect CAST(SCOPE_IDENTITY() as int)endelsebegin\tupdate mst_Marca set nombreMarca=@descripcion\twhere id = @id\tselect @idend"
  },
  {
    "Type": "SQL_SCALAR_FUNCTION",
    "Name": "f_promedio",
    "Content": "CREATE function [dbo].[f_promedio] (@palabra varchar(max)) returns varchar(max) as begin    return Replace(@palabra, 'ñ', 'n') end;"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_descontar_pago_almacenMovimiento_by_idPago",
    "Content": "CREATE proc [dbo].[sp_descontar_pago_almacenMovimiento_by_idPago]@id intasupdate api_almacen_pagos set validado = 1where id = @iddeclare @idalmacenmovimiento int = (select top 1 almacen_movimiento_id from api_almacen_pagos where id = @id)declare @monto money = (select SUM(Monto) from api_almacen_pagos where almacen_movimiento_id = @idalmacenmovimiento and validado = 1)update mst_almacen_movimiento set importe_pagado = @montowhere id = @idalmacenmovimiento"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarCliente",
    "Content": "--eliminarCREATE procedure [dbo].[spEliminarCliente]@idCliente intasupdate mst_Cliente setflag = 0, estado = 0where id = @idCliente"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetConfiguracionGeneral",
    "Content": "CREATE proc [dbo].[SpGetConfiguracionGeneral]asselectRuc,razonsocial 'RazonSocial',nombrecomercial 'NombreComercial',direccion 'Direccion',telefono 'Telefono',celular 'Celular',web 'Web',correo 'Correo',marca 'Marca',grupo_linea_familia 'GrupoLineaFamilia',talla 'Talla',color 'Color',medida 'Medida',descripcion 'Descripcion',f_vence 'FechaVence',proveedor 'Proveedor',visa 'Visa',mastercard 'Mastercard',Logo 'Logo',impresora1 'Impresora1',impresora2 'Impresora2',ubigeo 'Ubigeo',ciudad 'Ciudad',distrito 'Distrito',igv 'Igv',Certificado_CPE 'CertificadoCpe',ContraseniaCertificadoCpe,UsuarioSecundarioSol,ContraseniaUsuarioSecundarioSol,Validar_Vendedor 'ValidarVendedor',ModoRapido 'ModoRapido',CodBarra 'CodigoBarra',NumCopias 'NumeroCopias',NumMesas 'NumeroMesas',Produccion,PassCorreo,Met_Busqueda 'MetodoBusqueda',UrlOse,TipoOse,UrlOseBeta,UrlOseOtros,UrlOseOtrosBeta,UrlOseAux,UrlOseAuxBeta,TipoMoneda,Puerto,Ssl,Servidor_Email 'ServidorEmail',Nube,Id,hora_envio 'HoraEnvio',pago_defecto 'PagoEfectivo',id_api_sunat 'IdApiSunat',clave_api_sunat 'ClaveApiSunat',ruta_copia_bd 'RutaCopiaBd',CodigoAnexo,ActivarLote,EntradaDirectaProducto,DocumentoVentaDefecto,ActivarBalanza,AlertaSunat,SorteoEstado,SorteoMonto,IsGravada,DiasEnviofrom tabla_configuracion_general"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetMarcaById",
    "Content": "CREATE proc [dbo].[SpGetMarcaById]@id intasselectId,nombreMarca as 'Descripcion'from mst_Marcawhere Estado = 1 and Flag =1 and id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_eliminar_almacen_movimiento_by_id",
    "Content": "CREATE proc [dbo].[sp_eliminar_almacen_movimiento_by_id]@id intasUPDATE mst_almacen_movimiento SET estado = 0, flag = 0, total = 0, importe_pagado = 0where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_insertar_llevar_venta_restaurant",
    "Content": "CREATE proc [dbo].[sp_insertar_llevar_venta_restaurant]@id_venta int,@llevar bitasupdate mst_Venta set llevar = @llevarwhere id = @id_venta"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarColor",
    "Content": "--eliminarCREATE proc [dbo].[spEliminarColor]@id intasupdate mst_Color setestado = 0, flag = 0where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpDeleteMarca",
    "Content": "CREATE proc [dbo].[SpDeleteMarca]@id intasupdate mst_Marca set estado = 0, flag = 0where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarDetalle",
    "Content": "CREATE proc [dbo].[spEliminarDetalle]@id intasdeclare @precio moneydeclare @idventa int-------------------------------------------------------------------update mst_Venta_det setFlag = 0, Anulado = 1where id = @id-------------------------------------------------------------------declare @subtotal moneyset @subtotal = (select Subtotal from mst_Venta_det where id = @id)set @idventa = (select IdVenta from mst_Venta_det where id = @id)update mst_Venta setTotalVenta = TotalVenta - @subtotalwhere Id = @idventaupdate tabla_FormaPago set Total = Total - @subtotalwhere IdVenta = @idventaexec spEliminarVenta_Det_Ext @idexec SpStockActualizarAlEliminarItemVenta @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificar_Horario_Envio",
    "Content": "CREATE proc [dbo].[spModificar_Horario_Envio]@horario intasupdate tabla_configuracion_general set hora_envio = @horario"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarDirecciones",
    "Content": "CREATE proc [dbo].[spEliminarDirecciones]@id intasupdate mst_Cliente_Direccion setEstado = 0,Flag = 0where Id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetDocumentoVentaDefecto",
    "Content": "CREATE proc [dbo].[SpGetDocumentoVentaDefecto]asselect * from tabla_configuracion_general"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spSecuenciaIdResumenes",
    "Content": "CREATE proc [dbo].[spSecuenciaIdResumenes]@fecha date,@tipoproceso char(2)asselect count(id) 'items' from Tbl_Resumenwhere cast(Fecha_Documento as date)  = @fecha and TipoProceso = @tipoproceso"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetSeguimientoVentaById",
    "Content": "CREATE proc [dbo].[SpGetSeguimientoVentaById]@id intasselect s.Id,IdVenta,IdTipoPago,tp.Descripcion 'TipoPago',s.descripcion 'Descripcion',s.Monto,s.FechaPago,s.Validado,s.idApertura 'IdApertura',s.idUsuario 'IdUsuario',s.idCaja 'IdCaja'from tbl_Seguimiento sinner join tbl_TipoPago_Seguimiento tp on s.IdTipoPago = tp.Idwhere s.id = @id and Eliminado = 0"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spAlmacenSaldo",
    "Content": "CREATE proc [dbo].[spAlmacenSaldo]@idalmacen int, @fecha dateascreate table #tempSaldoAcumulado(id int, nombre varchar(250),almacen1 varchar(250), inicial decimal(18,2), entrada decimal(18,2), ap decimal(18,2), q decimal(18,2), n decimal(18,2), p decimal(18,2), c1 decimal(18,2), de decimal(18,2), c2 decimal(18,2), saldo decimal(18,2));create table #tempSaldo(id int, nombre varchar(250),almacen1 varchar(250), inicial decimal(18,2), entrada decimal(18,2), ap decimal(18,2), q decimal(18,2), n decimal(18,2), p decimal(18,2), c1 decimal(18,2), de decimal(18,2), c2 decimal(18,2), saldo decimal(18,2)); DECLARE @fecha_anterior date  set @fecha_anterior =  (select DATEADD(day, -1, @fecha)) set NOCOUNT ONinsert into #tempSaldoAcumuladoselect tempfinal.Id,tempfinal.nombre,tempfinal.almacen1,SUM(tempfinal.inicial) AS Inicial,SUM(tempfinal.entrada) as entrada, sum(tempfinal.AI) as AP, sum(tempfinal.Q) as Q,sum(tempfinal.N) as N,sum(tempfinal.P) as P, sum(tempfinal.C1) as C1, sum(tempfinal.DE) as DE, sum(tempfinal.C2) as C2, sum(tempfinal.Saldo) as Saldo from (select pivotexx.Id,pivotexx.inicial,pivotexx.nombre,pivotexx.almacen1,ISNULL(pivotexx.entrada,0) as entrada, ISNULL(pivotexx.[ALMACEN PRINCIPAL],0) AS AI,ISNULL(pivotexx.QUINOÑES,0) AS Q,ISNULL(pivotexx.NAPO,0) AS N,ISNULL(pivotexx.PUNCHANA,0) AS P,ISNULL(pivotexx.[CAMARA N°1],0) AS C1,ISNULL(pivotexx.[DEVUELTOS],0) AS DE,ISNULL(pivotexx.[CAMARA N°2],0) AS C2,(pivotexx.inicial+pivotexx.entrada-isnull(pivotexx.[ALMACEN PRINCIPAL],0)-isnull(pivotexx.QUINOÑES,0)-isnull(pivotexx.NAPO,0)-isnull(pivotexx.PUNCHANA,0)-isnull(pivotexx.[CAMARA N°1],0)-isnull(pivotexx.[DEVUELTOS],0)-isnull(pivotexx.[CAMARA N°2],0)) as Saldo from (select temp.id,temp.inicial,SUM(temp.entrada) as entrada, temp.nombre, SUM(temp.salida) as salida, temp.almacen1, temp.almacen2from(selectpd.Id,p.nombreProducto + ' ' + pd.descripcion as nombre,(id.Cantidad * id.Factor) as inicial,cast(i.FechaCrea as date) as fecha,0 as entrada,0 as salida,'Inicial' as doc,a.Nombre as 'almacen1','' as 'almacen2'from mst_Inventario_Detalle idinner join mst_inventario i on id.Id_Inventario = i.Idinner join mst_ProductoDetalle pd on id.Id_Producto = pd.Idinner join mst_producto p on pd.idproducto = p.idinner join mst_Almacen a on i.Id_Almacen = a.Idwhere i.Id_Almacen = @idalmacen and id.flag = 1 and i.Flag = 1--------------------------------------------------------------------union allselectpd.Id,cd.Descripcion as nombre,0 as inicial,cast(c.FechaEmision as date) as fecha,(cd.Cantidad * um.factor) as entrada,0 as salida,cast(c.Serie as varchar)+ '-' + cast(c.Numero as varchar) as doc,a.Nombre as 'almacen1','' as 'almacen2'from mst_ComprasDetalles cdinner join mst_Compras c on cd.IdCompra = c.Idinner join mst_ProductoPresentacion pp on cd.IdProducto = pp.Idinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Idinner join mst_UnidadMedida um on cd.IdUnidad = um.Idinner join mst_Almacen a on c.IdAlmacen = a.Idwhere c.IdAlmacen = @idalmacen and cd. estado = 1 and cd.Flag = 1 and c.Estado = 0 and c.flag=1 and cast(c.FechaEmision as date) <= @fecha_anterior-------------------------------------------------------------------- union allselect pd.Id,vd.descripcion as nombre,0 as inicial,cast(v.FechaEmision as date) as fecha,0 as entrada,(vd.Cantidad * vd.Factor) as salida,cast(v.SerieDoc as varchar) + '-' + cast(v.NumeroDoc as varchar) as doc,a.Nombre as 'almacen1','' as 'almacen2'from mst_Venta_det vdinner join mst_Venta v on vd.IdVenta = v.Idinner join mst_ProductoPresentacion pp on vd.IdProducto = pp.Idinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Idinner join mst_Almacen a on v.IdAlmacen = a.IdWHERE v.IdAlmacen = @idalmacen and vd.Flag = 1 and cast(v.Observacion as varchar) = '' and cast(v.fecha as date) <= @fecha_anteriorAND v.IdDocumento <> '07'UNION ALLselect pd.Id,vd.descripcion as nombre,0 as inicial,cast(v.FechaEmision as date) as fecha,CASE v.TipoNotCredWHEN '01' THEN ISNULL((vd.Cantidad * vd.Factor),0.00)WHEN '02' THEN ISNULL((vd.Cantidad * vd.Factor),0.00)WHEN '03' THEN ISNULL((vd.Cantidad * vd.Factor),0.00)WHEN '06' THEN ISNULL((vd.Cantidad * vd.Factor),0.00)WHEN '07' THEN ISNULL((vd.Cantidad * vd.Factor),0.00)WHEN '08' THEN ISNULL((vd.Cantidad * vd.Factor),0.00)ELSE 0.00 END AS entrada,0.00 as salida,cast(v.SerieDoc as varchar) + '-' + cast(v.NumeroDoc as varchar) as doc,a.Nombre as 'almacen1','' as 'almacen2'from mst_Venta_det vdinner join mst_Venta v on vd.IdVenta = v.Idinner join mst_ProductoPresentacion pp on vd.IdProducto = pp.Idinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Idinner join mst_Almacen a on v.IdAlmacen = a.IdWHERE v.Anulado = 0 and v.IdAlmacen = @idalmacen and vd.Flag = 1 and cast(v.fecha as date) <= @fecha_anteriorAND v.IdDocumento = '07' AND (v.TipoNotCred<>'04' OR v.TipoNotCred<>'05' OR v.TipoNotCred<>'09' OR v.TipoNotCred<>'10')--TRASLADOS--------------------------UNION ALLselecttd.idProducto as 'id',td.nombreProducto as 'nombre',0 as inicial,t.fecha as 'fecha',0 as entrada,(td.cantidad * td.factor) as salida,CAST(t.serie as varchar) + '-' + CAST(t.numero as varchar) as doc,a.Nombre as 'almacen1',b.Nombre as 'almacen2'from mst_almacen_traslado_detalle tdinner join mst_almacen_traslado t on t.id = td.almacen_traslado_idinner join mst_Almacen a on t.idAlmacenSalida = a.Idinner join mst_Almacen b on t.idAlmacenEntrada = b.Idwhere idAlmacenSalida = @idalmacen and td.flag = 1 and t.flag = 1 and cast(t.fecha as date) <= @fecha_anterior--------------------------------------- union allselecttd.idProducto as 'id',td.nombreProducto as 'nombre',0 as inicial,t.fecha as 'fecha',(td.cantidad * td.factor) as 'entrada',0 as 'salida',CAST(t.serie as varchar) + '-' + CAST(t.numero as varchar) as doc,a.Nombre as 'almacen1',b.Nombre as 'almacen2'from mst_almacen_traslado_detalle tdinner join mst_almacen_traslado t on t.id = td.almacen_traslado_idinner join mst_Almacen a on t.idAlmacenSalida = a.Idinner join mst_Almacen b on t.idAlmacenEntrada = b.Idwhere idAlmacenEntrada = @idalmacen and td.flag = 1 and t.flag = 1 and cast(t.fecha as date) <= @fecha_anterior--TRASLADOS----------------------------MOVIMIENTOS----------------------------UNION ALLSELECTmd.idProducto as 'id',md.nombreProducto as 'nombre',0 as inicial,m.fecha as 'fecha',(md.cantidad * md.factor) as 'entrada',0 as 'salida',m.documento as 'doc',a.Nombre as 'almacen1',a.Nombre as 'almacen2'FROM mst_almacen_movimiento_detalle mdINNER JOIN mst_almacen_movimiento m on m.id = md.almacen_movimiento_idinner join mst_Almacen a on m.idAlmacen = a.IdWHERE idAlmacen = @idalmacen and entrada = 1 and md.flag = 1 and m.flag = 1 and cast(M.fecha as date) <= @fecha_anterior---------------------------------------------UNION ALLSELECTmd.idProducto as 'id',md.nombreProducto as 'nombre',0 as inicial,m.fecha as 'fecha',0 as 'entrada',(md.cantidad * md.factor) as 'salida',CAST(m.serie as varchar) + '-' + CAST(m.numero as varchar) as 'doc',a.Nombre as 'almacen1',a.Nombre as 'almacen2'FROM mst_almacen_movimiento_detalle mdINNER JOIN mst_almacen_movimiento m on m.id = md.almacen_movimiento_idinner join mst_Almacen a on m.idAlmacen = a.IdWHERE idAlmacen = @idalmacen and salida = 1 and md.flag = 1 and m.flag = 1 and cast(M.fecha as date) <= @fecha_anterior--MOVIMIENTOS------------------------------ajustesUNION ALLSELECTmd.idProducto as 'id',md.nombreProducto as 'nombre',0 as inicial,m.fecha as 'fecha',(md.cantidad * md.factor) as 'entrada',0 as 'salida',m.documento as 'doc',a.Nombre as 'almacen1',a.Nombre as 'almacen2'FROM mst_almacen_movimiento_detalle mdINNER JOIN mst_almacen_movimiento m on m.id = md.almacen_movimiento_idinner join mst_Almacen a on m.idAlmacen = a.IdWHERE idAlmacen = @idalmacen and m.ajuste = 1 and md.flag = 1 and m.flag = 1 and cast(M.fecha as date) <= @fecha_anterior---------------------------------------------) as TempGROUP by temp.id,temp.nombre, temp.inicial, temp.almacen1, temp.almacen2) as Temp2pivot (sum(temp2.salida)for temp2.almacen2 in ([ALMACEN PRINCIPAL], [QUINOÑES], [NAPO], [PUNCHANA],[CAMARA N°1],[DEVUELTOS],[CAMARA N°2])) AS pivotexx) AS tempfinalGROUP BY tempfinal.Id,tempfinal.nombre,tempfinal.almacen1order by tempfinal.nombre ascset NOCOUNT ONinsert into #tempSaldoselect tempfinal.Id,tempfinal.nombre,tempfinal.almacen1,SUM(tempfinal.inicial) AS Inicial,SUM(tempfinal.entrada) as entrada, sum(tempfinal.AI) as AP, sum(tempfinal.Q) as Q,sum(tempfinal.N) as N,sum(tempfinal.P) as P, sum(tempfinal.C1) as C1, sum(tempfinal.DE) as DE, sum(tempfinal.C2) as C2, sum(tempfinal.Saldo) as Saldo from (select pivotexx.Id,pivotexx.inicial,pivotexx.nombre,pivotexx.almacen1,ISNULL(pivotexx.entrada,0) as entrada, ISNULL(pivotexx.[ALMACEN PRINCIPAL],0) AS AI,ISNULL(pivotexx.QUINOÑES,0) AS Q,ISNULL(pivotexx.NAPO,0) AS N,ISNULL(pivotexx.PUNCHANA,0) AS P,ISNULL(pivotexx.[CAMARA N°1],0) AS C1,ISNULL(pivotexx.[DEVUELTOS],0) AS DE,ISNULL(pivotexx.[CAMARA N°2],0) AS C2,(pivotexx.inicial+pivotexx.entrada-isnull(pivotexx.[ALMACEN PRINCIPAL],0)-isnull(pivotexx.QUINOÑES,0)-isnull(pivotexx.NAPO,0)-isnull(pivotexx.PUNCHANA,0)-isnull(pivotexx.[CAMARA N°1],0)-isnull(pivotexx.[DEVUELTOS],0)-isnull(pivotexx.[CAMARA N°2],0)) as Saldo from (select temp.id,temp.inicial,SUM(temp.entrada) as entrada, temp.nombre, SUM(temp.salida) as salida, temp.almacen1, temp.almacen2from(selectpd.Id,p.nombreProducto + ' ' + pd.descripcion as nombre,(id.Cantidad * id.Factor) as inicial,cast(i.FechaCrea as date) as fecha,0 as entrada,0 as salida,'Inicial' as doc,a.Nombre as 'almacen1','' as 'almacen2'from mst_Inventario_Detalle idinner join mst_inventario i on id.Id_Inventario = i.Idinner join mst_ProductoDetalle pd on id.Id_Producto = pd.Idinner join mst_producto p on pd.idproducto = p.idinner join mst_Almacen a on i.Id_Almacen = a.Idwhere i.Id_Almacen = @idalmacen and id.flag = 1 and i.Flag = 1--------------------------------------------------------------------union allselectpd.Id,cd.Descripcion as nombre,0 as inicial,cast(c.FechaEmision as date) as fecha,(cd.Cantidad * um.factor) as entrada,0 as salida,cast(c.Serie as varchar)+ '-' + cast(c.Numero as varchar) as doc,a.Nombre as 'almacen1','' as 'almacen2'from mst_ComprasDetalles cdinner join mst_Compras c on cd.IdCompra = c.Idinner join mst_ProductoPresentacion pp on cd.IdProducto = pp.Idinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Idinner join mst_UnidadMedida um on cd.IdUnidad = um.Idinner join mst_Almacen a on c.IdAlmacen = a.Idwhere c.IdAlmacen = @idalmacen and cd. estado = 1 and cd.Flag = 1 and c.Estado = 0 and c.flag=1 and cast(c.FechaEmision as date) = @fecha--------------------------------------------------------------------union allselect pd.Id,vd.descripcion as nombre,0 as inicial,cast(v.FechaEmision as date) as fecha,0 as entrada,(vd.Cantidad * vd.Factor) as salida,cast(v.SerieDoc as varchar) + '-' + cast(v.NumeroDoc as varchar) as doc,a.Nombre as 'almacen1','' as 'almacen2'from mst_Venta_det vdinner join mst_Venta v on vd.IdVenta = v.Idinner join mst_ProductoPresentacion pp on vd.IdProducto = pp.Idinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Idinner join mst_Almacen a on v.IdAlmacen = a.IdWHERE v.IdAlmacen = @idalmacen and vd.Flag = 1 and  cast(v.fecha as date) = @fechaAND v.IdDocumento <> '07'UNION ALLselect pd.Id,vd.descripcion as nombre,0 as inicial,cast(v.FechaEmision as date) as fecha,CASE v.TipoNotCredWHEN '01' THEN ISNULL((vd.Cantidad * vd.Factor),0.00)WHEN '02' THEN ISNULL((vd.Cantidad * vd.Factor),0.00)WHEN '03' THEN ISNULL((vd.Cantidad * vd.Factor),0.00)WHEN '06' THEN ISNULL((vd.Cantidad * vd.Factor),0.00)WHEN '07' THEN ISNULL((vd.Cantidad * vd.Factor),0.00)WHEN '08' THEN ISNULL((vd.Cantidad * vd.Factor),0.00)ELSE 0.00 END AS entrada,0.00 as salida,cast(v.SerieDoc as varchar) + '-' + cast(v.NumeroDoc as varchar) as doc,a.Nombre as 'almacen1','' as 'almacen2'from mst_Venta_det vdinner join mst_Venta v on vd.IdVenta = v.Idinner join mst_ProductoPresentacion pp on vd.IdProducto = pp.Idinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Idinner join mst_Almacen a on v.IdAlmacen = a.IdWHERE v.Anulado = 0 and v.IdAlmacen = @idalmacen and vd.Flag = 1 and   cast(v.fecha as date) = @fechaAND v.IdDocumento = '07' AND (v.TipoNotCred<>'04' OR v.TipoNotCred<>'05' OR v.TipoNotCred<>'09' OR v.TipoNotCred<>'10')--TRASLADOS--------------------------union allselecttd.idProducto as 'id',td.nombreProducto as 'nombre',0 as inicial,t.fecha as 'fecha',0 as entrada,(td.cantidad * td.factor) as salida,CAST(t.serie as varchar) + '-' + CAST(t.numero as varchar) as doc,a.Nombre as 'almacen1',b.Nombre as 'almacen2'from mst_almacen_traslado_detalle tdinner join mst_almacen_traslado t on t.id = td.almacen_traslado_idinner join mst_Almacen a on t.idAlmacenSalida = a.Idinner join mst_Almacen b on t.idAlmacenEntrada = b.Idwhere idAlmacenSalida = @idalmacen and td.flag = 1 and t.flag = 1 and cast(t.fecha as date) = @fecha--------------------------------------- union allselecttd.idProducto as 'id',td.nombreProducto as 'nombre',0 as inicial,t.fecha as 'fecha',(td.cantidad * td.factor) as 'entrada',0 as 'salida',CAST(t.serie as varchar) + '-' + CAST(t.numero as varchar) as doc,a.Nombre as 'almacen1',b.Nombre as 'almacen2'from mst_almacen_traslado_detalle tdinner join mst_almacen_traslado t on t.id = td.almacen_traslado_idinner join mst_Almacen a on t.idAlmacenSalida = a.Idinner join mst_Almacen b on t.idAlmacenEntrada = b.Idwhere idAlmacenEntrada = @idalmacen and td.flag = 1 and t.flag = 1 and cast(t.fecha as date) = @fecha--TRASLADOS----------------------------MOVIMIENTOS----------------------------UNION ALLSELECTmd.idProducto as 'id',md.nombreProducto as 'nombre',0 as inicial,m.fecha as 'fecha',(md.cantidad * md.factor) as 'entrada',0 as 'salida',m.documento as 'doc',a.Nombre as 'almacen1',a.Nombre as 'almacen2'FROM mst_almacen_movimiento_detalle mdINNER JOIN mst_almacen_movimiento m on m.id = md.almacen_movimiento_idinner join mst_Almacen a on m.idAlmacen = a.IdWHERE idAlmacen = @idalmacen and entrada = 1 and md.flag = 1 and m.flag = 1 and cast(M.fecha as date) = @fecha---------------------------------------------UNION ALLSELECTmd.idProducto as 'id',md.nombreProducto as 'nombre',0 as inicial,m.fecha as 'fecha',0 as 'entrada',(md.cantidad * md.factor) as 'salida',CAST(m.serie as varchar) + '-' + CAST(m.numero as varchar) as 'doc',a.Nombre as 'almacen1',a.Nombre as 'almacen2'FROM mst_almacen_movimiento_detalle mdINNER JOIN mst_almacen_movimiento m on m.id = md.almacen_movimiento_idinner join mst_Almacen a on m.idAlmacen = a.IdWHERE idAlmacen = @idalmacen and salida = 1 and md.flag = 1 and m.flag = 1 and cast(M.fecha as date) = @fecha--MOVIMIENTOS------------------------------ajustesUNION ALLSELECTmd.idProducto as 'id',md.nombreProducto as 'nombre',0 as inicial,m.fecha as 'fecha',(md.cantidad * md.factor) as 'entrada',0 as 'salida',m.documento as 'doc',a.Nombre as 'almacen1',a.Nombre as 'almacen2'FROM mst_almacen_movimiento_detalle mdINNER JOIN mst_almacen_movimiento m on m.id = md.almacen_movimiento_idinner join mst_Almacen a on m.idAlmacen = a.IdWHERE idAlmacen = @idalmacen and m.ajuste = 1 and md.flag = 1 and m.flag = 1 and cast(M.fecha as date) = @fecha---------------------------------------------) as TempGROUP by temp.id,temp.nombre, temp.inicial, temp.almacen1, temp.almacen2) as Temp2pivot (sum(temp2.salida)for temp2.almacen2 in ([ALMACEN PRINCIPAL], [QUINOÑES], [NAPO], [PUNCHANA],[CAMARA N°1],[DEVUELTOS],[CAMARA N°2])) AS pivotexx) AS tempfinalGROUP BY tempfinal.Id,tempfinal.nombre,tempfinal.almacen1order by tempfinal.nombre asc set NOCOUNT ON\t update #tempSaldo set #tempSaldo.inicial = #tempSaldoAcumulado.saldo, #tempSaldo.saldo = (#tempSaldoAcumulado.saldo + #tempSaldo.entrada - #tempSaldo.ap - #tempSaldo.n - #tempSaldo.q - #tempSaldo.p - #tempSaldo.c1- #tempSaldo.de- #tempSaldo.c2) from #tempSaldoAcumulado where #tempSaldo.id = #tempSaldoAcumulado.id select * from #tempSaldo where #tempSaldo.entrada<>0 or #tempSaldo.ap<>0 or #tempSaldo.q<>0 or #tempSaldo.n<>0 or #tempSaldo.p<>0 or #tempSaldo.c1<>0 or #tempSaldo.de<>0 or #tempSaldo.c2<>0"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarDoc_Serie_Usuario",
    "Content": "CREATE proc [dbo].[spEliminarDoc_Serie_Usuario]@id intasupdate mst_Doc_Serie_Usuario set Estado = 0, flag = 0where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetEntradaDirectaProducto",
    "Content": "CREATE proc [dbo].[SpGetEntradaDirectaProducto]asselect EntradaDirectaProducto from tabla_configuracion_general"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetSeguimientoVentaByIdVenta",
    "Content": "CREATE proc [dbo].[SpGetSeguimientoVentaByIdVenta]@idVenta intasselect s.Id,IdVenta,IdTipoPago,tp.Descripcion 'TipoPago',s.descripcion 'Descripcion',s.Monto,s.FechaPago,s.Validado,s.idApertura 'IdApertura',s.idUsuario 'IdUsuario',s.idCaja 'IdCaja'from tbl_Seguimiento sinner join tbl_TipoPago_Seguimiento tp on s.IdTipoPago = tp.Idwhere s.IdVenta = @idVenta and Eliminado = 0"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spAlmaceSaldo",
    "Content": "CREATE proc [dbo].[spAlmaceSaldo]@idalmacen int, @fecha dateasselect * from (select temp.id,temp.inicial,SUM(temp.entrada) as entrada, temp.nombre,cast(temp.fecha as date) as fecha, SUM(temp.salida) as salida, temp.almacen1, temp.almacen2, stok.Entradas,stok.Salidas,stok.Saldofrom(selectpd.Id,p.nombreProducto + ' ' + pd.descripcion as nombre,(id.Cantidad * id.Factor) as inicial,cast(i.FechaCrea as date) as fecha,0 as entrada,0 as salida,'Inicial' as doc,a.Nombre as 'almacen1','' as 'almacen2'from mst_Inventario_Detalle idinner join mst_inventario i on id.Id_Inventario = i.Idinner join mst_ProductoDetalle pd on id.Id_Producto = pd.Idinner join mst_producto p on pd.idproducto = p.idinner join mst_Almacen a on i.Id_Almacen = a.Idwhere i.Id_Almacen = @idalmacen and id.flag = 1 and i.Flag = 1--------------------------------------------------------------------union allselectpd.Id,cd.Descripcion as nombre,0 as inicial,cast(c.FechaEmision as date) as fecha,(cd.Cantidad * um.factor) as entrada,0 as salida,cast(c.Serie as varchar)+ '-' + cast(c.Numero as varchar) as doc,a.Nombre as 'almacen1','' as 'almacen2'from mst_ComprasDetalles cdinner join mst_Compras c on cd.IdCompra = c.Idinner join mst_ProductoPresentacion pp on cd.IdProducto = pp.Idinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Idinner join mst_UnidadMedida um on cd.IdUnidad = um.Idinner join mst_Almacen a on c.IdAlmacen = a.Idwhere c.IdAlmacen = @idalmacen and cd. estado = 1 and cd.Flag = 1 and c.Estado = 0 and c.flag=1--------------------------------------------------------------------union allselect pd.Id,vd.descripcion as nombre,0 as inicial,cast(v.FechaEmision as date) as fecha,0 as entrada,(vd.Cantidad * vd.Factor) as salida,cast(v.SerieDoc as varchar) + '-' + cast(v.NumeroDoc as varchar) as doc,a.Nombre as 'almacen1','' as 'almacen2'from mst_Venta_det vdinner join mst_Venta v on vd.IdVenta = v.Idinner join mst_ProductoPresentacion pp on vd.IdProducto = pp.Idinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Idinner join mst_Almacen a on v.IdAlmacen = a.IdWHERE v.IdAlmacen = @idalmacen and vd.Flag = 1AND v.IdDocumento <> '07'UNION ALLselect pd.Id,vd.descripcion as nombre,0 as inicial,cast(v.FechaEmision as date) as fecha,CASE v.TipoNotCredWHEN '01' THEN ISNULL((vd.Cantidad * vd.Factor),0.00)WHEN '02' THEN ISNULL((vd.Cantidad * vd.Factor),0.00)WHEN '03' THEN ISNULL((vd.Cantidad * vd.Factor),0.00)WHEN '06' THEN ISNULL((vd.Cantidad * vd.Factor),0.00)WHEN '07' THEN ISNULL((vd.Cantidad * vd.Factor),0.00)WHEN '08' THEN ISNULL((vd.Cantidad * vd.Factor),0.00)ELSE 0.00 END AS entrada,0.00 as salida,cast(v.SerieDoc as varchar) + '-' + cast(v.NumeroDoc as varchar) as doc,a.Nombre as 'almacen1','' as 'almacen2'from mst_Venta_det vdinner join mst_Venta v on vd.IdVenta = v.Idinner join mst_ProductoPresentacion pp on vd.IdProducto = pp.Idinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Idinner join mst_Almacen a on v.IdAlmacen = a.IdWHERE v.Anulado = 0 and v.IdAlmacen = @idalmacen and vd.Flag = 1AND v.IdDocumento = '07' AND (v.TipoNotCred<>'04' OR v.TipoNotCred<>'05' OR v.TipoNotCred<>'09' OR v.TipoNotCred<>'10')--TRASLADOS--------------------------union allselecttd.idProducto as 'id',td.nombreProducto as 'nombre',0 as inicial,t.fecha as 'fecha',0 as entrada,(td.cantidad * td.factor) as salida,CAST(t.serie as varchar) + '-' + CAST(t.numero as varchar) as doc,a.Nombre as 'almacen1',b.Nombre as 'almacen2'from mst_almacen_traslado_detalle tdinner join mst_almacen_traslado t on t.id = td.almacen_traslado_idinner join mst_Almacen a on t.idAlmacenSalida = a.Idinner join mst_Almacen b on t.idAlmacenEntrada = b.Idwhere idAlmacenSalida = @idalmacen and td.flag = 1 and t.flag = 1---------------------------------------union allselecttd.idProducto as 'id',td.nombreProducto as 'nombre',0 as inicial,t.fecha as 'fecha',(td.cantidad * td.factor) as 'entrada',0 as 'salida',CAST(t.serie as varchar) + '-' + CAST(t.numero as varchar) as doc,a.Nombre as 'almacen1',b.Nombre as 'almacen2'from mst_almacen_traslado_detalle tdinner join mst_almacen_traslado t on t.id = td.almacen_traslado_idinner join mst_Almacen a on t.idAlmacenSalida = a.Idinner join mst_Almacen b on t.idAlmacenEntrada = b.Idwhere idAlmacenEntrada = @idalmacen and td.flag = 1 and t.flag = 1--TRASLADOS----------------------------MOVIMIENTOS----------------------------UNION ALLSELECTmd.idProducto as 'id',md.nombreProducto as 'nombre',0 as inicial,m.fecha as 'fecha',(md.cantidad * md.factor) as 'entrada',0 as 'salida',m.documento as 'doc',a.Nombre as 'almacen1','' as 'almacen2'FROM mst_almacen_movimiento_detalle mdINNER JOIN mst_almacen_movimiento m on m.id = md.almacen_movimiento_idinner join mst_Almacen a on m.idAlmacen = a.IdWHERE idAlmacen = @idalmacen and entrada = 1 and md.flag = 1 and m.flag = 1---------------------------------------------UNION ALLSELECTmd.idProducto as 'id',md.nombreProducto as 'nombre',0 as inicial,m.fecha as 'fecha',0 as 'entrada',(md.cantidad * md.factor) as 'salida',CAST(m.serie as varchar) + '-' + CAST(m.numero as varchar) as 'doc',a.Nombre as 'almacen1','' as 'almacen2'FROM mst_almacen_movimiento_detalle mdINNER JOIN mst_almacen_movimiento m on m.id = md.almacen_movimiento_idinner join mst_Almacen a on m.idAlmacen = a.IdWHERE idAlmacen = @idalmacen and entrada = 0 and md.flag = 1 and m.flag = 1--MOVIMIENTOS----------------------------UNION ALLSELECTmd.idProducto as 'id',md.nombreProducto as 'nombre',0 as inicial,m.fecha as 'fecha',(md.cantidad * md.factor) as 'entrada',0 as 'salida',m.documento as 'doc',a.Nombre as 'almacen1','' as 'almacen2'FROM mst_almacen_movimiento_detalle mdINNER JOIN mst_almacen_movimiento m on m.id = md.almacen_movimiento_idinner join mst_Almacen a on m.idAlmacen = a.IdWHERE idAlmacen = @idalmacen and m.ajuste = 1 and md.flag = 1 and m.flag = 1) as Tempinner join Stocks_Acumulados stok on Temp.id = stok.IdProductowhere stok.IdAlmacen = @idalmacen and cast(temp.fecha as date) = @fecha --and temp.id = @idGROUP by temp.id,temp.nombre, temp.inicial, temp.fecha, temp.almacen1, temp.almacen2, stok.Entradas,stok.Salidas,stok.Saldo) as Temp2pivot (sum(temp2.salida)for temp2.almacen2 in ([ALMACEN PRINCIPAL], [QUINOÑES], [NAPO], [PUNCHANA],[ALMACEN SECUNDARIO])) AS pivotexx"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarDocSerie",
    "Content": "CREATE proc [dbo].[spEliminarDocSerie]@id intasupdate mst_Doc_Serie set Estado =0,Flag = 0where Id = @id"
  },
  {
    "Type": "VIEW",
    "Name": "vw_FiltroMstProductos",
    "Content": "CREATE VIEW [dbo].[vw_FiltroMstProductos] AS selectpd.Id Id,pd.codigoBarra Cod_Barra,p.nombreProducto + ' ' + pd.descripcion + ' ' + mmm.descripcion + ' ' +mm.nombreMarca + ' ' + t.descripcion+' '+ c.descripcion  as 'Descripcion',um.nombreUnidad U_Medida,um.factor Factor,ppp.nombre Proveedor,iif(CONVERT(varchar,pd.fechavencimiento,1) IS NULL,'Sin definir',datename(year,pd.fechavencimiento)+'-'+datename(month,pd.fechavencimiento))F_Vence,'' Imagen,(pp.precioUnitario) Precio_Unit,um.id Id_Unidad,p.Id Id_Producto,pd.estado Estado,isnull(stock.Saldo,0) Stock,pp.Id IdPresentacion,stock.IdAlmacen,g.Descripcion as Grupo,g.id idGrupo,pd.stockminimo,pp.Codigofrom mst_Producto p inner join mst_ProductoDetalle pd on p.Id = pd.idProductoinner join mst_ProductoPresentacion pp on pd.Id=  pp.idProductosDetalleinner join mst_Marca mm on p.idMarca = mm.Idinner join mst_Talla t on pd.idTalla = t.Idinner join mst_Color c on pd.idColores = c.Idinner join mst_UnidadMedida um on pp.idUnidad = um.Idinner join mst_Medidas mmm on pd.idmedida = mmm.idinner join mst_Proveedor ppp on p.idproveedor = ppp.idleft join Stocks_Acumulados stock on pd.id = stock.idproductoinner join mst_Grupo g on p.IdGrupo = g.Idwhere p.flag = 1 and (p.estado = 1 OR P.estado = 0)and (pd.estado = 1 OR pd.estado = 0)and pp.estado = 1and pp.flag = 1 and pp.Principal = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarIconsMenu",
    "Content": "CREATE proc [dbo].[spModificarIconsMenu]@id int,@imagen imageasupdate tabla_Menus set Icono = @imagenwhere id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpFilterProductoVentaByCodigoBarraId",
    "Content": "CREATE proc [dbo].[SpFilterProductoVentaByCodigoBarraId]@codigoBarra varchar(max),@idProductoPresentacion int,@idAlmacen intasif @idProductoPresentacion = 0begin\tselect top 20 * from ViewProductoVenta\twhere CodigoBarra = @codigoBarra\tand IdAlmacen = @idAlmacen\torder by IsPrincipal descendelsebegin\tselect top 20 * from ViewProductoVenta\twhere IdProductoPresentacion = @idProductoPresentacion\tand IdAlmacen = @idAlmacen\torder by IsPrincipal descend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_mostrar_detalles_mesa_delivery_llevar",
    "Content": "CREATE proc [dbo].[sp_mostrar_detalles_mesa_delivery_llevar]@fecha_ini date,@fecha_fin date,@op varchar(10),@id_grupo intasif @id_grupo = 0\tbegin\t\tif @op = 'mesa'\t\t\t\tbegin\t\t\t\t\tselect pd.IdProducto, g.Descripcion as 'Grupo', p.nombreProducto as 'Producto', sum(vd.Cantidad) as 'Cantidad', sum(vd.Total) as 'Total' from mst_Venta_det vd\t\t\t\t\tinner join mst_Venta v on vd.IdVenta = v.Id\t\t\t\t\tinner join mst_ProductoPresentacion pp on vd.IdProducto = pp.Id\t\t\t\t\tinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Id\t\t\t\t\tinner join mst_Producto p on pd.idProducto = p.Id\t\t\t\t\tinner join mst_Grupo g on p.IdGrupo = g.Id\t\t\t\t\twhere IdMesa > 0 and IdMesa < 500 and delivery = 0 and llevar = 0 and CAST(fecha_apertura as date) between @fecha_ini and @fecha_fin and v.Anulado = 0 and vd.Anulado = 0 and vd.Flag = 1\t\t\t\t\tgroup by pd.IdProducto, p.nombreProducto, g.Descripcion\t\t\t\t\torder by p.nombreProducto asc\t\t\t\tend\t\t\telse if @op = 'delivery'\t\t\t\tbegin\t\t\t\t\tselect pd.IdProducto, g.descripcion as 'Grupo', p.nombreProducto as 'Producto', sum(vd.Cantidad) as 'Cantidad', sum(vd.Total) as 'Total' from mst_Venta_det vd\t\t\t\t\tinner join mst_Venta v on vd.IdVenta = v.Id\t\t\t\t\tinner join mst_ProductoPresentacion pp on vd.IdProducto = pp.Id\t\t\t\t\tinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Id\t\t\t\t\tinner join mst_Producto p on pd.idProducto = p.Id\t\t\t\t\tinner join mst_Grupo g on p.IdGrupo = g.Id\t\t\t\t\twhere IdMesa >= 1000 and delivery = 1 and llevar = 0 and CAST(fecha_apertura as date) between @fecha_ini and @fecha_fin and v.Anulado = 0 and vd.Anulado = 0 and vd.Flag = 1\t\t\t\t\tgroup by pd.IdProducto, p.nombreProducto, g.Descripcion\t\t\t\t\torder by p.nombreProducto asc\t\t\t\tend \t\t\t else if @op = 'llevar'\t\t\t\tbegin\t\t\t\t\tselect  pd.IdProducto, g.Descripcion as 'Grupo', p.nombreProducto as 'Producto', sum(vd.Cantidad) as 'Cantidad', sum(vd.Total) as 'Total' from mst_Venta_det vd\t\t\t\t\tinner join mst_Venta v on vd.IdVenta = v.Id\t\t\t\t\tinner join mst_ProductoPresentacion pp on vd.IdProducto = pp.Id\t\t\t\t\tinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Id\t\t\t\t\tinner join mst_Producto p on pd.idProducto = p.Id\t\t\t\t\tinner join mst_Grupo g on p.IdGrupo = g.Id\t\t\t\t\twhere IdMesa >= 500 and IdMesa < 1000 and delivery = 0 and llevar = 1 and CAST(fecha_apertura as date) between @fecha_ini and @fecha_fin and v.Anulado = 0\t\t\t\t\tgroup by pd.IdProducto, p.nombreProducto, g.Descripcion\t\t\t\t\torder by p.nombreProducto asc\t\t\t\tend\t\t\t\telse if @op = 'todos'\t\t\tbegin\t\t\t\tselect pd.IdProducto, g.Descripcion as 'Grupo', p.nombreProducto as 'Producto', sum(vd.Cantidad) as 'Cantidad', sum(vd.Total) as 'Total' from mst_Venta_det vd\t\t\t\t\tinner join mst_Venta v on vd.IdVenta = v.Id\t\t\t\t\tinner join mst_ProductoPresentacion pp on vd.IdProducto = pp.Id\t\t\t\t\tinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Id\t\t\t\t\tinner join mst_Producto p on pd.idProducto = p.Id\t\t\t\t\tinner join mst_Grupo g on p.IdGrupo = g.Id\t\t\t\t\twhere IdMesa > 0 and CAST(fecha_apertura as date) between @fecha_ini and @fecha_fin and v.Anulado = 0 and vd.Anulado = 0 and vd.Flag = 1\t\t\t\t\tgroup by pd.IdProducto, p.nombreProducto, g.Descripcion\t\t\t\t\torder by p.nombreProducto asc\t\t\tend\tendelse--si vienen grupos\tbegin\t\t\t\tif @op = 'mesa'\t\t\t\tbegin\t\t\t\t\tselect pd.IdProducto,g.Descripcion as 'Grupo', p.nombreProducto as 'Producto', sum(vd.Cantidad) as 'Cantidad', sum(vd.Total) as 'Total' from mst_Venta_det vd\t\t\t\t\tinner join mst_Venta v on vd.IdVenta = v.Id\t\t\t\t\tinner join mst_ProductoPresentacion pp on vd.IdProducto = pp.Id\t\t\t\t\tinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Id\t\t\t\t\tinner join mst_Producto p on pd.idProducto = p.Id\t\t\t\t\tinner join mst_Grupo g on p.IdGrupo = g.Id\t\t\t\t\twhere IdMesa > 0 and IdMesa < 500 and delivery = 0 and llevar = 0 and CAST(fecha_apertura as date) between @fecha_ini and @fecha_fin and v.Anulado = 0 and vd.Anulado = 0 and vd.Flag = 1 and p.idgrupo = @id_grupo\t\t\t\t\tgroup by pd.IdProducto, p.nombreProducto, g.Descripcion\t\t\t\t\torder by p.nombreProducto asc\t\t\t\tend\t\t\telse if @op = 'delivery'\t\t\t\tbegin\t\t\t\t\tselect pd.IdProducto, g.descripcion as 'Grupo', p.nombreProducto as 'Producto', sum(vd.Cantidad) as 'Cantidad', sum(vd.Total) as 'Total' from mst_Venta_det vd\t\t\t\t\tinner join mst_Venta v on vd.IdVenta = v.Id\t\t\t\t\tinner join mst_ProductoPresentacion pp on vd.IdProducto = pp.Id\t\t\t\t\tinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Id\t\t\t\t\tinner join mst_Producto p on pd.idProducto = p.Id\t\t\t\t\tinner join mst_Grupo g on p.IdGrupo = g.Id\t\t\t\t\twhere IdMesa >= 1000 and delivery = 1 and llevar = 0 and CAST(fecha_apertura as date) between @fecha_ini and @fecha_fin and v.Anulado = 0 and vd.Anulado = 0 and vd.Flag = 1 and p.idgrupo = @id_grupo\t\t\t\t\tgroup by pd.IdProducto, p.nombreProducto, g.Descripcion\t\t\t\t\torder by p.nombreProducto asc\t\t\t\tend \t\t\t else if @op = 'llevar'\t\t\t\tbegin\t\t\t\t\tselect  pd.IdProducto, g.Descripcion as 'Grupo', p.nombreProducto as 'Producto', sum(vd.Cantidad) as 'Cantidad', sum(vd.Total) as 'Total' from mst_Venta_det vd\t\t\t\t\tinner join mst_Venta v on vd.IdVenta = v.Id\t\t\t\t\tinner join mst_ProductoPresentacion pp on vd.IdProducto = pp.Id\t\t\t\t\tinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Id\t\t\t\t\tinner join mst_Producto p on pd.idProducto = p.Id\t\t\t\t\tinner join mst_Grupo g on p.IdGrupo = g.Id\t\t\t\t\twhere IdMesa >= 500 and IdMesa < 1000 and delivery = 0 and llevar = 1 and CAST(fecha_apertura as date) between @fecha_ini and @fecha_fin and v.Anulado = 0 and p.idgrupo = @id_grupo\t\t\t\t\tgroup by pd.IdProducto, p.nombreProducto, g.Descripcion\t\t\t\t\torder by p.nombreProducto asc\t\t\t\tend\t\t\t\telse if @op = 'todos'\t\t\tbegin\t\t\t\tselect pd.IdProducto, g.Descripcion as 'Grupo', p.nombreProducto as 'Producto', sum(vd.Cantidad) as 'Cantidad', sum(vd.Total) as 'Total' from mst_Venta_det vd\t\t\t\t\tinner join mst_Venta v on vd.IdVenta = v.Id\t\t\t\t\tinner join mst_ProductoPresentacion pp on vd.IdProducto = pp.Id\t\t\t\t\tinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Id\t\t\t\t\tinner join mst_Producto p on pd.idProducto = p.Id\t\t\t\t\tinner join mst_Grupo g on p.IdGrupo = g.Id\t\t\t\t\twhere IdMesa > 0 and CAST(fecha_apertura as date) between @fecha_ini and @fecha_fin and v.Anulado = 0 and vd.Anulado = 0 and vd.Flag = 1 and p.idgrupo = @id_grupo\t\t\t\t\tgroup by pd.IdProducto, p.nombreProducto, g.Descripcion\t\t\t\t\torder by p.nombreProducto asc\t\t\tend\tend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarFamilia",
    "Content": "---------------------------------------------------------------------------------------------------------Procedimiento de Almacenado Eliminar CREATE procedure [dbo].[spEliminarFamilia]@id intasupdate mst_Familia set flag = 0, estado = 0where id=@id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetProductoPresentacionByIdProductoDetalle",
    "Content": "CREATE proc [dbo].[SpGetProductoPresentacionByIdProductoDetalle]@idProductoDetalle intasselectpp.id 'Id',idProductosDetalle 'IdProductoDetalle',pp.idUnidad 'IdUnidad',um.nombreUnidad 'Unidad',pp.precioUnitario 'Precio',pp.Principal 'IsPrincipal',pp.Codigo 'CodigoBarra',pp.PrincipalAlmacen 'IsPrincipalAlmacen',pp.VerEnVentasfrom mst_ProductoPresentacion ppinner join mst_UnidadMedida um on pp.idUnidad = um.Idwhere pp.idProductosDetalle = @idProductoDetalle and pp.estado = 1 and pp.flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetIdDetalleByIdPresentacion",
    "Content": "CREATE proc [dbo].[SpGetIdDetalleByIdPresentacion]@idProductoPresentacion intasselect top 1 idProductosDetalle as 'IdProductoDetalle' from mst_ProductoPresentacionwhere id = @idProductoPresentacion"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_insertar_venta_delivery",
    "Content": "CREATE proc [dbo].[sp_insertar_venta_delivery]@id int,@id_venta int,@id_contacto intasif @id = 0\tbegin\t\t\t\tdeclare @apertura int = (select IdApertura from mst_Venta where id = @id_venta)\t\tdeclare @idusuario int = (select IdUsuario from mst_Venta where id = @id_venta)\t\tdeclare @idcaja int = (select IdCaja from mst_Venta where id = @id_venta)\t\t\t\t \t\tUPDATE mst_Venta SET delivery = 1\t\twhere id = @id_venta \t\t\t\t--declare @countDelivery int = (select count(id) from mst_Venta where IdApertura = @apertura and IdUsuario = @idusuario and IdCaja = @idcaja and delivery = 1)\t\tdeclare @countDelivery int = dbo.F_SecuenciaDelivery()\t\tif @countDelivery = null or @countDelivery = 0\t\tBEGIN\t\t\tset @countDelivery = 1\t\tEND\t\t\t\tif @id_contacto = 0 begin set @id_contacto = 1 end\t\t\t\t\t\tinsert into venta_delivery (id_venta, id_contacto, estado, flag, num_correlative)\t\tvalues(@id_venta, @id_contacto, 1,1, @countDelivery)\t\t\t\tdeclare @id_despues int = SCOPE_IDENTITY();\t\tselect @id_despues as 'id'\tendelse\tbegin\t \tupdate venta_delivery set id_venta = @id_venta, id_contacto = @id_contacto\twhere id = @id\tend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpUpdateConfiguracionGeneral",
    "Content": "CREATE proc [dbo].[SpUpdateConfiguracionGeneral]@ruc varchar(11),@razonSocial varchar(max),@nombreComercial varchar(max),@direccion varchar(max),@telefono varchar(11),@celular varchar(11),@web varchar(100),@correo varchar(100),@marca bit,@grupoLineaFamilia bit,@talla bit,@color bit,@medida bit,@descripcion bit,@fechaVence bit,@proveedor bit,@visa bit,@mastercard bit,@logo image,@impresora1 varchar(100),@impresora2 varchar(100),@ubigeo varchar(11),@ciudad varchar(100),@distrito varchar(100),@igv money,@certificadoCpe varchar(100),@contraseniaCertificadoCpe varchar(100),@usuarioSecundarioSol varchar(100),@contraseniaUsuarioSecundarioSol varchar(100),@validarVendedor bit,@modoRapido bit,@codigoBarra VARCHAR(250),@numeroCopias int,@numeroMesas int,@produccion bit,@passCorreo varchar(100),@metodoBusqueda char(2),@urlOse varchar(100),@tipoOse int,@urlOseBeta varchar(100),@urlOseOtros varchar(100),@urlOseOtrosBeta varchar(100),@urlOseAux varchar(100),@urlOseAuxBeta varchar(100),@tipoMoneda varchar(5),@puerto int,@ssl bit,@servidorEmail varchar(100),@nube bit,@id int,@horaEnvio int,@pagoEfectivo varchar(5),@idApiSunat varchar(100),@claveApiSunat varchar(100),@rutaCopiaBd varchar(100),@codigoAnexo varchar(10),@activarLote bit,@entradaDirectaProducto bit,@documentoVentaDefecto char(2),@activarBalanza bit,@alertaSunat bit,@sorteoEstado bit,@sorteoMonto float,@isGravada bit,@diasEnvio intasupdate tabla_configuracion_generalsetruc=@ruc,razonsocial = @razonSocial,nombrecomercial = @nombreComercial,direccion = @direccion,telefono = @telefono,celular = @celular,web = @web,correo = @correo,marca = @marca,grupo_linea_familia = @grupoLineaFamilia,talla = @talla,color = @color,medida = @medida,descripcion = @descripcion,f_vence = @fechaVence,proveedor = @proveedor,visa = @visa,mastercard = @mastercard,Logo = @logo,impresora1 = @impresora1,impresora2 = @impresora2,ubigeo = @ubigeo,ciudad = @ciudad,distrito = @distrito,igv=@igv,Certificado_CPE = @certificadoCpe,ContraseniaCertificadoCpe = @contraseniaCertificadoCpe,UsuarioSecundarioSol = @usuarioSecundarioSol,ContraseniaUsuarioSecundarioSol = @contraseniaUsuarioSecundarioSol,Validar_Vendedor = @validarVendedor,ModoRapido = @modoRapido,CodBarra = @codigoBarra,NumCopias = @numeroCopias,NumMesas = @numeroMesas,Produccion = @produccion,PassCorreo = @passCorreo,Met_Busqueda = @metodoBusqueda,UrlOse = @urlOse,TipoOse=@tipoOse,UrlOseBeta = @urlOseBeta,UrlOseOtros = @urlOseOtros,UrlOseOtrosBeta=@urlOseOtrosBeta,UrlOseAux=@urlOseAux,UrlOseAuxBeta=@urlOseAuxBeta,TipoMoneda=@tipoMoneda,Puerto=@puerto,Ssl = @ssl,Servidor_Email=@servidorEmail,Nube=@nube, hora_envio=@horaEnvio,pago_defecto=@pagoEfectivo,id_api_sunat=@idApiSunat,clave_api_sunat=@claveApiSunat,ruta_copia_bd=@rutaCopiaBd,CodigoAnexo=@codigoAnexo,ActivarLote=@activarLote,EntradaDirectaProducto=@entradaDirectaProducto,DocumentoVentaDefecto=@documentoVentaDefecto,ActivarBalanza = @activarBalanza,AlertaSunat = @alertaSunat,SorteoEstado = @sorteoEstado,SorteoMonto = @sorteoMonto,IsGravada = @isGravada,DiasEnvio = @diasEnviowhere id =@idselect @id as 'id'"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarGrupo",
    "Content": "------------------------------------------------ELIMINAR GRUPOCREATE procedure [dbo].[spEliminarGrupo]@idGrupo intasupdate mst_Gruposet flag = 0 , estado = 0where id=@idGrupo"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarServidor",
    "Content": "CREATE proc [dbo].[spEliminarServidor]@id intasdelete from MST_SERVIDORESwhere id= @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_modificar_pago_venta",
    "Content": "CREATE PROC [dbo].[sp_modificar_pago_venta]@tipo_pago int,@idventa intasif(@tipo_pago = 1)begin\tupdate mst_Venta set IdFormaPago = @tipo_pago, ImportePagado = TotalVenta\tWHERE id = @idventaendelsebeginupdate mst_Venta set IdFormaPago = @tipo_pago, ImportePagado = 0WHERE id = @idventaend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMopstrarDatosPago",
    "Content": "CREATE proc [dbo].[spMopstrarDatosPago]@idpedido int,@idpiso int,@bit bitasif(@bit = 0)select IdPedido,IdMesa, RazonSocial,DniRuc,d.Descripcion,Total,BolFac,Descuento, u.usuario,p.IdPisofrom tabla_Pre_Venta pinner join mst_documentos d on p.BolFac = d.Codigoinner join mst_Usuarios u on p.IdUsuario = u.Idwhere Pagado = 0 and Eliminado = 0 and IdPedido = @idpedidoelsedeclare @adicional moneyset @adicional = (select SUM(cast(Adicional4 as money)) from tabla_Pre_Venta_Detalle where Pagado = 0 and Eliminado = 0 and IdMesa = @idpedido and IdPiso = @idpiso)select IdPedido,IdMesa, RazonSocial,DniRuc,d.Descripcion,(Total + @adicional) Total,BolFac,Descuento, u.usuario,p.IdPisofrom tabla_Pre_Venta pinner join mst_documentos d on p.BolFac = d.Codigoinner join mst_Usuarios u on p.IdUsuario = u.Idwhere Pagado = 0 and Eliminado = 0 and IdMesa = @idpedido and IdPiso = @idpiso"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_mostrar_sumatoria_mesa_delivery_llevar",
    "Content": "CREATE proc [dbo].[sp_mostrar_sumatoria_mesa_delivery_llevar]@fecha_ini DATE,@fecha_fin DATEasSELECT SUM(Amorrrr.Mesa) AS 'MesaT',SUM(Amorrrr.Delivery) AS 'DeliveryT',SUM(Amorrrr.Llevar) AS 'LlevarT' FROM (SELECT SUM(TotalVenta) as 'Mesa',0.00 as 'Delivery',0.00 as 'Llevar' FROM mst_VentaWHERE CAST(FechaEmision as date) BETWEEN @fecha_ini AND @fecha_finAND IdMesa > 0 and Anulado = 0 AND delivery = 0 and llevar = 0UNION ALLSELECT 0.00 as 'Mesa',SUM(TotalVenta) as 'Delivery',0.00 as 'Llevar' FROM mst_VentaWHERE CAST(FechaEmision as date) BETWEEN @fecha_ini AND @fecha_finAND IdMesa > 0 and Anulado = 0 AND delivery = 1UNION ALLSELECT 0.00 as 'Mesa',0.00 as 'Delivery',SUM(TotalVenta) as 'Llevar' FROM mst_VentaWHERE CAST(FechaEmision as date) BETWEEN @fecha_ini AND @fecha_finAND IdMesa > 0 and Anulado = 0 AND llevar = 1) Amorrrr"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarLinea",
    "Content": "------------------------------------------------ELIMINAR LINEACREATE procedure [dbo].[spEliminarLinea]@idLinea intasupdate mst_Lineaset flag = 0 , estado = 0where id=@idLinea"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetInventario",
    "Content": "CREATE proc [dbo].[SpGetInventario]@idAlmacen intasselecti.Id,i.Id_Almacen 'IdAlmacen',a.Nombre 'Almacen',i.Observacion,i.TipoInventario,i.FechaCrea 'Fecha'from mst_Inventario iinner join mst_Almacen a on i.Id_Almacen = a.Idwhere i.Flag = 1and Id_Almacen = case when @idAlmacen > 0 then @idAlmacen else Id_Almacen end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_mostrar_tipos_documentos_cliente",
    "Content": "CREATE proc [dbo].[sp_mostrar_tipos_documentos_cliente]@codigo intasif @codigo = 0\tbegin\t\tselect * from mst_TipoDocumento\t\twhere codigoSunat = 0\tendelse\tbegin\t\tselect * from mst_TipoDocumento\t\twhere codigoSunat = @codigo\tend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddControlTransportistaDetalle",
    "Content": "CREATE proc [dbo].[SpAddControlTransportistaDetalle]@id int,@idControlTransportista int,@idVenta int,@serie varchar(10),@numero int,@tipoDocumento varchar(2),@razonSocial VARCHAR(250),@fecha datetime,@monto float,@importePagado float,@idFormaPago intasif @id = 0begin\tinsert into ControlTransportistasDetalle(IdControlTransportista, IdVenta, Serie, Numero, TipoDocumento, RazonSocial, Fecha, Monto, ImportePagado, IdFormaPago)\tvalues(@idControlTransportista, @idVenta, @serie, @numero, @tipoDocumento, @razonSocial, @fecha, @monto, @importePagado, @idFormaPago)\tselect CAST(SCOPE_IDENTITY() as int) 'id'endelsebegin\tupdate ControlTransportistasDetalle set Serie = @serie, Numero = @numero, TipoDocumento=@tipoDocumento,\tRazonSocial = @razonSocial, Fecha = @fecha, Monto=  @monto, ImportePagado = @importePagado,\tIdFormaPago = @idFormaPago\twhere id = @id\tselect @id end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spStockActualizarSaldo",
    "Content": "CREATE proc [dbo].[spStockActualizarSaldo]@idalmacen intasDECLARE @IdProducto INT,@Entrada DECIMAL(18,2) = 0,@Salida DECIMAL(18,2) = 0,@Saldo DECIMAL(18,2) = 0DECLARE CStockAcumulado CURSORFOR(SELECT TEMP.Id_Almacen,TEMP.Id,(SUM(TEMP.Inicial)+SUM(TEMP.Compras)) as Entrada,SUM(TEMP.Ventas) as Salida, (SUM(TEMP.Inicial)+SUM(TEMP.Compras)-SUM(TEMP.Ventas)) as SaldoFROM(-----------INVENTARIO---------SELECT a.Id_Almacen,c.Id,b.IdUnidad,d.nombreUnidad,(b.Cantidad*d.factor) as Inicial,0 as Compras,0 as VentasFROM mst_Inventario aINNER JOIN mst_Inventario_Detalle b ON a.Id = b.Id_InventarioINNER JOIN mst_productodetalle c ON c.Id = b.Id_ProductoINNER JOIN mst_UnidadMedida d ON d.Id = b.IdUnidad where a.Estado=0 and a.Flag=1 and b.Estado=1 and b.Flag=1-----------INVENTARIO---------UNION ALL-----------COMPRAS---------SELECT a.IdAlmacen,c.Id,b.IdUnidad,d.nombreUnidad,0 as Inicial,(b.Cantidad*d.factor) as Compras, 0 as VentasFROM mst_Compras aINNER JOIN mst_ComprasDetalles b ON a.Id = b.IdCompraINNER JOIN mst_productodetalle c ON c.Id = b.IdProductoINNER JOIN mst_UnidadMedida d ON d.Id = b.IdUnidad where b.estado = 1 and b.Flag = 1 and a.Estado = 1 and a.flag=1 and a.isClosed = 1-----------COMPRAS---------UNION ALLSELECT a.IdAlmacen,c.Id,b.IdUnidad,d.nombreUnidad,0 as Inicial,0 as Compras,(b.Cantidad*d.factor) as VentasFROM mst_Venta aINNER JOIN mst_Venta_det b ON a.Id = b.IdVentaINNER JOIN mst_ProductoPresentacion pp on b.IdProducto = pp.IdINNER JOIN mst_productodetalle c ON c.Id = pp.idProductosDetalleINNER JOIN mst_UnidadMedida d ON d.Id = b.IdUnidad where a.Anulado=0 and b.Flag=1 AND a.IdDocumento <>'07'UNION ALLSELECT a.IdAlmacen,c.Id,b.IdUnidad,d.nombreUnidad,0 as Inicial,CASE a.TipoNotCredWHEN '01' THEN ISNULL((b.Cantidad*d.factor),0.00)WHEN '02' THEN ISNULL((b.Cantidad*d.factor),0.00)WHEN '03' THEN ISNULL((b.Cantidad*d.factor),0.00)WHEN '06' THEN ISNULL((b.Cantidad*d.factor),0.00)WHEN '07' THEN ISNULL((b.Cantidad*d.factor),0.00)WHEN '08' THEN ISNULL((b.Cantidad*d.factor),0.00)ELSE 0.00 END AS Compras,0 as VentasFROM mst_Venta aINNER JOIN mst_Venta_det b ON a.Id = b.IdVentaINNER JOIN mst_ProductoPresentacion pp on b.IdProducto = pp.IdINNER JOIN mst_productodetalle c ON c.Id = pp.idProductosDetalleINNER JOIN mst_UnidadMedida d ON d.Id = b.IdUnidad where a.Anulado=0 and b.Flag=1 AND a.IdDocumento = '07' AND (a.TipoNotCred<>'04' OR a.TipoNotCred<>'05' OR a.TipoNotCred<>'09' OR a.TipoNotCred<>'10')-----------TRASLADOS---------UNION ALLSELECT t.idAlmacenEntrada, td.idProducto , td.idUnidad, td.nombreUnidad,0 as Inicial, (td.cantidad * td.factor) as 'Compras', 0 as 'Ventas' FROM mst_almacen_traslado tINNER JOIN mst_almacen_traslado_detalle td on t.id = td.almacen_traslado_idWHERE t.flag = 1 and td.flag = 1 and t.idAlmacenEntrada = @idalmacen-----------UNION ALLSELECT t.idAlmacenSalida, td.idProducto , td.idUnidad, td.nombreUnidad,0 as Inicial, 0 as 'Compras', (td.cantidad * td.factor) as 'Ventas' FROM mst_almacen_traslado tINNER JOIN mst_almacen_traslado_detalle td on t.id = td.almacen_traslado_idWHERE t.flag = 1 and td.flag = 1 and t.idAlmacenSalida = @idalmacen-----------TRASLADOS--------------------MOVIMIENTOS ENTRADA---------UNION ALLSELECT m.idAlmacen, md.idProducto, md.idUnidad, md.nombreUnidad,0 as Inicial, (md.cantidad * md.factor) as 'Compras', 0 as 'Ventas' from mst_almacen_movimiento m INNER JOIN mst_almacen_movimiento_detalle md on m.id = md.almacen_movimiento_idWHERE m.flag = 1 and md.flag = 1 and entrada = 1-----------MOVIMIENTOS ENTRADA--------------------MOVIMIENTOS SALIDA---------UNION ALLSELECT m.idAlmacen, md.idProducto, md.idUnidad, md.nombreUnidad,0 as Inicial, 0 as 'Compras', (md.cantidad * md.factor) as 'Ventas' from mst_almacen_movimiento m INNER JOIN mst_almacen_movimiento_detalle md on m.id = md.almacen_movimiento_idWHERE m.flag = 1 and md.flag = 1 and salida = 1-----------MOVIMIENTOS SALIDA--------------------MOVIMIENTOS AJUSTES---------UNION ALLSELECT m.idAlmacen, md.idProducto, md.idUnidad, md.nombreUnidad,0 as Inicial, (md.cantidad * md.factor) as 'Compras', 0 as 'Ventas' from mst_almacen_movimiento m INNER JOIN mst_almacen_movimiento_detalle md on m.id = md.almacen_movimiento_idWHERE m.flag = 1 and md.flag = 1 and m.ajuste = 1-----------MOVIMIENTOS AJUSTES---------) AS TEMP GROUP BY TEMP.Id_Almacen,TEMP.IdHAVING TEMP.Id_Almacen=@idalmacen) ORDER BY TEMP.Id DESCFOR UPDATEOPEN CStockAcumuladoFETCH CStockAcumulado INTO @IdAlmacen,@IdProducto,@Entrada,@Salida,@Saldo declare @exist int = 0WHILE (@@FETCH_STATUS = 0)BEGIN\t\tset @exist = isnull((select count(Id) from Stocks_Acumulados where IdProducto = @IdProducto and IdAlmacen = @idalmacen), 0)\tPRINT '-------------'\tPRINT @exist\tPRINT @IdProducto\tPRINT @idalmacen\tPRINT '-------------'\tset NOCOUNT ON\t\tif @exist = 0\tbegin\t\tinsert into Stocks_Acumulados (IdAlmacen, IdProducto, Entradas, Salidas, Saldo, Fecha_Crea)\t\tvalues(@idalmacen, @IdProducto, @Entrada, @Salida, @Saldo, GETDATE())\tend\telse\t\tbegin\t\tUPDATE Stocks_Acumulados SET Entradas=@Entrada,Salidas=@Salida,Saldo=@Saldo\t\tWHERE IdProducto = @IdProducto and IdAlmacen = @IdAlmacen\t  \tend -- LECTURA DE LA SIGUIENTE FILA DEL CURSOR   FETCH CStockAcumulado INTO @IdAlmacen,@IdProducto,@Entrada,@Salida,@SaldoEND-- CIERRE DEL CURSORCLOSE CStockAcumulado-- LIBERAR LOS RECURSOSDEALLOCATE CStockAcumulado--select * from Stocks_Acumuladoswhere IdAlmacen = @idalmacen"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarMarca",
    "Content": "---------------------------------------------------------------------------------Eliminar----------------------------CREATE procedure [dbo].[spEliminarMarca]@idMarca intasupdate mst_Marca setflag = 0, estado = 0where id=@idMarca"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetInventarioById",
    "Content": "CREATE proc [dbo].[SpGetInventarioById]@id intasselecti.Id,i.Id_Almacen 'IdAlmacen',a.Nombre 'Almacen',i.Observacion,i.TipoInventario,i.FechaCrea 'Fecha'from mst_Inventario iinner join mst_Almacen a on i.Id_Almacen = a.Idwhere i.id=@id and i.Flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_mostrar_venta_delivery",
    "Content": "CREATE proc [dbo].[sp_mostrar_venta_delivery]@idventa intasif @idventa = 0\tbegin\t\tselect * from venta_delivery\t\twhere estado = 1 and flag = 1\tendelse\tbegin\tselect * from venta_delivery\twhere estado = 1 and flag = 1 and id_venta = @idventa\tend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetListUsuariosAperturasDelDia",
    "Content": "CREATE proc [dbo].[spGetListUsuariosAperturasDelDia]asSELECTupper(u.usuario) as Usuario,Numero,IdUsuario,IdCajaFROM mst_Apertura ainner join mst_Usuarios u on a.IdUsuario = u.Idinner join mst_TipoUsuario tu on u.idtipoUsuario = tu.Idwhere CAST(Fecha as date) <= CAST(GETDATE() as date)and Abierto_Cerrado = 0 and (LOWER(tu.descripcion) = 'cajero' or LOWER(tu.descripcion) = 'caja')and u.verVentas = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarUnidadesporCodBarra",
    "Content": "CREATE proc [dbo].[spBuscarUnidadesporCodBarra]@codbarra varchar(50),@opcion intas-- or cast(pd.Id as varchar) = @codbarra) if(@opcion= 1)beginselectum.id as Id,um.nombreUnidad as Descripcion,pp.Principal as Principal,pp.Id as 'id_presentacion',pd.id as 'IdProductoDetalle',pp.Codigo 'CodigoBarra',pd.codigoBarra 'CodigoBarraDetalle'from mst_productodetalle pd join mst_ProductoPresentacion pp on pd.Id = pp.idProductosDetalle inner join mst_UnidadMedida um on pp.idUnidad = um.Id where  ((pd.codigoBarra = @codbarra or pp.Codigo = @codbarra) and pd.estado = 1 and pd.flag = 1 and pp.estado = 1 and pp.flag = 1)endelse if(@opcion=2)beginselectum.id as Id,um.nombreUnidad as Descripcion,pp.Principal as Principal,pp.Id as 'id_presentacion',pd.id as 'IdProductoDetalle',pp.Codigo 'CodigoBarra',pd.codigoBarra 'CodigoBarraDetalle'from mst_productodetalle pd join mst_ProductoPresentacion pp on pd.Id = pp.idProductosDetalle inner join mst_UnidadMedida um on pp.idUnidad = um.Id where  (cast(pd.Id as varchar) = @codbarra  and pd.estado = 1 and pd.flag = 1 and pp.estado = 1 and pp.flag = 1)end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarStock",
    "Content": "CREATE proc [dbo].[spMostrarStock]@idproducto int,@bit bitasif(@bit = 0)beginselect a.Nombre,saldo, s.IdProducto, pd.checkStock from Stocks_Acumulados sinner join mst_Almacen a on s.IdAlmacen = a.Idinner join mst_ProductoDetalle pd on s.IdProducto = pd.Idwhere s.IdProducto = @idproductoendelsebegindeclare @id int = (select idProductosDetalle from mst_Productopresentacion where Id = @idproducto);select a.Nombre,saldo, s.IdProducto, pd.checkStock from Stocks_Acumulados sinner join mst_Almacen a on s.IdAlmacen = a.Idinner join mst_ProductoDetalle pd on s.IdProducto = pd.Idwhere s.IdProducto = @idend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarPreDetalle",
    "Content": "CREATE proc [dbo].[spEliminarPreDetalle]@id int,@pm bit,@esconvenio bitasdeclare @subtotal moneydeclare @idpedido intdeclare @idmesa intif(@esconvenio = 0)\tbegin\t\tset @subtotal =  (select Subtotal from tabla_Pre_Venta_Detalle where Id = @id)\t\tset @idpedido = (select IdPedido from tabla_Pre_Venta_Detalle where id = @id)\t\tset @idmesa= (select idmesa from tabla_Pre_Venta_Detalle where id = @id)\t\tif(@pm = 0)\t\tbegin\t\tupdate tabla_Pre_Venta set Total = (Total - @subtotal)\t\twhere IdPedido = @idpedido\t\tend\t\telse\t\tbegin\t\tupdate tabla_Pre_Venta set Total = (Total - @subtotal)\t\twhere IdMesa = @idmesa\t\tend\t\tdelete from tabla_Pre_Venta_Detalle where Id = @id\tendelse\tbegin\tset @subtotal =  (select Subtotal from tabla_Pre_Venta_Detalle_Convenio where Id = @id)\tset @idpedido = (select IdPedido from tabla_Pre_Venta_Detalle_Convenio where id = @id)\tset @idmesa = (select idmesa from tabla_Pre_Venta_Detalle_Convenio where id = @id)\tif(@pm = 0)\tbegin\tupdate tabla_Pre_Venta_Convenio set Total = (Total - @subtotal)\twhere Id = @idpedido\tend\t \tdelete from tabla_Pre_Venta_Detalle_Convenio where Id = @id\t--update tabla_Pre_Venta_Detalle set Eliminado = 1\t--where Id = @id\tend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetInventarioDetalleById",
    "Content": "CREATE proc [dbo].[SpGetInventarioDetalleById]@id intasselect * from InventarioDetallewhere IdInventario = @id and Estado = 1and Flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_buscar_almacen_traslado",
    "Content": "----------------------------------------------CREATE proc [dbo].[sp_buscar_almacen_traslado]@buscar varchar(max)asselect T.id, a.Nombre  as 'almacen_salida', a.Nombre as 'almacen_entrada', t.fecha , t.descripcion, t.cerrado, t.estado, t.idAlmacenSalida, t.idAlmacenEntrada from mst_almacen_traslado tinner join mst_Almacen a on t.idAlmacenSalida = a.Id and t.idAlmacenEntrada = a.Idwhere t.flag = 1 and a.Nombre like '%'+@buscar+'%'"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spStockAnular",
    "Content": "CREATE proc [dbo].[spStockAnular]@idcompraventa int,@bit intasdeclare @idprod intdeclare @cantidad moneydeclare @factor int declare @valor moneydeclare @idalmacen intdeclare @salir bit = 0if(@bit=1)begindeclare Temp cursorFOR(select pp.idProductosDetalle,cantidad,um.factor,v.IdAlmacen from mst_Venta_det vdinner join mst_unidadmedida um on vd.idunidad= um.idinner join mst_Venta v on vd.IdVenta = v.Idinner join mst_ProductoPresentacion pp on vd.IdProducto = pp.Idwhere idventa = @idcompraventa) open Tempfetch Temp into @idprod,@cantidad,@factor,@idalmacen;way:\t\tset @valor = @cantidad  * CAST(@factor as money);\tupdate Stocks_Acumulados set \tentradas = Entradas - @valor ,\tsaldo = entradas - (Salidas - @valor)\twhere IdProducto = @idprod and idalmacen = @idalmacen;\tfetch Temp into @idprod,@cantidad,@factor,@idalmacen;\tif(@@FETCH_STATUS = 0) set @salir = 0\telse set @salir = 1if(@salir = 0)\tgoto way;\t\tclose Temp;\tDEALLOCATE Temp;endelse if(@bit = 2)begindeclare Temp cursorFOR(select pp.idProductosDetalle,cantidad,um.factor,v.IdAlmacen from mst_ComprasDetalles vdinner join mst_unidadmedida um on vd.idunidad= um.idinner join mst_Compras v on vd.IdCompra = v.Idinner join mst_ProductoPresentacion pp on vd.IdProducto = pp.Idwhere IdCompra = @idcompraventa) open Tempfetch Temp into @idprod,@cantidad,@factor,@idalmacen;way2:\t\tset @valor = @cantidad  * CAST(@factor as money);\tupdate Stocks_Acumulados set \tEntradas = Entradas - @valor,\tSaldo = (entradas - @valor) - Salidas\twhere IdProducto = @idprod and idalmacen = @idalmacen;\tfetch Temp into @idprod,@cantidad,@factor,@idalmacen;\tif(@@FETCH_STATUS = 0) set @salir = 0\telse set @salir = 1if(@salir = 0)\tgoto way2;\t\tclose Temp;\tDEALLOCATE Temp;end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpValidarNumeroDocumentoCliente",
    "Content": "CREATE proc [dbo].[SpValidarNumeroDocumentoCliente]@numeroDocumento varchar(20)asselect * from mst_Clientewhere numeroDocumento = @numeroDocumentoand estado = 1 and flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetControlTransportista",
    "Content": "CREATE proc [dbo].[spGetControlTransportista]@fecha dateasselectct.Id,ct.TransportistaId,t.DniRuc 'Dni',t.Nombre,ct.HoraSalida,ct.HoraLlegada,ct.Observacion,ct.IsClosed,ct.Totalfrom ControlTransportistas ct inner join mst_Transportistas t on ct.TransportistaId = t.Idwhere CAST(HoraSalida as date) = cast(@fecha as date)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarProducto",
    "Content": "------------------------------------------------eliminar------------------CREATE procedure [dbo].[spEliminarProducto]@id intasupdate mst_Productoset flag = 0,  estado = 0where id = @idupdate mst_ProductoDetalleset flag = 0, estado = 0 where idProducto = @id--from mst_ProductoDetalle ppd--inner join (select pd.id from mst_ProductoDetalle pd where pd.idProducto = @id) as tablaAux on--tablaAux.id = ppd.idupdate mst_ProductoPresentacionset flag = 0, estado = 0 from mst_ProductoPresentacion pp inner join (select id from mst_ProductoDetalle  where idProducto = @id) as tablaAux ontablaAux.id = pp.idProductosDetalle"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetInventarioDetalleByIdInvenario",
    "Content": "CREATE proc [dbo].[SpGetInventarioDetalleByIdInvenario]@idInventario intasselect * from InventarioDetallewhere IdInventario = @idInventario and Estado = 1and Flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_serarch_client_addres_by_id",
    "Content": "CREATE proc [dbo].[sp_serarch_client_addres_by_id]@idcliente intasselect * from mst_Cliente_Direccionwhere IdCliente = @idcliente and Principal = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetSeguimientoByIdVenta",
    "Content": "CREATE proc [dbo].[spGetSeguimientoByIdVenta]@idVenta intasselect ISNULL(s.Id, 0) as idfrom tbl_Seguimiento sinner join mst_Venta v on s.IdVenta = v.Idwhere IdVenta = @idVentaand Eliminado = 0"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_delete_almacen_traslado",
    "Content": "------------------------------------------CREATE proc [dbo].[sp_delete_almacen_traslado]@id intasupdate mst_almacen_traslado set estado = 0, flag = 0where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddPedidos",
    "Content": "CREATE proc [dbo].[SpAddPedidos]@id int,@idPedido int,@idMesa int,@idTipoDocCliente varchar(2),@idCliente int,@numDocCliente varchar(20),@razonSocial varchar(200),@direccion varchar(200),@email varchar(50),@pagado bit,@eliminado bit,@idUsuario int,@idDocVenta int,@subTotal float,@igv float,@icbper float,@descuento float,@total float,@idAlmacen int,@fecha datetimeasif @id = 0begin\tinsert into Pedidos (IdPedido, IdMesa, IdTipoDocCliente, IdCliente, NumDocCliente, RazonSocial, Direccion, Email, Pagado, Eliminado, IdUsuario, IdDocVenta, SubTotal, Igv, Icbper, Descuento, Total, IdAlmacen, Fecha)\tvalues(@idPedido, @idMesa, @idTipoDocCliente, @idCliente, @numDocCliente, @razonSocial, @direccion, @email, @pagado, @eliminado, @idUsuario, @idDocVenta, @subTotal, @igv, @icbper, @descuento, @total, @idAlmacen, @fecha)\tselect CAST(SCOPE_IDENTITY() as int)endelsebegin\tupdate Pedidos set IdMesa = @idMesa, IdTipoDocCliente=@idTipoDocCliente, NumDocCliente=@numDocCliente,RazonSocial=@razonSocial,\tDireccion=@direccion,Email=@email,Pagado=@pagado,Eliminado=@eliminado,IdUsuario=@idUsuario,IdDocVenta=@idDocVenta,\tSubTotal=@subTotal,Igv=@igv,Icbper=@icbper,Descuento=@descuento,Total=@total,IdAlmacen=@idAlmacen,Fecha=@fecha\twhere id = @id\tselect @idend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarProductoDetalle",
    "Content": "--eliminarCREATE proc [dbo].[spEliminarProductoDetalle]@id intasupdate mst_ProductoDetalle setestado = 0, flag = 0where Id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_insertar_almacen_traslado",
    "Content": "CREATE proc [dbo].[sp_insertar_almacen_traslado]@id int,@idalmacensalida int,@idalmacenentrada int,@fecha date,@descripcion varchar(max),@cerrado bit,@estado bit,@bit bitasif @bit = 0\tbegin\tinsert into mst_almacen_traslado (idAlmacenSalida, idAlmacenEntrada, fecha, descripcion, cerrado)\tvalues(@idalmacensalida, @idalmacenentrada, @fecha,@descripcion,@cerrado)\tselect SCOPE_IDENTITY();\tendelse\tbegin\tupdate mst_almacen_traslado set idAlmacenSalida = @idalmacensalida, idAlmacenEntrada = @idalmacenentrada, fecha = @fecha, descripcion = @descripcion, cerrado = @cerrado\twhere id = @id\tend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAnularPedido",
    "Content": "CREATE proc [dbo].[SpAnularPedido]@idPedido intasupdate Pedidos set Eliminado = 1where Id = @idPedidoupdate PedidosDetalles set Eliminado = 1where IdPedido = @idPedido"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spAperturar",
    "Content": "CREATE proc [dbo].[spAperturar]@idusuario int,@numero int,@fecha datetime,@idcaja int,@caja_chica DECIMAL(18,3)asinsert into mst_apertura(idusuario, numero,fecha,Abierto_Cerrado,idcaja, caja_chica)values(@idusuario,@numero,@fecha,0,@idcaja, @caja_chica)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarProductoPresentacion",
    "Content": "-----exec spModificarProductoPresentacion 2,'dede',22,'maick.davila',1,1--exec spModificarProductoPresentacion 1,'cuarto',12,'maick.davila',0,1--exec spBuscarProductoPresentacion 1--eliminarCREATE proc [dbo].[spEliminarProductoPresentacion]@id intasupdate mst_ProductoPresentacion setestado = 0,flag = 0where Id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetMarcas",
    "Content": "CREATE proc [dbo].[SpGetMarcas]@text VARCHAR(50) = ''asselectId,nombreMarca as 'Descripcion'from mst_Marcawhere Estado = 1 and Flag =1 and nombreMarca like '%'+@text+'%'"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarVentas",
    "Content": "CREATE proc [dbo].[spBuscarVentas]@fechainicio date,@fechafin date,@tipodoc char(2),@serienum varchar(100),@buscar varchar(100),@idusuario int,@deudas bit,@VerSinNotas bit=0asif(@idusuario = 0)\tbegin\t\t\tif(@deudas = 0)\t\t\tbegin\t\t\t\t\t\tselect * from\t\t\t\t(\t\t\t\tselect\t\t\t\t v.Id,\t\t\t\tcase v.IdDocumento\t\t\t\twhen '03' then 'BOLETA'\t\t\t\twhen '01' then 'FACTURA'\t\t\t\twhen '07' then 'NOTA DE CREDITO'\t\t\t\twhen '08' then 'NOTA DE DÉBITO'\t\t\t\twhen '99' then 'NOTA DE VENTA'\t\t\t\tEND Documento,\t\t\t\tv.SerieDoc Serie,\t\t\t\tv.NumeroDoc N,\t\t\t\tv.RazonSocial RazonSocialCliente,\t\t\t\tV.SubTotal,\t\t\t\tV.Igv,\t\t\t\tOtro_Imp 'ICBPER',\t\t\t\tv.TotalVenta,\t\t\t\tv.FechaEmision FechaEmision,\t\t\t\tu.usuario Atendidopor,\t\t\t\tv.Anulado Estado,\t\t\t\tISNULL(cpe.doc_firma, 0) Firma,\t\t\t\tisnull(cpe.doc_cdr ,0)  Cdr,\t\t\t\tv.IdGuia Guia,\t\t\t\tv.TipoMoneda,\t\t\t\tiif(TotalVenta>ImportePagado,CAST(0 AS BIT),CAST(1 AS BIT)) as 'EP',\t\t\t\t(select count(ss.id) from tbl_Seguimiento ss where (ss.IdVenta = v.Id and ss.validado = 0 and V.ImportePagado < v.TotalVenta) and v.IdFormaPago = 2) as 'Pintar',\t\t\t\tcast(iif(v.IdDocumento='99',0,1) as bit) as VerNotasVentas\t\t\t\tfrom mst_Venta v\t\t\t\tinner join mst_documentos d on v.IdDocumento = d.Codigo\t\t\t\tinner join mst_Usuarios u on v.IdUsuarioPreventa = u.Id\t\t\t\tleft join tbl_info_cpe cpe on v.Id = cpe.id_cab_cpe\t\t\t\t\t\t\twhere\t\t\t\tcast(V.FechaEmision as date) BETWEEN @fechainicio AND @fechafin\t\t\t\t) as temp\t\t\t\twhere \t\t\t\t(temp.RazonSocialCliente LIKE '%' + @buscar + '%' OR  \t\t\t\ttemp.Serie \t\t\t\t+ '-' + cast(temp.[N] as varchar) \t\t\t\tlike '%' +  @buscar + '%') and temp.VerNotasVentas = CASE @VerSinNotas WHEN 0 THEN temp.VerNotasVentas ELSE 1 END\t\t\t\t\t\t\t\torder by temp.Id desc\t\tend\t\telse\t\t\tbegin\t\t\t\t\t\t\t\tselect * from\t\t\t\t(\t\t\t\tselect\t\t\t\t v.Id,\t\t\t\tcase v.IdDocumento\t\t\t\twhen '03' then 'BOLETA'\t\t\t\twhen '01' then 'FACTURA'\t\t\t\twhen '07' then 'NOTA DE CREDITO'\t\t\t\twhen '08' then 'NOTA DE DÉBITO'\t\t\t\twhen '99' then 'NOTA DE VENTA'\t\t\t\tEND Documento,\t\t\t\tv.SerieDoc Serie,\t\t\t\tv.NumeroDoc N,\t\t\t\tv.RazonSocial RazonSocialCliente,\t\t\t\tV.SubTotal,\t\t\t\tV.Igv,\t\t\t\tOtro_Imp 'ICBPER',\t\t\t\tv.TotalVenta,\t\t\t\tv.FechaEmision FechaEmision,\t\t\t\tu.usuario Atendidopor,\t\t\t\tv.Anulado Estado,\t\t\t\tISNULL(cpe.doc_firma, 0) Firma,\t\t\t\tisnull(cpe.doc_cdr ,0)  Cdr,\t\t\t\tv.IdGuia Guia,\t\t\t\tv.TipoMoneda,\t\t\t\tiif(TotalVenta>ImportePagado,CAST(0 AS BIT),CAST(1 AS BIT)) as 'EP',\t\t\t\t(select count(ss.id) from tbl_Seguimiento ss where (ss.IdVenta = v.Id and ss.validado = 0 and V.ImportePagado < v.TotalVenta) and v.IdFormaPago = 2) as 'Pintar',\t\t\t\tcast(iif(v.IdDocumento='99',0,1) as bit) as VerNotasVentas\t\t\t\tfrom mst_Venta v\t\t\t\tinner join mst_documentos d on v.IdDocumento = d.Codigo\t\t\t\tinner join mst_Usuarios u on v.IdUsuarioPreventa = u.Id\t\t\t\tleft join tbl_info_cpe cpe on v.Id = cpe.id_cab_cpe\t\t\t\twhere\t\t\t\tcast(V.FechaEmision as date) BETWEEN @fechainicio AND @fechafin\t\t\t\t) as temp\t\t\t\twhere \t\t\t\t(temp.RazonSocialCliente LIKE '%' + @buscar + '%' OR  \t\t\t\ttemp.Serie \t\t\t\t+ '-' + cast(temp.[N] as varchar) \t\t\t\tlike '%' +  @buscar + '%') and temp.VerNotasVentas = CASE @VerSinNotas WHEN 0 THEN temp.VerNotasVentas ELSE 1 END\t\t\t\tand temp.EP = 0\t\t\t\torder by temp.Id desc\t\t\tend\tendelse\tbegin\t\tif(@deudas = 0)\t\t\tbegin\t\t\t\tselect * from\t\t\t\t(\t\t\t\tselect\t\t\t\t v.Id,\t\t\t\tcase v.IdDocumento\t\t\t\twhen '03' then 'BOLETA'\t\t\t\twhen '01' then 'FACTURA'\t\t\t\twhen '07' then 'NOTA DE CREDITO'\t\t\t\twhen '08' then 'NOTA DE DÉBITO'\t\t\t\twhen '99' then 'NOTA DE VENTA'\t\t\t\tEND Documento,\t\t\t\tv.SerieDoc Serie,\t\t\t\tv.NumeroDoc N,\t\t\t\tv.RazonSocial RazonSocialCliente,\t\t\t\tV.SubTotal,\t\t\t\tV.Igv,\t\t\t\tOtro_Imp 'ICBPER',\t\t\t\tv.TotalVenta,\t\t\t\tv.FechaEmision FechaEmision,\t\t\t\tu.usuario Atendidopor,\t\t\t\tv.Anulado Estado,\t\t\t\tISNULL(cpe.doc_firma, 0) Firma,\t\t\t\tisnull(cpe.doc_cdr ,0)  Cdr,\t\t\t\tv.IdGuia Guia,\t\t\t\tv.TipoMoneda,\t\t\t\tiif(TotalVenta>ImportePagado,CAST(0 AS BIT),CAST(1 AS BIT)) as 'EP',\t\t\t\t(select count(ss.id) from tbl_Seguimiento ss where (ss.IdVenta = v.Id and ss.validado = 0 and V.ImportePagado < v.TotalVenta) and v.IdFormaPago = 2) as 'Pintar',\t\t\t\tcast(iif(v.IdDocumento='99',0,1) as bit) as VerNotasVentas\t\t\t\tfrom mst_Venta v\t\t\t\tinner join mst_documentos d on v.IdDocumento = d.Codigo\t\t\t\tinner join mst_Usuarios u on v.IdUsuarioPreventa = u.Id\t\t\t\tleft join tbl_info_cpe cpe on v.Id = cpe.id_cab_cpe\t\t\t\twhere\t\t\t\tcast(V.FechaEmision as date) BETWEEN @fechainicio AND @fechafin and (v.idusuario = @idusuario or (V.IdUsuarioPreventa = @idusuario and u.is_cobrador = 1))\t\t\t\t) as temp\t\t\t\twhere \t\t\t\t(temp.RazonSocialCliente LIKE '%' + @buscar + '%' OR  \t\t\t\ttemp.Serie \t\t\t\t+ '-' + cast(temp.[N] as varchar) \t\t\t\tlike '%' +  @buscar + '%') and temp.VerNotasVentas = CASE @VerSinNotas WHEN 0 THEN temp.VerNotasVentas ELSE 1 END\t\t\t\torder by temp.Id desc\t\t\tend\t\telse\t\t\tbegin\t\t\t\tselect * from\t\t\t\t(\t\t\t\tselect\t\t\t\t v.Id,\t\t\t\tcase v.IdDocumento\t\t\t\twhen '03' then 'BOLETA'\t\t\t\twhen '01' then 'FACTURA'\t\t\t\twhen '07' then 'NOTA DE CREDITO'\t\t\t\twhen '08' then 'NOTA DE DÉBITO'\t\t\t\twhen '99' then 'NOTA DE VENTA'\t\t\t\tEND Documento,\t\t\t\tv.SerieDoc Serie,\t\t\t\tv.NumeroDoc N,\t\t\t\tv.RazonSocial RazonSocialCliente,\t\t\t\tV.SubTotal,\t\t\t\tV.Igv,\t\t\t\tOtro_Imp 'ICBPER',\t\t\t\tv.TotalVenta,\t\t\t\tv.FechaEmision FechaEmision,\t\t\t\tu.usuario Atendidopor,\t\t\t\tv.Anulado Estado,\t\t\t\tISNULL(cpe.doc_firma, 0) Firma,\t\t\t\tisnull(cpe.doc_cdr ,0)  Cdr,\t\t\t\tv.IdGuia Guia,\t\t\t\tv.TipoMoneda,\t\t\t\tiif(TotalVenta>ImportePagado,CAST(0 AS BIT),CAST(1 AS BIT)) as 'EP',\t\t\t\t(select count(ss.id) from tbl_Seguimiento ss where (ss.IdVenta = v.Id and ss.validado = 0 and V.ImportePagado < v.TotalVenta) and v.IdFormaPago = 2) as 'Pintar',\t\t\t\tcast(iif(v.IdDocumento='99',0,1) as bit) as VerNotasVentas\t\t\t\tfrom mst_Venta v\t\t\t\tinner join mst_documentos d on v.IdDocumento = d.Codigo\t\t\t\tinner join mst_Usuarios u on v.IdUsuarioPreventa = u.Id\t\t\t\tleft join tbl_info_cpe cpe on v.Id = cpe.id_cab_cpe\t\t\t\twhere\t\t\t\tcast(V.FechaEmision as date) BETWEEN @fechainicio AND @fechafin and (v.idusuario = @idusuario or (V.IdUsuarioPreventa = @idusuario and u.is_cobrador = 1))\t\t\t\t) as temp\t\t\t\twhere \t\t\t\t(temp.RazonSocialCliente LIKE '%' + @buscar + '%' OR  \t\t\t\ttemp.Serie \t\t\t\t+ '-' + cast(temp.[N] as varchar) \t\t\t\tlike '%' +  @buscar + '%') and temp.VerNotasVentas = CASE @VerSinNotas WHEN 0 THEN temp.VerNotasVentas ELSE 1 END\t\t\t\tand temp.EP = 0\t\t\t\torder by temp.Id desc\t\t\tend\tend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "CalcularNumeroApertura",
    "Content": "CREATE proc [dbo].[CalcularNumeroApertura]@idcaja int,@idusuario intasselect numero from mst_aperturawhere idcaja = @idcaja and IdUsuario = @idusuario"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarSerie",
    "Content": "---CREATE proc [dbo].[spEliminarSerie]@id intasupdate mst_Serie set Flag = 0 ,Estado = 0where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetMedidas",
    "Content": "CREATE proc [dbo].[SpGetMedidas]@text VARCHAR(50)asselectId,descripcionfrom mst_Medidaswhere Estado = 1 and Flag =1 and descripcion like '%'+@text+'%'"
  },
  {
    "Type": "SQL_SCALAR_FUNCTION",
    "Name": "F_SecuenciaLlevar",
    "Content": "CREATE function [dbo].[F_SecuenciaLlevar]()returns intasbegindeclare @fecha_actual date = GETDATE()return (select count(*) as 'Secuencia' from mst_Venta where llevar = 1 and cast(FechaEmision as date) = cast(@fecha_actual as DATE))+1;end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAñadirHashh",
    "Content": "CREATE proc [dbo].[SpAñadirHashh]@id int,@hash varchar(max)asupdate mst_Venta set Hassh = @hashwhere id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "VerSiestaAperturado",
    "Content": "CREATE proc [dbo].[VerSiestaAperturado]@idcaja int,@idusuario intasselect a.*, U.Id as 'user_id', u.usuario from mst_apertura ainner join mst_Usuarios u on a.IdUsuario = u.Idwhere idcaja = @idcaja  and Abierto_Cerrado = 0 and IdUsuario = @idusuario--and year(fecha) = year(GETDATE())"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_get_dedudas_almacenMovimiento_acumulado",
    "Content": "CREATE PROC [dbo].[sp_get_dedudas_almacenMovimiento_acumulado]asselectidusuario,usuario as usuario,fecha,sum(total) as total,sum(totalpagado) as totalpagado,sum(efectivo) as efectivo,sum(cheque) as cheque,sum(transferencia) as transferencia,sum(deposito) as depositofrom (selectidusuario,usuario,fecha,total,(isnull(efectivo, 0) + isnull(cheque, 0) + isnull(transferencia, 0) + isnull(deposito, 0)) as totalpagado,isnull(efectivo, 0) as efectivo,isnull(cheque, 0) as cheque,isnull(transferencia, 0) as transferencia,isnull(deposito, 0) as depositofrom (selectidvendedor as idusuario,u.nombre as usuario,CAST(s.fecha as date) as 'fecha',am.total total,isnull(sum(s.monto), 0) importe_pagado,ts.descripcion as 'tipo_pago'from mst_almacen_movimiento amleft join api_almacen_pagos s on s.almacen_movimiento_id = am.idleft join tbl_tipopago_seguimiento ts on s.tipo_pago_seguimiento_id = ts.idinner join mst_usuarios u on am.idvendedor = u.idwhere s.validado = 0group by idvendedor, u.nombre, ts.descripcion, CAST(s.fecha as date), am.total) as deudaspivot (sum(importe_pagado)for tipo_pago in ([efectivo], [cheque], [transferencia], [deposito])) as pivote_final) as finalgroup by idusuario, usuario, fecha"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarTalla",
    "Content": "--eliminarCREATE proc [dbo].[spEliminarTalla]@id intasupdate mst_Talla set estado = 0, flag = 0where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarCPE",
    "Content": "CREATE proc [dbo].[spMostrarCPE]@fechainicio date,@fechafin date,@doc char(2),@id int,@estado int,@serienum CHAR(4),@idusuario intASdeclare @enviado bit,@sinenviar bitif(@estado=2)\tbegin\tset @enviado = 1\tset @sinenviar = 0\tendelse if(@estado = 1)\tbegin\tset @enviado = 1\tset @sinenviar = 1\tendelse if(@estado = 0)\tbegin\tset @enviado = 0\tset @sinenviar = 0\tendif(@id = 0)begin\tif(@estado != 2)\t\tbegin\t\tif(@doc != '00')\t\t\tbegin\t\t\tSELECT\t\t\tid_cab_cpe as Id,\t\t\tLTRIM(RTRIM(codigo)) as Codigo,\t\t\tcast(estatus as bit) as anulado,\t\t\tfecha_emi_doc_cpe as Fecha,\t\t\tLTRIM(RTRIM(descri_doc)) Documento,\t\t\tLTRIM(RTRIM(serie_doc_cpe)) Serie,\t\t\tLTRIM(RTRIM(nro_doc_cpe)) Numero,\t\t\tLTRIM(RTRIM(ruc_dni_cliente)) RUC_DNI,\t\t\tLTRIM(RTRIM(nombre_cliente)) Cliente,\t\t\t\t\tdireccion,\t\t\t\ttipo_moneda Moneda,\t\t\tsub_total SubTotal,\t\t\tigv,\t\t\totros_impuestos ICBPER,\t\t\ttotal_cpe Importe,\t\t\tcast(doc_firma as bit) [XML],\t\t\tcast(doc_cdr as bit) [CDR],\t\t\tcast(1 as bit) [PDF],\t\t\tcast(doc_email as bit) [EMAIL],\t\t\tcast(doc_publicado as bit) [WEB],\t\t\tdes_cod_sunat [RESPUESTA SUNAT],\t\t\tcorreo_cliente as 'CORREO_CLIENTE',\t\t\ttipo_doc_cli 'Tipo_Doc_cliente',\t\t\tstatus_verificado,\t\t\tcodigo_verificado,\t\t\tmensaje_verificado,\t\t\tobservacion_verificado\t\t\tFROM vw_tbl_cab_cpe\t\t\twhere ((cast(fecha_emi_doc_cpe as date) between @fechainicio and @fechafin) and codigo = @doc\t\t\tand doc_cdr = @enviado and doc_cdr = @sinenviar \t\t\tOR serie_doc_cpe like '%'+@serienum+'%')\t\t\t--and id_usuario = @idusuario\t\t\torder by fecha_emi_doc_cpe asc\t\t\tend\t\t\telse\t\t\tbegin\t\t\tSELECT \t\t\tid_cab_cpe Id,\t\t\tcodigo Codigo,\t\t\tcast(estatus as bit) anulado,\t\t\tfecha_emi_doc_cpe Fecha,\t\t\tLTRIM(RTRIM(descri_doc)) Documento,\t\t\tLTRIM(RTRIM(serie_doc_cpe)) Serie,\t\t\tLTRIM(RTRIM(nro_doc_cpe)) Numero,\t\t\tLTRIM(RTRIM(ruc_dni_cliente)) RUC_DNI,\t\t\tLTRIM(RTRIM(nombre_cliente)) Cliente,\t\t\tdireccion,\t\t\ttipo_moneda Moneda,\t\t\tsub_total SubTotal,\t\t\tigv,\t\t\totros_impuestos ICBPER,\t\t\ttotal_cpe Importe,\t\t\tcast(doc_firma as bit) [XML],\t\t\tcast(doc_cdr as bit) [CDR],\t\t\tcast(1 as bit) [PDF],\t\t\tcast(doc_email as bit) [EMAIL],\t\t\tcast(doc_publicado as bit) [WEB],\t\t\tdes_cod_sunat [RESPUESTA SUNAT],\t\t\tcorreo_cliente as 'CORREO_CLIENTE',\t\t\ttipo_doc_cli 'Tipo_Doc_cliente',\t\t\tstatus_verificado,\t\t\tcodigo_verificado,\t\t\tmensaje_verificado,\t\t\tobservacion_verificado\t\t\tFROM vw_tbl_cab_cpe\t\t\twhere ((cast(fecha_emi_doc_cpe as date) between @fechainicio and @fechafin)\t\t\tand doc_cdr = @enviado and doc_cdr = @sinenviar\t\t\tOR serie_doc_cpe like '%'+@serienum+'%') \t\t\t--and id_usuario = @idusuario\t\t\torder by fecha_emi_doc_cpe asc\t\t\tend\t\tend\telse\t\tbegin\t\tif(@doc != '00')\t\t\tbegin\t\t\tSELECT\t\t\tid_cab_cpe as Id,\t\t\tLTRIM(RTRIM(codigo)) as Codigo,\t\t\tcast(estatus as bit) as anulado,\t\t\tfecha_emi_doc_cpe as Fecha,\t\t\tLTRIM(RTRIM(descri_doc)) Documento,\t\t\tLTRIM(RTRIM(serie_doc_cpe)) Serie,\t\t\tLTRIM(RTRIM(nro_doc_cpe)) Numero,\t\t\tLTRIM(RTRIM(ruc_dni_cliente)) RUC_DNI,\t\t\tLTRIM(RTRIM(nombre_cliente)) Cliente,\t\t\tdireccion,\t\t\ttipo_moneda Moneda,\t\t\tsub_total SubTotal,\t\t\tigv,\t\t\totros_impuestos ICBPER,\t\t\ttotal_cpe Importe,\t\t\tcast(doc_firma as bit) [XML],\t\t\tcast(doc_cdr as bit) [CDR],\t\t\tcast(1 as bit) [PDF],\t\t\tcast(doc_email as bit) [EMAIL],\t\t\tcast(doc_publicado as bit) [WEB],\t\t\tdes_cod_sunat [RESPUESTA SUNAT],\t\t\tcorreo_cliente as 'CORREO_CLIENTE',\t\t\ttipo_doc_cli 'Tipo_Doc_cliente',\t\t\tstatus_verificado,\t\t\tcodigo_verificado,\t\t\tmensaje_verificado,\t\t\tobservacion_verificado\t\t\tFROM vw_tbl_cab_cpe\t\t\twhere ((cast(fecha_emi_doc_cpe as date) between @fechainicio and @fechafin) and codigo = @doc\t\t\tOR serie_doc_cpe like '%'+@serienum+'%')\t\t\t--and id_usuario = @idusuario\t\t\torder by fecha_emi_doc_cpe asc\t\t\tend\t\t\telse\t\t\tbegin\t\t\tSELECT \t\t\tid_cab_cpe Id,\t\t\tcodigo Codigo,\t\t\tcast(estatus as bit) anulado,\t\t\tfecha_emi_doc_cpe Fecha,\t\t\tLTRIM(RTRIM(descri_doc)) Documento,\t\t\tLTRIM(RTRIM(serie_doc_cpe)) Serie,\t\t\tLTRIM(RTRIM(nro_doc_cpe)) Numero,\t\t\tLTRIM(RTRIM(ruc_dni_cliente)) RUC_DNI,\t\t\tLTRIM(RTRIM(nombre_cliente)) Cliente,\t\t\tdireccion,\t\t\ttipo_moneda Moneda,\t\t\tsub_total SubTotal,\t\t\tigv,\t\t\t\t\t\totros_impuestos ICBPER,\t\t\ttotal_cpe Importe,\t\t\tcast(doc_firma as bit) [XML],\t\t\tcast(doc_cdr as bit) [CDR],\t\t\tcast(1 as bit) [PDF],\t\t\tcast(doc_email as bit) [EMAIL],\t\t\tcast(doc_publicado as bit) [WEB],\t\t\tdes_cod_sunat [RESPUESTA SUNAT],\t\t\tcorreo_cliente as 'CORREO_CLIENTE',\t\t\ttipo_doc_cli 'Tipo_Doc_cliente',\t\t\tstatus_verificado,\t\t\tcodigo_verificado,\t\t\tmensaje_verificado,\t\t\tobservacion_verificado\t\t\tFROM vw_tbl_cab_cpe\t\t\twhere ((cast(fecha_emi_doc_cpe as date) between @fechainicio and @fechafin)\t\t\tOR serie_doc_cpe like '%'+@serienum+'%')\t\t\t--and id_usuario = @idusuario\t\t\torder by fecha_emi_doc_cpe asc\t\t\tend\t\tendendelsebeginSELECT tipo_moneda 'TIPO_MONEDA','0.00','0.00','0.00',format(ope_exonerada,'N','es-pe') 'TOTAL_VENTA',LTRIM(RTRIM(tipo_afec_igv))  'TIPO_IGV',format(18,'N','es-pe') 'PORC_IGV',total_cpe_letras 'TOTAL_LETRAS',CAST(cast(fecha_emi_doc_cpe as date) as varchar(10)) 'FECHA_EMISION','' 'RUC_EMISOR','' 'RAZON_EMPRESA','' 'GUIA_REMISION','' 'RUC_EMISOR','' 'RAZON_EMISOR','' 'UBIGEO','' 'DIRECCION','' 'CIUDAD','' 'DISTRITO',LTRIM(RTRIM(ruc_dni_cliente)) 'DNI_RUC',LTRIM(RTRIM(TIPO_DOC_CLI)) 'CODIGO_TIPO_DOC',LTRIM(RTRIM(nombre_cliente)) 'RAZON_SOCIAL',LTRIM(RTRIM(direccion)) 'DIRECCION_CLIENTE',LTRIM(RTRIM(tipo_moneda)) 'TIPO_MONEDA2',format(igv,'N','es-pe')  'IGV2',format(descuento,'N','es-pe') 'DESCUENTO',format(sub_total,'N','es-pe')  'SUB_TOTAL',format(total_cpe,'N','es-pe')  'TOTAL',LTRIM(RTRIM(serie_nro_doc_cpe)) 'SERIE_NUMERO',LTRIM(RTRIM(nro_doc_afecta)) 'DOC_AFECTA',LTRIM(RTRIM(TIPO_NOT_CREDE)) 'TIPO_NOT_CRED',LTRIM(RTRIM(descri_not_crede)) 'DESCRIP_NOT_CRED',LTRIM(RTRIM(tipo_doc_afecta)) 'TIPO_DOC_AFECTADO',LTRIM(RTRIM(codigo)) 'ID_COCUMENTO','' 'NOMBRE_COMERCIAL','' 'USUARIO_SOL','' 'CONTRA_SOL','' 'CONTRA_FIRMA',otros_impuestos,tipo_operacion 'TIPO_OPERACION',ope_gravada 'TOTAL_VENTA_GRAVADA',ope_exonerada 'TOTAL_VENTA_EXONERADA',forma_pago 'FORMA_PAGO'FROM vw_tbl_cab_cpewhere id_cab_cpe = @IDend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spAsignarDebitoCredito",
    "Content": "CREATE procedure [dbo].[spAsignarDebitoCredito]@visa bit,@mastercard bit,@idventa int,@debitoVisa bit,@debitoMastercard bitasif @visa = 1\tbegin\t\tupdate tabla_FormaPago set DebitoVisa = @debitoVisa\t\twhere IdVenta = @idventa\t\tendif @mastercard = 1\tbegin\t\tupdate tabla_FormaPago set DebitoMastercard = @debitoMastercard\t\twhere IdVenta = @idventa\tend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarIcons",
    "Content": "CREATE proc [dbo].[spInsertarIcons]@nombre varchar(50),@imagen imageasinsert into P_ICONSvalues(@nombre,@imagen)"
  },
  {
    "Type": "SQL_SCALAR_FUNCTION",
    "Name": "F_CalcularTotalExoneradas_Gravadas_Ventas",
    "Content": "CREATE function [dbo].[F_CalcularTotalExoneradas_Gravadas_Ventas](@id int,@ex_gra bit)returns moneyasbegindeclare @total money = 0if(@ex_gra = 0)\tbegin\t\tset @total = (select sum(Total)\t\tfrom mst_Venta_det\t\twhere IdVenta = @id and Igv <= 0 and Flag = 1 and Anulado = 0)\tendelse\tbegin\t\tset @total = (select sum(Total)\t\tfrom mst_Venta_det\t\twhere IdVenta = @id and Igv > 0 and Flag = 1 and Anulado = 0)\tendset @total =isnull(@total,0)return (@total)end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetPedidosDetalles",
    "Content": "CREATE proc [dbo].[SpGetPedidosDetalles]asselect * from PedidosDetalleswhere Eliminado = 0"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarTipoUsuario",
    "Content": "CREATE proc [dbo].[spEliminarTipoUsuario]@id intasupdate mst_TipoUsuario set flag = 0,estado = 0where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_serarch_client_delivery",
    "Content": "CREATE procedure [dbo].[sp_serarch_client_delivery]@buscar varchar(200)asselectc.id,c.numeroDocumento,c.razonSocial,cd.Direccion,c.telefono,c.idDocumento,cd.Principal,cd.Referenciafrom mst_Cliente cinner join mst_Cliente_Direccion cd on cd.IdCliente = c.Idwhere (c.estado = 1 and c.flag = 1)  and ( c.numeroDocumento = @buscar or (cd.Direccion+' ' + c.razonSocial like '%'+@buscar+'%') or (c.razonSocial + ' '+ cd.Direccion like '%'+@buscar+'%') or (c.telefono like '%'+@buscar+'%') or (cd.Referencia like '%'+@buscar+'%')) and c.delivery = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarIcons",
    "Content": "CREATE proc [dbo].[spModificarIcons]@idmenu int,@idsub int,@imagen imageasupdate tabla_SubMenus set icon = @imagenwhere idmenu = @idmenu and id = @idsub"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spCerrar",
    "Content": "CREATE proc [dbo].[spCerrar]@numero int,@fechacierre datetime,@idusuario int,@idcaja int,@contado DECIMAL(18,3),@credito DECIMAL(18,3),@tarjetas DECIMAL(18,3),@otros_ingresos DECIMAL(18,3),@gastos DECIMAL(18,3),@total_efectivo DECIMAL(18,3),@total_egreso DECIMAL(18,3),@efectivo_declarado DECIMAL(18,3),@diferencia DECIMAL(18,3)asupdate mst_apertura set Abierto_Cerrado = 1,fechacierre = @fechacierre, Contado = @contado, Credito = @credito, tarjetas = @tarjetas, otros_ingresos = @otros_ingresos,gastos = @gastos, total_efectivo = @total_efectivo, total_egreso = @total_egreso, efectivo_declarado = @efectivo_declarado,diferencia = @diferenciawhere  numero = @numero and IdUsuario = @idusuario and IdCaja = @idcaja"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_upgraddiagrams",
    "Content": "\tCREATE PROCEDURE dbo.sp_upgraddiagrams\tAS\tBEGIN\t\tIF OBJECT_ID(N'dbo.sysdiagrams') IS NOT NULL\t\t\treturn 0;\t\t\tCREATE TABLE dbo.sysdiagrams\t\t(\t\t\tname sysname NOT NULL,\t\t\tprincipal_id int NOT NULL,\t-- we may change it to varbinary(85)\t\t\tdiagram_id int PRIMARY KEY IDENTITY,\t\t\tversion int,\t\t\t\tdefinition varbinary(max)\t\t\tCONSTRAINT UK_principal_name UNIQUE\t\t\t(\t\t\t\tprincipal_id,\t\t\t\tname\t\t\t)\t\t);\t\t/* Add this if we need to have some form of extended properties for diagrams */\t\t/*\t\tIF OBJECT_ID(N'dbo.sysdiagram_properties') IS NULL\t\tBEGIN\t\t\tCREATE TABLE dbo.sysdiagram_properties\t\t\t(\t\t\t\tdiagram_id int,\t\t\t\tname sysname,\t\t\t\tvalue varbinary(max) NOT NULL\t\t\t)\t\tEND\t\t*/\t\tIF OBJECT_ID(N'dbo.dtproperties') IS NOT NULL\t\tbegin\t\t\tinsert into dbo.sysdiagrams\t\t\t(\t\t\t\t[name],\t\t\t\t[principal_id],\t\t\t\t[version],\t\t\t\t[definition]\t\t\t)\t\t\tselect\t \t\t\t\tconvert(sysname, dgnm.[uvalue]),\t\t\t\tDATABASE_PRINCIPAL_ID(N'dbo'),\t\t\t-- will change to the sid of sa\t\t\t\t0,\t\t\t\t\t\t\t-- zero for old format, dgdef.[version],\t\t\t\tdgdef.[lvalue]\t\t\tfrom dbo.[dtproperties] dgnm\t\t\t\tinner join dbo.[dtproperties] dggd on dggd.[property] = 'DtgSchemaGUID' and dggd.[objectid] = dgnm.[objectid]\t\t\t\t\tinner join dbo.[dtproperties] dgdef on dgdef.[property] = 'DtgSchemaDATA' and dgdef.[objectid] = dgnm.[objectid]\t\t\t\t\t\t\twhere dgnm.[property] = 'DtgSchemaNAME' and dggd.[uvalue] like N'_EA3E6268-D998-11CE-9454-00AA00A3F36E_' \t\t\treturn 2;\t\tend\t\treturn 1;\tEND\t"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarUnidad",
    "Content": "---------------------------------------------------------------------eliminar unidad-------------CREATE procedure [dbo].[spEliminarUnidad]@id intasupdate mst_UnidadMedida set flag = 0, estado = 0where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetOses",
    "Content": "CREATE proc [dbo].[SpGetOses]asselectId,NumOse 'Numero',Nombre,Url_1 'Url1',Url_1_Beta 'Url1Beta',Url_2 'Url2',Url_2_Beta 'Url2Beta',Url3 'Url3',Url3_Beta 'Url3Beta'from mst_Oses"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetAlmacen",
    "Content": "CREATE proc [dbo].[spGetAlmacen]asselect * from mst_Almacenwhere Estado = 1 and Flag = 1;"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarUsuario",
    "Content": "CREATE proc [dbo].[spEliminarUsuario]@id intasupdate mst_Usuarios setestado = 0, flag = 0where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetPedidos",
    "Content": "CREATE proc [dbo].[SpGetPedidos]asselect * from Pedidoswhere Eliminado = 0"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertar_Resultado_Envio",
    "Content": "CREATE proc [dbo].[spInsertar_Resultado_Envio]@id bigint,@docfirma bit,@doccdr bit,@codsunat char(10),@descsunat char(254),@hashsunat char(100)asif((select count(id_info_cpe) from tbl_info_cpe where id_cab_cpe = @id) > 0)beginupdate tbl_info_cpe set doc_firma =@docfirma, doc_cdr = @doccdr, cod_sunat= @codsunat, des_cod_sunat = @descsunat,hash_sunat = @hashsunatwhere id_cab_cpe = @idendelsebegininsert into tbl_info_cpe(id_cab_cpe,doc_firma,doc_cdr,cod_sunat,des_cod_sunat,hash_sunat)values(@id,@docfirma,@doccdr,@codsunat,@descsunat,@hashsunat)end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spCambiarVerEnVentasProductoPresentacion",
    "Content": "CREATE proc [dbo].[spCambiarVerEnVentasProductoPresentacion]@iddetalle int,@id int,@estado bit,@bit bitasif(@bit =0)beginupdate mst_ProductoPresentacion set VerEnVentas = 0where idProductosDetalle = @iddetalleupdate mst_ProductoPresentacion set VerEnVentas = 1where id = @idend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetDocumentoFacturacion",
    "Content": "CREATE proc [dbo].[spGetDocumentoFacturacion]asSELECTid,codigo,descripcion,estadofrom mst_documentoswhere Estado = 1 and Flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spPreVenta_Detalle_Insertar_Temp",
    "Content": "--alter TABLE [dbo].[tabla_Pre_Venta_Detalle_Temp](--\t[Id] [int] IDENTITY(1,1) NOT NULL,--\t[IdPedido] [int] NULL,--\t[IdMesa] [int] NULL,--\t[IdProducto] [int] NULL,--\t[Descripcion] [varchar](200) NULL,--\t[CodigoBarra] [varchar](50) NULL,--\t[UMedida] [varchar](50) NULL,--\t[Cantidad] [money] NULL,--\t[Precio] [money] NULL,--\t[Subtotal] [money] NULL,--\t[igv] [money] NULL,--\t[Descuento] [money] NULL,--\t[total] [money] NULL,--\t[Pagado] [bit] NULL default 0,--\t[Eliminado] [bit] NULL default 0,--\t[Factor] [int] NULL,--\t[IdUnidad] [int] NULL,--  [IdPiso] [int] NULL--)--go-------CREATE proc [dbo].[spPreVenta_Detalle_Insertar_Temp]@idmesa int,@idcontacto int,@idproducto int,@descripcion  varchar(200),@codigobarra varchar(50),@umedida varchar(50),@cantidad money,@precio money,@subtotal money,@descuento money,@factor decimal,@idunidad int,@igv money,@total money,@idpiso int,@idusuario intasdeclare @secuencia int = (select top 1 numsecuencia from tabla_Pre_Venta where IdMesa = @idmesa and IdPiso = @idpiso and Pagado = 0 and Eliminado = 0)if(@idmesa < 500) set @secuencia = 0insert into tabla_Pre_Venta_Detalle_Temp(IdMesa,IdPedido,IdProducto,Descripcion,CodigoBarra,UMedida,Cantidad,Precio,Subtotal,Pagado,Eliminado,Descuento,factor,idunidad,igv,total, IdPiso, idusuario,NumSecuencia)values(@idmesa,@idcontacto,@idproducto,@descripcion,@codigobarra,@umedida,@cantidad,@precio,@subtotal,0,0,@descuento,@factor,@idunidad,@igv,@total,@idpiso,@idusuario,@secuencia)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_get_reporte_almacenMovimiento_by_id",
    "Content": "CREATE proc [dbo].[sp_get_reporte_almacenMovimiento_by_id]@id intasselectam.id,CASE am.serieWHEN 'S' THEN 'NOTA DE SALIDA'WHEN 'E' THEN 'NOTA DE ENTRADA'WHEN 'A' THEN 'AJUSTE'END DescripDoc,am.documento,cast(am.fecha as date) as fecha,am.referencia,am.entrada,am.salida,am.ajuste,am.serie,am.numero,am.credito,am.doc_facturado,a.Nombre 'almacen',c.numeroDocumento,c.razonSocial 'cliente',am.direccion,u.usuario 'vendedor',am.total,amd.*from mst_almacen_movimiento aminner join mst_almacen_movimiento_detalle amd on amd.almacen_movimiento_id = am.idinner join mst_Almacen a on am.idAlmacen = a.Idinner join mst_Cliente c on am.idCliente = c.Idinner join mst_Usuarios u on am.idvendedor = u.IdWHERE amd.estado = 1 and amd.flag = 1 AND AM.id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarSalidas",
    "Content": "CREATE proc [dbo].[spMostrarSalidas]@buscar varchar(max)asselectm.id, fecha, referencia, serie, numero,doc_facturado, cerrado, direccion, idCliente, c.razonSocial, direccionfrom mst_almacen_movimiento minner join mst_Cliente c on m.idCliente = c.Idwhere  serie = 'S' AND ((serie + '-' + CAST(numero as varchar)) LIKE '%'+@buscar+'%')"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarCliente",
    "Content": "CREATE procedure [dbo].[spInsertarCliente]@id int,@idDocumento int,@numeroDocumento varchar(20),@razonSocial varchar(200),@nombreComercial varchar(200),@telefono varchar(20),@correo varchar(100),@usuarioCrea varchar(50),@nacionalidad int = 1,@defaultPago char = 'C',@nombreCarrera VARCHAR(250) = '',@nivel VARCHAR(250) = '',@idProgramaEstudio int = 0asIF(@id != 1)BEGINIF((select count(id) from mst_cliente where id = @id) >= 1)BEGIN    update mst_Cliente set idDocumento = @idDocumento,    numerodocumento = @numeroDocumento, razonsocial = @razonsocial, nombrecomercial = @nombreComercial,    telefono = @telefono,    correo = @correo,    usuarioModifica = @usuarioCrea,    fechaModifica = getdate(),    nacionalidad = @nacionalidad,    DefaultPago = IIF(@defaultPago = '', defaultPago, @defaultPago),\t\tNombreCarrera = @nombreCarrera,\t\tNivel = @nivel,\t\tIdProgramaEstudio = @idProgramaEstudio    where id = @idENDELSEBEGIN    insert into mst_Cliente(idDocumento, numeroDocumento, razonSocial,nombreComercial,telefono, correo, usuarioCrea,nacionalidad, DefaultPago, NombreCarrera, Nivel, IdProgramaEstudio)    values(@idDocumento, @numeroDocumento, @razonSocial,@nombreComercial,@telefono, @correo, @usuarioCrea, @nacionalidad, @defaultPago, @nombreCarrera, @nivel, @idProgramaEstudio)ENDEND"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetPresentacionesByIdProducto",
    "Content": "CREATE proc [dbo].[SpGetPresentacionesByIdProducto]@idProducto intasselect * from ProductoPresentacionwhere idProducto = @IdProducto and estado = 1 and flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spCerrarInventario",
    "Content": "CREATE proc [dbo].[spCerrarInventario]@id int,@bit bitasif(@bit= 0 )update mst_Inventario set Estado = 0where id = @idelse update mst_Inventario set Estado = 1where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetGrupoById",
    "Content": "CREATE proc [dbo].[SpGetGrupoById]@id intasselect id,Descripcionfrom mst_Grupowhere Estado = 1 and Flag = 1 and id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetReporteContadorForExcel",
    "Content": "CREATE PROC [dbo].[spGetReporteContadorForExcel]@fechaInicio date,@fechaFin date,@tipoDocumento varchar(02),@enviado intasif @enviado < 2begin\tif @enviado = 1\t\tbegin\t\t\tif @tipoDocumento = '00'\t\t\t\tbegin\t\t\t\t\tSELECT codigo\t\t\t\t\t,serie_doc_cpe\t\t\t\t\t,nro_doc_cpe\t\t\t\t\t,fecha_emi_doc_cpe\t\t\t\t\t,[ruc_dni_cliente]\t\t\t\t\t,[nombre_cliente]\t\t\t\t\t,[Direccion]\t\t\t\t\t,[ope_exonerada]\t\t\t\t\t,[otros_impuestos]\t\t\t\t\t,[total_cpe]\t\t\t\t\tFROM [vw_tbl_cab_cpe] \t\t\t\t\tWHERE fecha_emi_doc_cpe BETWEEN @fechaInicio AND @fechaFin and doc_cdr = 1\t\t\t\t\tORDER BY [serie_doc_cpe],[nro_doc_cpe] ASC\t\t\t\tend\t\t\telse\t\t\t\tbegin\t\t\t\t\tSELECT codigo\t\t\t\t\t,serie_doc_cpe\t\t\t\t\t,nro_doc_cpe\t\t\t\t\t,fecha_emi_doc_cpe\t\t\t\t\t,[ruc_dni_cliente]\t\t\t\t\t,[nombre_cliente]\t\t\t\t\t,[Direccion]\t\t\t\t\t,[ope_exonerada]\t\t\t\t\t,[otros_impuestos]\t\t\t\t\t,[total_cpe]\t\t\t\t\tFROM [vw_tbl_cab_cpe] \t\t\t\t\tWHERE fecha_emi_doc_cpe BETWEEN @fechaInicio AND @fechaFin and doc_cdr = 1 and codigo = @tipoDocumento\t\t\t\t\tORDER BY [serie_doc_cpe],[nro_doc_cpe] ASC\t\t\t\tend\t\tend\telse\t\tbegin\t\t\tif @tipoDocumento = '00'\t\t\t\tbegin\t\t\t\t\tSELECT codigo\t\t\t\t\t,serie_doc_cpe\t\t\t\t\t,nro_doc_cpe\t\t\t\t\t,fecha_emi_doc_cpe\t\t\t\t\t,[ruc_dni_cliente]\t\t\t\t\t,[nombre_cliente]\t\t\t\t\t,[Direccion]\t\t\t\t\t,[ope_exonerada]\t\t\t\t\t,[otros_impuestos]\t\t\t\t\t,[total_cpe]\t\t\t\t\tFROM [vw_tbl_cab_cpe] \t\t\t\t\tWHERE fecha_emi_doc_cpe BETWEEN @fechaInicio AND @fechaFin and doc_cdr = 0\t\t\t\t\tORDER BY [serie_doc_cpe],[nro_doc_cpe] ASC\t\t\t\tend\t\t\telse\t\t\t\tbegin\t\t\t\t\tSELECT codigo\t\t\t\t\t,serie_doc_cpe\t\t\t\t\t,nro_doc_cpe\t\t\t\t\t,fecha_emi_doc_cpe\t\t\t\t\t,[ruc_dni_cliente]\t\t\t\t\t,[nombre_cliente]\t\t\t\t\t,[Direccion]\t\t\t\t\t,[ope_exonerada]\t\t\t\t\t,[otros_impuestos]\t\t\t\t\t,[total_cpe]\t\t\t\t\tFROM [vw_tbl_cab_cpe] \t\t\t\t\tWHERE fecha_emi_doc_cpe BETWEEN @fechaInicio AND @fechaFin and doc_cdr = 0 and codigo = @tipoDocumento\t\t\t\t\tORDER BY [serie_doc_cpe],[nro_doc_cpe] ASC\t\t\t\tend\t\tendendelse\tbegin\t\tif @tipoDocumento = '00'\t\t\tbegin\t\t\t\tSELECT codigo\t\t\t\t,serie_doc_cpe\t\t\t\t,nro_doc_cpe\t\t\t\t,fecha_emi_doc_cpe\t\t\t\t,[ruc_dni_cliente]\t\t\t\t,[nombre_cliente]\t\t\t\t,[Direccion]\t\t\t\t,[ope_exonerada]\t\t\t\t,[otros_impuestos]\t\t\t\t,[total_cpe]\t\t\t\tFROM [vw_tbl_cab_cpe] \t\t\t\tWHERE fecha_emi_doc_cpe BETWEEN @fechaInicio AND @fechaFin\t\t\t\tORDER BY [serie_doc_cpe],[nro_doc_cpe] ASC\t\t\tend\t\telse\t\t\tbegin\t\t\t\tSELECT codigo\t\t\t\t,serie_doc_cpe\t\t\t\t,nro_doc_cpe\t\t\t\t,fecha_emi_doc_cpe\t\t\t\t,[ruc_dni_cliente]\t\t\t\t,[nombre_cliente]\t\t\t\t,[Direccion]\t\t\t\t,[ope_exonerada]\t\t\t\t,[otros_impuestos]\t\t\t\t,[total_cpe]\t\t\t\tFROM [vw_tbl_cab_cpe] \t\t\t\tWHERE fecha_emi_doc_cpe BETWEEN @fechaInicio AND @fechaFin and codigo = @tipoDocumento\t\t\t\tORDER BY [serie_doc_cpe],[nro_doc_cpe] ASC\t\t\tend\tend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_modificar_cpe_verificado",
    "Content": "CREATE proc [dbo].[sp_modificar_cpe_verificado]@id_cpe int,@cod_verf varchar(10),@msj_verf varchar(250),@obs varchar(250)asupdate tbl_info_cpe set status_verificado = 1, codigo_verificado = @cod_verf, mensaje_verificado = @msj_verf, observacion_verificado = @obswhere id_cab_cpe = @id_cpe"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spValidar_Res",
    "Content": "CREATE proc [dbo].[spValidar_Res]@id int,@idproducto int,@cantidad moneyasselect * from tabla_Pre_Venta_Detalle where id = @id and IdProducto = @idproducto and Cantidad = @cantidadand Pagado = 0 and Eliminado = 0"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetTblCronogramaCpeByIdVenta",
    "Content": "CREATE proc [dbo].[spGetTblCronogramaCpeByIdVenta]@idVenta intasselect * from vw_tbl_cronograma_cpewhere id_cab_cpe = @idVenta"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_get_reporte_cobranza_almacenMovimiento",
    "Content": "CREATE proc [dbo].[sp_get_reporte_cobranza_almacenMovimiento]@fecha dateasSELECT * FROM (SELECT am.idvendedor as CodVen,u.usuario as VENDEDOR,s.fecha,c.idDocumento as Doc,(am.serie +'-'+CAST(am.numero as varchar)) as NumDoc,am.total,ISNULL(s.Monto,0) AS Monto,ts.Descripcion as tipo_pago FROM mst_almacen_movimiento amINNER JOIN api_almacen_pagos s ON am.id = s.almacen_movimiento_idINNER JOIN tbl_TipoPago_Seguimiento ts ON ts.Id = s.tipo_pago_seguimiento_idINNER JOIN mst_Usuarios u ON u.Id = am.idvendedorinner join mst_Cliente c on am.idCliente = c.IdWHERE CAST(s.fecha as date) = @fecha and s.validado = 0) as cobranzaspivot (sum(Monto)for tipo_pago in ([EFECTIVO], [CHEQUE], [TRANSFERENCIA], [DEPOSITO])) PivotTable"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarSalidasDetalles",
    "Content": "CREATE proc [dbo].[spMostrarSalidasDetalles]@id intasselect * from mst_almacen_movimiento_detalle where almacen_movimiento_id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarClienteDireccion",
    "Content": "CREATE proc [dbo].[spInsertarClienteDireccion]@id int,@idCliente int,@direccion varchar(200),@principal bit,@referencia VARCHAR(MAX)asif((select count(id) from mst_cliente_direccion where id= @id) >= 1)beginupdate mst_cliente_direccion set Direccion = @direccion,Estado = 1, Flag = 1, Principal = 0, Referencia = @referenciawhere id = @idendelsebegininsert into mst_Cliente_Direccionvalues(@idCliente,@direccion,1,1,@principal,@referencia)end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetProductoById",
    "Content": "CREATE proc [dbo].[SpGetProductoById]@id intasselectId,nombreProducto 'NombreProducto',idMarca 'IdMarca',idproveedor 'IdProveedor',IdTipoProducto 'IdTipoProducto',IdGrupo,estado 'Estado'from mst_Productowhere id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarProductosTodos",
    "Content": "CREATE proc [dbo].[spMostrarProductosTodos]@buscar varchar(100)asselect'0'[Aux],0 as 'Id',pd.Id IdProducto,pd.codigoBarra [Cod/Barra],p.nombreProducto + ' ' + pd.descripcion + ' ' + LTRIM(mmm.descripcion) + ' ' +LTRIM(mm.nombreMarca) + ' ' + LTRIM(t.descripcion)+' '+ LTRIM(c.descripcion) as 'Descripcion',LTRIM(um.nombreUnidad) 'U. Medida',um.factor [Factor],um.id Id_Unidad,'0' as 'Cantidad',pd.codigoBarra 'Cod_Barra',0.000 as Costo,0.000 as Total,'' AS 'Zona','' as 'Stand'from mst_Producto p inner join mst_ProductoDetalle pd on p.Id = pd.idProductoinner join mst_ProductoPresentacion pp on pd.Id=  pp.idProductosDetalleinner join mst_Marca mm on p.idMarca = mm.Id--inner join mst_Segmento g on p.IdSegmento = g.Codigo--inner join mst_Familia l on p.IdFamilia = l.Codigo--inner join mst_Clase f on p.IdClase = f.Codigoinner join mst_Talla t on pd.idTalla = t.Idinner join mst_Color c on pd.idColores = c.Idinner join mst_UnidadMedida um on pp.idUnidad = um.Idinner join mst_Medidas mmm on pd.idmedida = mmm.idinner join mst_Proveedor pro on p.idproveedor = pro.id--inner join mst_productosunat ps on p.idproductosunat = ps.Cod_SegFamClas + ps.Codigowhere P.IdTipoProducto = 1 ANDp.flag = 1 and p.estado = 1 and --pd.estado = 1 and pd.flag = 1 and pp.estado = 1 and pp.flag = 1 and pp.Principal = 1 and(p.nombreProducto + ' ' + pd.descripcion + ' ' + mmm.descripcion + ' ' +mm.nombreMarca + ' ' + --g.nombreGrupo +' '+--l.nombreLinea+' '+--f.nombreFamilia+' ' +t.descripcion+' '+ c.descripcion + ' ' + pd.codigoBarra + ' ' +iif(cast(fechavencimiento as  varchar) is null,'Sin definir',cast(fechavencimiento as varchar))) collate Latin1_general_CI_AI like '%'+@buscar+'%' order by pd.Id DESC"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetVentaCronograma",
    "Content": "CREATE proc [dbo].[spGetVentaCronograma]asselect * from venta_cronogramawhere estado = 1 and flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spFormato_Rest",
    "Content": "CREATE proc [dbo].[spFormato_Rest]@id int,@idpiso intasselect * from(select temp.*,g.Descripcion as [Grupo],g.id as [IdGrupo],iif(temp.IdMesa >= 500 and temp.IdMesa <1000,'Para Llevar N° ' + cast(temp.numsecuencia as varchar),'Mesa N° '+ ' ' + cast(temp.IdMesa as varchar)) as 'Mesa',us.nombre as 'Mozo',cast(temp.Descripcion as varchar) + ' ('+g.Descripcion+')' as 'Descripcion_Grupo',pv.countPecho,pv.countPierna,pv.textObservationfrom tabla_Pre_Venta_Detalle_Temp tempinner join mst_ProductoPresentacion pp on temp.IdProducto = pp.Idinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Idinner join mst_Producto p on pd.idProducto = p.Idinner join mst_Grupo g on p.IdGrupo = g.Idinner join mst_Usuarios us on temp.IdUsuario = us.Idinner join tabla_Pre_Venta pv on temp.IdMesa = pv.IdMesawhere temp.IdPiso = @idpiso and temp.IdMesa = @idand temp.Pagado = 0and temp.Eliminado = 0and pv.Pagado = 0 and pv.Eliminado = 0) as temporal"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_helpdiagrams",
    "Content": "\tCREATE PROCEDURE dbo.sp_helpdiagrams\t(\t\t@diagramname sysname = NULL,\t\t@owner_id int = NULL\t)\tWITH EXECUTE AS N'dbo'\tAS\tBEGIN\t\tDECLARE @user sysname\t\tDECLARE @dboLogin bit\t\tEXECUTE AS CALLER;\t\t\tSET @user = USER_NAME();\t\t\tSET @dboLogin = CONVERT(bit,IS_MEMBER('db_owner'));\t\tREVERT;\t\tSELECT\t\t\t[Database] = DB_NAME(),\t\t\t[Name] = name,\t\t\t[ID] = diagram_id,\t\t\t[Owner] = USER_NAME(principal_id),\t\t\t[OwnerID] = principal_id\t\tFROM\t\t\tsysdiagrams\t\tWHERE\t\t\t(@dboLogin = 1 OR USER_NAME(principal_id) = @user) AND\t\t\t(@diagramname IS NULL OR name = @diagramname) AND\t\t\t(@owner_id IS NULL OR principal_id = @owner_id)\t\tORDER BY\t\t\t4, 5, 1\tEND\t"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarColor",
    "Content": "---insertarCREATE proc [dbo].[spInsertarColor]@descripcion varchar(10),@usuarioCrea varchar(50)asinsert into mst_Color (descripcion, usuarioCrea)values (@descripcion, @usuarioCrea)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetProductoByIdOldForImport",
    "Content": "CREATE proc [dbo].[SpGetProductoByIdOldForImport]@idOldImport intasselect * from Productowhere idOldImport = @idOldImport"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddGrupo",
    "Content": "CREATE proc [dbo].[SpAddGrupo]@id int,@descripcion varchar(50)asif @id = 0begin\tinsert into mst_Grupo (Descripcion)\tvalues(@descripcion)\tselect CAST(SCOPE_IDENTITY() as int)endelsebegin\tupdate mst_Grupo set Descripcion = @descripcion\twhere id = @id\tselect @idend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetVentaCronogramaByIdVenta",
    "Content": "CREATE proc [dbo].[spGetVentaCronogramaByIdVenta]@idVenta intasselect * from venta_cronogramawhere idVenta = @idVenta and estado = 1 and Flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spResetearTemp",
    "Content": "CREATE proc [dbo].[spResetearTemp]@id int,@idpiso intasdelete from tabla_Pre_Venta_Detalle_Tempwhere IdMesa = @id and IdPiso = @idpisoif((select count(id)from tabla_Pre_Venta_Detalle_Temp)=0)beginDBCC CHECKIDENT ('[tabla_Pre_Venta_Detalle_Temp]', RESEED, 0)end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_helpdiagramdefinition",
    "Content": "\tCREATE PROCEDURE dbo.sp_helpdiagramdefinition\t(\t\t@diagramname \tsysname,\t\t@owner_id\tint\t= null \t\t\t)\tWITH EXECUTE AS N'dbo'\tAS\tBEGIN\t\tset nocount on\t\tdeclare @theId \t\tint\t\tdeclare @IsDbo \t\tint\t\tdeclare @DiagId\t\tint\t\tdeclare @UIDFound\tint\t\t\tif(@diagramname is null)\t\tbegin\t\t\tRAISERROR (N'E_INVALIDARG', 16, 1);\t\t\treturn -1\t\tend\t\t\texecute as caller;\t\tselect @theId = DATABASE_PRINCIPAL_ID();\t\tselect @IsDbo = IS_MEMBER(N'db_owner');\t\tif(@owner_id is null)\t\t\tselect @owner_id = @theId;\t\trevert; \t\t\tselect @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname;\t\tif(@DiagId IS NULL or (@IsDbo = 0 and @UIDFound <> @theId ))\t\tbegin\t\t\tRAISERROR ('Diagram does not exist or you do not have permission.', 16, 1);\t\t\treturn -3\t\tend\t\tselect version, definition FROM dbo.sysdiagrams where diagram_id = @DiagId ; \t\treturn 0\tEND\t"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarDoc_Serie_Usuario",
    "Content": "CREATE proc [dbo].[spInsertarDoc_Serie_Usuario]@idusuario int,@idserie intasinsert into mst_Doc_Serie_Usuario(idserie,IdUsuario,estado,flag)values(@idserie,@idusuario,1,1)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetProductoDetalleById",
    "Content": "CREATE proc [dbo].[SpGetProductoDetalleById]@id intasselect pd.Id,idProducto 'IdProducto',idTalla 'IdTalla',t.descripcion 'Talla',idColores 'IdColor',c.descripcion 'Color',stockminimo 'StockMinimo',stockactual 'StockActual',fechavencimiento 'FechaVence',pd.descripcion 'Descripcion',codigoBarra 'CodigoBarra',pd.estado 'Estado',idmedida 'IdMedida',m.descripcion 'Medida',checkStock 'CheckStock'from mst_ProductoDetalle pdinner join mst_Talla t on pd.idTalla = t.Idinner join mst_Color c on pd.idColores = c.Idinner join mst_Medidas m on pd.idmedida = m.idwhere pd.Id = @id and pd.estado = 1 and pd.flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetVistaCabecera",
    "Content": " CREATE proc [dbo].[spGetVistaCabecera]@fechaInicio date,@fechaFin dateASSELECTid_cab_cpe as id,LTRIM(RTRIM(codigo)) as codigo,cast(estatus as bit) as anulado,fecha_emi_doc_cpe as fecha,LTRIM(RTRIM(descri_doc)) documento,LTRIM(RTRIM(serie_doc_cpe)) serie,LTRIM(RTRIM(nro_doc_cpe)) numero,LTRIM(RTRIM(ruc_dni_cliente)) ruc,LTRIM(RTRIM(nombre_cliente)) cliente,\t\tdireccion,\ttipo_moneda moneda,sub_total subTotal,igv,otros_impuestos Icbper,total_cpe importe,cast(doc_firma as bit) xml,cast(doc_cdr as bit) cdr,cast(1 as bit) pdf,cast(doc_email as bit) email,cast(doc_publicado as bit) web,des_cod_sunat respuestaSunat,correo_cliente as correoCliente,tipo_doc_cli tipoDocCliente,status_verificado as statusVerificado,codigo_verificado as codigoVerificado,mensaje_verificado as mensajeVerificado,observacion_verificado as observacionVerificadoFROM vw_tbl_cab_cpewhere cast(fecha_emi_doc_cpe as date) between @fechainicio and @fechafin order by fecha_emi_doc_cpe asc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_creatediagram",
    "Content": "\tCREATE PROCEDURE dbo.sp_creatediagram\t(\t\t@diagramname \tsysname,\t\t@owner_id\t\tint\t= null, \t\t\t@version \t\tint,\t\t@definition \tvarbinary(max)\t)\tWITH EXECUTE AS 'dbo'\tAS\tBEGIN\t\tset nocount on\t\t\tdeclare @theId int\t\tdeclare @retval int\t\tdeclare @IsDbo\tint\t\tdeclare @userName sysname\t\tif(@version is null or @diagramname is null)\t\tbegin\t\t\tRAISERROR (N'E_INVALIDARG', 16, 1);\t\t\treturn -1\t\tend\t\t\texecute as caller;\t\tselect @theId = DATABASE_PRINCIPAL_ID(); \t\tselect @IsDbo = IS_MEMBER(N'db_owner');\t\trevert; \t\t\t\tif @owner_id is null\t\tbegin\t\t\tselect @owner_id = @theId;\t\tend\t\telse\t\tbegin\t\t\tif @theId <> @owner_id\t\t\tbegin\t\t\t\tif @IsDbo = 0\t\t\t\tbegin\t\t\t\t\tRAISERROR (N'E_INVALIDARG', 16, 1);\t\t\t\t\treturn -1\t\t\t\tend\t\t\t\tselect @theId = @owner_id\t\t\tend\t\tend\t\t-- next 2 line only for test, will be removed after define name unique\t\tif EXISTS(select diagram_id from dbo.sysdiagrams where principal_id = @theId and name = @diagramname)\t\tbegin\t\t\tRAISERROR ('The name is already used.', 16, 1);\t\t\treturn -2\t\tend\t\t\tinsert into dbo.sysdiagrams(name, principal_id , version, definition)\t\t\t\tVALUES(@diagramname, @theId, @version, @definition) ;\t\t\t\tselect @retval = @@IDENTITY \t\treturn @retval\tEND\t"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarDocSerie",
    "Content": "CREATE proc [dbo].[spInsertarDocSerie]@iddoc char(2),@idserie intasinsert into mst_doc_serie(IdDoc,IdSerie,Estado,Flag)values(@iddoc,@idserie,1,1)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetProductoForImportToNew",
    "Content": "CREATE proc [dbo].[SpGetProductoForImportToNew]asselectpd.Id as 'Id',p.nombreProducto as 'NombreProducto',pd.descripcion as 'Descripcion',p.IdGrupo as 'IdGrupo',g.Descripcion 'Grupo',p.IdTipoProducto as 'IdTipoProducto',tp.Descripcion 'TipoProducto',p.idMarca as 'IdMarca',m.nombreMarca 'Marca',p.idproveedor as 'IdProveedor',proveedor.nombre 'Proveedor',pd.idTalla as 'IdTalla',t.descripcion 'Talla',pd.idColores as 'IdColor',c.descripcion 'Color',pd.idmedida 'IdMedida',medida.descripcion 'Medida',pd.stockminimo as 'StockMinimo',p.usuarioCrea as 'UsuaioCrea',p.fechaCrea as 'FechaCrea',pd.estado 'Estado'from mst_Producto pinner join mst_ProductoDetalle pd on p.Id = pd.idProductoinner join mst_Grupo g on p.IdGrupo = g.Idinner join mst_TipoProducto tp on p.IdTipoProducto = tp.Idinner join mst_Marca m on  p.idMarca = m.Idinner join mst_Proveedor proveedor on p.idproveedor = proveedor.idinner join mst_Talla t on pd.idTalla = t.Idinner join mst_Color c on pd.idColores = c.Idinner join mst_Medidas medida on pd.idmedida = medida.idwhere p.flag = 1 and pd.flag = 1order by p.nombreProducto asc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpDeleteGrupo",
    "Content": "CREATE proc [dbo].[SpDeleteGrupo]@id intasupdate mst_Grupo set Estado = 0, Flag =0where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spCalcularGuia",
    "Content": "CREATE proc [dbo].[spCalcularGuia]asselect max(id) from mst_Guia"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_get_status_pago_almacen_movimiento_by_almacen_movimiento_id",
    "Content": "CREATE proc [dbo].[sp_get_status_pago_almacen_movimiento_by_almacen_movimiento_id]@id intasSELECT am.total, ISNULL(SUM(p.monto), 0) 'monto_pagado', IIF(am.total = ISNULL(SUM(p.monto), 0), cast(0 as bit), cast(1 as bit)) 'success' FROM mst_almacen_movimiento  am left join api_almacen_pagos p on p.almacen_movimiento_id = am.idwhere am.ajuste = 0 and am.id = @idgroup by am.total"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_renamediagram",
    "Content": "\tCREATE PROCEDURE dbo.sp_renamediagram\t(\t\t@diagramname \t\tsysname,\t\t@owner_id\t\tint\t= null,\t\t@new_diagramname\tsysname\t\t)\tWITH EXECUTE AS 'dbo'\tAS\tBEGIN\t\tset nocount on\t\tdeclare @theId \t\t\tint\t\tdeclare @IsDbo \t\t\tint\t\t\t\tdeclare @UIDFound \t\tint\t\tdeclare @DiagId\t\t\tint\t\tdeclare @DiagIdTarg\t\tint\t\tdeclare @u_name\t\t\tsysname\t\tif((@diagramname is null) or (@new_diagramname is null))\t\tbegin\t\t\tRAISERROR ('Invalid value', 16, 1);\t\t\treturn -1\t\tend\t\t\tEXECUTE AS CALLER;\t\tselect @theId = DATABASE_PRINCIPAL_ID();\t\tselect @IsDbo = IS_MEMBER(N'db_owner'); \t\tif(@owner_id is null)\t\t\tselect @owner_id = @theId;\t\tREVERT;\t\t\tselect @u_name = USER_NAME(@owner_id)\t\t\tselect @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname \t\tif(@DiagId IS NULL or (@IsDbo = 0 and @UIDFound <> @theId))\t\tbegin\t\t\tRAISERROR ('Diagram does not exist or you do not have permission.', 16, 1)\t\t\treturn -3\t\tend\t\t\t-- if((@u_name is not null) and (@new_diagramname = @diagramname))\t-- nothing will change\t\t--\treturn 0;\t\t\tif(@u_name is null)\t\t\tselect @DiagIdTarg = diagram_id from dbo.sysdiagrams where principal_id = @theId and name = @new_diagramname\t\telse\t\t\tselect @DiagIdTarg = diagram_id from dbo.sysdiagrams where principal_id = @owner_id and name = @new_diagramname\t\t\tif((@DiagIdTarg is not null) and  @DiagId <> @DiagIdTarg)\t\tbegin\t\t\tRAISERROR ('The name is already used.', 16, 1);\t\t\treturn -2\t\tend\t\t\t\t\tif(@u_name is null)\t\t\tupdate dbo.sysdiagrams set [name] = @new_diagramname, principal_id = @theId where diagram_id = @DiagId\t\telse\t\t\tupdate dbo.sysdiagrams set [name] = @new_diagramname where diagram_id = @DiagId\t\treturn 0\tEND\t"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetProductoPresentacionById",
    "Content": "CREATE proc [dbo].[SpGetProductoPresentacionById]@id intasselectpp.id 'Id',idProductosDetalle 'IdProductoDetalle',pp.idUnidad 'IdUnidad',um.nombreUnidad 'Unidad',pp.precioUnitario 'Precio',pp.Principal 'IsPrincipal',pp.Codigo 'CodigoBarra',pp.PrincipalAlmacen 'IsPrincipalAlmacen',pp.VerEnVentasfrom mst_ProductoPresentacion ppinner join mst_UnidadMedida um on pp.idUnidad = um.Idwhere pp.id = @id and pp.estado = 1 and pp.flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpFilterProductoVenta",
    "Content": "CREATE proc [dbo].[SpFilterProductoVenta]@text varchar(max),@idAlmacen intasselect top 20 * from ViewProductoVentawhere NombreProducto like CONCAT('%', @text, '%')and IdAlmacen = @idAlmacenorder by IsPrincipal desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetColorById",
    "Content": "CREATE proc [dbo].[SpGetColorById]@id intasselectId,descripcionfrom mst_Colorwhere Estado = 1 and Flag =1 and id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spverificarcodbarra",
    "Content": "CREATE proc [dbo].[spverificarcodbarra]@codigo varchar(100)asselect pd.id, pp.Id as 'IdProductoPresentacion' from mst_ProductoDetalle pd inner join mst_ProductoPresentacion pp on pd.id = pp.idProductosDetallewhere (codigoBarra = @codigo and pd.flag = 1) or (pp.Codigo = @codigo and pp.flag = 1)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spCambiar_Servidor_Predeterminado",
    "Content": "CREATE proc [dbo].[spCambiar_Servidor_Predeterminado]@id intasif((select count(id) from MST_SERVIDORES where id = @id) > 0)beginupdate mst_servidores set predeterminado= 0update MST_SERVIDORES set Predeterminado = 1where id = @idend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_alterdiagram",
    "Content": "\tCREATE PROCEDURE dbo.sp_alterdiagram\t(\t\t@diagramname \tsysname,\t\t@owner_id\tint\t= null,\t\t@version \tint,\t\t@definition \tvarbinary(max)\t)\tWITH EXECUTE AS 'dbo'\tAS\tBEGIN\t\tset nocount on\t\t\tdeclare @theId \t\t\tint\t\tdeclare @retval \t\tint\t\tdeclare @IsDbo \t\t\tint\t\t\t\tdeclare @UIDFound \t\tint\t\tdeclare @DiagId\t\t\tint\t\tdeclare @ShouldChangeUID\tint\t\t\tif(@diagramname is null)\t\tbegin\t\t\tRAISERROR ('Invalid ARG', 16, 1)\t\t\treturn -1\t\tend\t\t\texecute as caller;\t\tselect @theId = DATABASE_PRINCIPAL_ID();\t \t\tselect @IsDbo = IS_MEMBER(N'db_owner'); \t\tif(@owner_id is null)\t\t\tselect @owner_id = @theId;\t\trevert;\t\t\tselect @ShouldChangeUID = 0\t\tselect @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname \t\t\t\tif(@DiagId IS NULL or (@IsDbo = 0 and @theId <> @UIDFound))\t\tbegin\t\t\tRAISERROR ('Diagram does not exist or you do not have permission.', 16, 1);\t\t\treturn -3\t\tend\t\t\tif(@IsDbo <> 0)\t\tbegin\t\t\tif(@UIDFound is null or USER_NAME(@UIDFound) is null) -- invalid principal_id\t\t\tbegin\t\t\t\tselect @ShouldChangeUID = 1 ;\t\t\tend\t\tend\t\t-- update dds data\t\t\t\t\tupdate dbo.sysdiagrams set definition = @definition where diagram_id = @DiagId ;\t\t-- change owner\t\tif(@ShouldChangeUID = 1)\t\t\tupdate dbo.sysdiagrams set principal_id = @theId where diagram_id = @DiagId ;\t\t-- update dds version\t\tif(@version is not null)\t\t\tupdate dbo.sysdiagrams set version = @version where diagram_id = @DiagId ;\t\treturn 0\tEND\t"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddAuditoria",
    "Content": "CREATE proc [dbo].[SpAddAuditoria]@id int,@usuario varchar(50),@isClosed bit = 0asif @id = 0begin\tdeclare @numero int = isnull((select top 1 Numero from Auditoria order by id desc), 0)\t \tset @numero = @numero + 1\tinsert into Auditoria (Fecha, Usuario, Numero, IsClosed)\tvalues(GETDATE(), @usuario, @numero, @isClosed)\tselect CAST(SCOPE_IDENTITY() as int)endelsebegin\tupdate Auditoria set FechaModifica = GETDATE(),\tUsuarioModifica = @usuario, IsClosed = @isClosed\twhere id = @id\tselect @idend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarGrupo",
    "Content": "----------------------------------------------INSERTAR GRUPOCREATE procedure [dbo].[spInsertarGrupo]@descripcion varchar(100),@usuarioCrea varchar(50)asinsert into mst_Grupo(Descripcion, usuarioCrea)values (@descripcion, @usuarioCrea)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetProductoPresentacionByIdDetalle",
    "Content": "CREATE proc [dbo].[SpGetProductoPresentacionByIdDetalle]@IdProductoDetalle intasselectpp.id 'Id',idProductosDetalle 'IdProductoDetalle',idUnidad 'IdUnidad',um.nombreUnidad 'Unidad',um.factor 'Factor',pp.Codigo,pp.precioUnitario 'Precio',pp.Principalfrom mst_ProductoPresentacion ppinner join mst_UnidadMedida um on pp.idUnidad = um.Idwhere idProductosDetalle = @IdProductoDetalle and pp.estado = 1 and pp.flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarSeguimientoCompra",
    "Content": "CREATE PROC [dbo].[spInsertarSeguimientoCompra]@id int,@idcompra int,@idtipopago int,@descripcion varchar(100),@monto money,@fechapago date,@usuariocrea varchar(50),@descontar bit,@idApertura int,@idCaja int,@idUsuario intasif(@id = 0)begininsert into tbl_SeguimientoCompra(IdCompra, IdTipoPago, descripcion, monto, FechaPago, UsuarioCrea, idApertura, idCaja, idUsuario)values(@idcompra, @idtipopago, @descripcion, @monto,@fechapago,@usuariocrea, @idApertura, @idCaja, @idUsuario)select CAST(SCOPE_IDENTITY() as int)endelsebeginupdate tbl_SeguimientoCompra set IdTipoPago = @idtipopago, descripcion = @descripcion, Monto = @monto,FechaPago = @fechapagowhere id = @idselect CAST(@id as int)endif @descontar = 1beginexec spIrCancelando_Deuda_SeguimientoCompra @idcompraend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddComision",
    "Content": "CREATE proc [dbo].[SpAddComision] @idVenta int,  @idUsuario intas declare @idComision int = isnull((select Id from Comision where IdVenta = @idVenta), 0)declare @comisionTotal float = isnull((select sum(temp.importecomision) from (\t\t\t\t\t\t\t\t\tSELECT v.Id,u.IdTipoUsuario,u.nombre,v.IdUsuarioPreventa,p.nombreproducto,p.IdGrupo,vd.Total,config.Porcentaje,\t\t\t\t\t\t\t\t\t(vd.Total*config.Porcentaje/100) as ImporteComision\t\t\t\t\t\t\t\t\tFROM mst_venta v\t\t\t\t\t\t\t\t\tINNER JOIN mst_Venta_det vd ON v.Id=vd.IdVenta\t\t\t\t\t\t\t\t\tINNER JOIN mst_ProductoPresentacion pp ON pp.Id = vd.IdProducto\t\t\t\t\t\t\t\t\tINNER JOIN mst_ProductoDetalle pd ON pd.Id = pp.idProductosDetalle\t\t\t\t\t\t\t\t\tINNER JOIN mst_Producto p ON p.Id = pd.IdProducto\t\t\t\t\t\t\t\t\tINNER JOIN mst_Usuarios u ON u.Id = v.IdUsuarioPreventa\t\t\t\t\t\t\t\t\tINNER JOIN ComisionConfig config ON (config.IdTipoUsuario=u.IdTipoUsuario AND config.IdGrupo = p.IdGrupo)\t\t\t\t\t\t\t\t\tWHERE v.Id=@idVenta and IdDocumento <> '07'\t\t\t\t\t\t\t\t\t) as temp), 0)if @idComision = 0begin\tif @comisionTotal > 0\tbegin\t\t \t\tinsert into Comision(IdVenta, Total, MontoPagado, IdUsuario)\t\tvalues(@idVenta, @comisionTotal, 0, @idUsuario)\t\tselect CAST(SCOPE_IDENTITY() as int) 'idcomision add'\tend\t \tselect nullendelsebegin\tdeclare @montoPagado float = isnull((select SUM(Monto) from ComisionPagos where IdComision = @idComision and Eliminado = 0), 0)\tupdate Comision set Total = @comisionTotal, MontoPagado = @montoPagado,\tIdUsuario = @idUsuario\twhere id = @idComision\tselect @idComision 'idcomision update'end--validar si esa venta es una nota de credito y saber a que documento afectó con anulación para eliminar sus comisiones-- 07 -> 01,02 anulacióndeclare @serie VARCHAR(20) = (select top 1 NumeroDocAfectado from mst_Venta where id = @idVenta and IdDocumento = '07' and (TipoNotCred = '01' or TipoNotCred = '02')) set @serie = isnull(@serie, '')set @serie = LTRIM(RTRIM(@serie))if @serie <> ''\tbegin\t\tset @idVenta = ISNULL((select top 1 Id from mst_Venta where CONCAT(rtrim(LTRIM(SerieDoc)), '-', NumeroDoc) = @serie) , 0)\t \t\tprint 'yyyyyy'\t\tprint @serie\t\tprint @idventa\t\tif @idVenta > 0\t\tbegin\t\t \t\t\tset @idComision = (select top 1 Id from Comision where IdVenta = @idVenta)\t\t\t\tdelete from ComisionPagos where IdComision = @idComision\t\t\tdelete from Comision where Id = @idComision\t\tend\tend "
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spVerConexionPredeterminada",
    "Content": "CREATE proc [dbo].[spVerConexionPredeterminada]asselect * from MST_SERVIDORESwhere Predeterminado = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_ReporteTopSecret",
    "Content": "CREATE PROC [dbo].[sp_ReporteTopSecret]@idpiso int,@idapertura intasIF(@IDPISO = 0)BEGINSELECT CONSULTA.DESCRIPCION AS DESCRIPCION,SUM(CONSULTA.CANTIDAD)AS CANTIDAD,SUM(CONSULTA.PRECIO) AS PRECIO,SUM(CONSULTA.TOTAL)AS TOTAL,CONSULTA.PISO AS PISO,CONSULTA.APERTURA AS APERTURAFROM(SELECT b.Descripcion AS DESCRIPCION,--a.Total,b.Cantidad AS CANTIDAD,b.Precio AS PRECIO,b.total AS TOTAL,'Todos' as PISO,A.IDAPERTURA AS APERTURAFROM tabla_venta_det_ext bINNER JOIN TABLA_VENTA_EXT A ON B.IDVENTA = A.IDVENTA--GROUP BY B.DESCRIPCION,B.CANTIDAD,B.PRECIO,B.TOTAL,A.IDAPERTURAUNION ALLSELECTB.DESCRIPCION AS DESCRIPCION,B.CANTIDAD AS CANTIDAD,B.PRECIOUNIT AS PRECIO,B.TOTAL TOTAL,'Todos' As PISO,A.IDAPERTURA AS APERTURAFROM MST_VENTA_DET BINNER JOIN MST_VENTA A ON B.IDVENTA = A.IDWHERE B.Anulado = 0 AND B.Flag = 1--GROUP BY B.DESCRIPCION,B.CANTIDAD,B.PRECIOUNIT,B.TOTAL,A.IDAPERTURA) AS CONSULTAWHERE CONSULTA.APERTURA = @IDAPERTURAGROUP BY CONSULTA.DESCRIPCION,CONSULTA.PISO,CONSULTA.APERTURAENDELSEBEGINSELECT CONSULTA.DESCRIPCION AS DESCRIPCION,SUM(CONSULTA.CANTIDAD)AS CANTIDAD,SUM(CONSULTA.PRECIO) AS PRECIO,SUM(CONSULTA.TOTAL)AS TOTAL,CONSULTA.PISO AS PISO, CONSULTA.APERTURA AS APERTURAFROM(SELECT b.Descripcion AS DESCRIPCION,--a.Total,b.Cantidad AS CANTIDAD,b.Precio AS PRECIO,b.total AS TOTAL,A.IDPISO as PISO,A.IDAPERTURA AS APERTURAFROM tabla_venta_det_ext bINNER JOIN TABLA_VENTA_EXT A ON B.IDVENTA = A.IDVENTA--GROUP BY B.DESCRIPCION,B.CANTIDAD,B.PRECIO,B.TOTAL,A.IDPISO,A.IDAPERTURAUNION ALLSELECTB.DESCRIPCION AS DESCRIPCION,B.CANTIDAD AS CANTIDAD,B.PRECIOUNIT AS PRECIO,B.TOTAL TOTAL,A.IDPISO As PISO,A.IDAPERTURA AS APERTURAFROM MST_VENTA_DET BINNER JOIN MST_VENTA A ON B.IDVENTA = A.IDWHERE B.Anulado = 0 AND B.Flag = 1--GROUP BY B.DESCRIPCION,B.CANTIDAD,B.PRECIOUNIT,B.TOTAL,A.IDPISO,A.IDAPERTURA) AS CONSULTAWHERE CONSULTA.PISO = @IDPISO AND CONSULTA.APERTURA = @IDAPERTURAGROUP BY CONSULTA.DESCRIPCION,CONSULTA.PISO,CONSULTA.APERTURAEND"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarImagenProducto",
    "Content": "CREATE proc [dbo].[spModificarImagenProducto]@id int,@imagen imageasupdate mst_ProductoDetalle set imagenProducto = @imagenwhere id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_dropdiagram",
    "Content": "\tCREATE PROCEDURE dbo.sp_dropdiagram\t(\t\t@diagramname \tsysname,\t\t@owner_id\tint\t= null\t)\tWITH EXECUTE AS 'dbo'\tAS\tBEGIN\t\tset nocount on\t\tdeclare @theId \t\t\tint\t\tdeclare @IsDbo \t\t\tint\t\t\t\tdeclare @UIDFound \t\tint\t\tdeclare @DiagId\t\t\tint\t\t\tif(@diagramname is null)\t\tbegin\t\t\tRAISERROR ('Invalid value', 16, 1);\t\t\treturn -1\t\tend\t\t\tEXECUTE AS CALLER;\t\tselect @theId = DATABASE_PRINCIPAL_ID();\t\tselect @IsDbo = IS_MEMBER(N'db_owner'); \t\tif(@owner_id is null)\t\t\tselect @owner_id = @theId;\t\tREVERT; \t\t\t\tselect @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname \t\tif(@DiagId IS NULL or (@IsDbo = 0 and @UIDFound <> @theId))\t\tbegin\t\t\tRAISERROR ('Diagram does not exist or you do not have permission.', 16, 1)\t\t\treturn -3\t\tend\t\t\tdelete from dbo.sysdiagrams where diagram_id = @DiagId;\t\t\treturn 0;\tEND\t"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddAuditoriaDetalles",
    "Content": "CREATE proc [dbo].[SpAddAuditoriaDetalles]@id int,@auditoriaId int,@stock float,@conteo float,@diferencia float,@idProducto int,@descripcion varchar(50),@idUnidad int,@idGrupo intasif @id = 0begin\tinsert into AuditoriaDetalles(AuditoriaId, Stock, Conteo, Diferencia, IdProducto, IdUnidad, idgrupo)\tvalues(@auditoriaId, @stock, @conteo, @diferencia, @idProducto, @idUnidad, @idGrupo)\tselect CAST(SCOPE_IDENTITY() as int)endelsebegin\tupdate AuditoriaDetalles set Stock = @stock,\tConteo = @conteo, Diferencia = @diferencia,\tIdProducto= @idProducto, IdUnidad=@idUnidad,\tidgrupo=@idGrupo\twhere id = @id\tselect @idend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spAddControlTrasportista",
    "Content": "CREATE proc [dbo].[spAddControlTrasportista]@id int,@TransportistaId int,@TransportistaNombre varchar(200),@IdVenta int,@HoraSalida datetime,@HorraLlegada datetime,@Observacion textasif @id = 0begin\tinsert into ControlTrasportistas (TrasportistaId, TrasportistaNombre, IdVenta, HoraSalida, HoraLlegada, Observacion)\tvalues(@TransportistaId, @TransportistaNombre, @IdVenta, @HoraSalida, @HoraSalida, @Observacion)\tselect CAST(SCOPE_IDENTITY() as int)endelsebegin\tupdate ControlTrasportistas set TrasportistaId = @TransportistaId, TrasportistaNombre = @TransportistaNombre, IdVenta = @IdVenta, HoraSalida = @HoraSalida,\tHoraLlegada = @HorraLlegada, Observacion = @Observacion\twhere id = @id\tselect CAST(@id as int)end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarLinea",
    "Content": "-----------------------------------------select * from TablaLinea--exec spBuscarGlobal 'spBuscarLinea','1'--exec spmostrarlinea----------------------------------------------INSERTAR LINEACREATE procedure [dbo].[spInsertarLinea]@nombre varchar(100),@idgrupo int,@usuarioCrea varchar(50)asinsert into mst_Linea(nombreLinea, idGrupo,usuarioCrea)values (@nombre,@idgrupo, @usuarioCrea)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetProductoPresentacionForImportToNew",
    "Content": "CREATE proc [dbo].[SpGetProductoPresentacionForImportToNew]@idProducto intasselectpp.Id,pp.idProductosDetalle as 'IdProducto',pp.idUnidad as 'IdUnidad',um.nombreUnidad as 'Unidad',um.factor as 'Factor',pp.precioUnitario 'Precio',pp.Principal as 'IsPrincipal',pp.usuarioCrea 'UsuarioCrea',pp.fechaCrea 'FechaCrea',pp.estado  'Estado'from mst_ProductoPresentacion ppinner join mst_UnidadMedida um on pp.idUnidad = um.Idwhere pp.flag = 1 and pp.idProductosDetalle = @idProducto"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddColor",
    "Content": "CREATE proc [dbo].[SpAddColor]@id int, @descripcion varchar(50)asif @id = 0begin\tinsert into mst_Color (descripcion)\tvalues(@descripcion)\tselect CAST(SCOPE_IDENTITY() as int)endelsebegin\tupdate mst_Color set descripcion = @descripcion\twhere id = @id\tselect @idend"
  },
  {
    "Type": "SQL_SCALAR_FUNCTION",
    "Name": "fn_diagramobjects",
    "Content": "\tCREATE FUNCTION dbo.fn_diagramobjects() \tRETURNS int\tWITH EXECUTE AS N'dbo'\tAS\tBEGIN\t\tdeclare @id_upgraddiagrams\t\tint\t\tdeclare @id_sysdiagrams\t\t\tint\t\tdeclare @id_helpdiagrams\t\tint\t\tdeclare @id_helpdiagramdefinition\tint\t\tdeclare @id_creatediagram\tint\t\tdeclare @id_renamediagram\tint\t\tdeclare @id_alterdiagram \tint \t\tdeclare @id_dropdiagram\t\tint\t\tdeclare @InstalledObjects\tint\t\tselect @InstalledObjects = 0\t\tselect \t@id_upgraddiagrams = object_id(N'dbo.sp_upgraddiagrams'),\t\t\t@id_sysdiagrams = object_id(N'dbo.sysdiagrams'),\t\t\t@id_helpdiagrams = object_id(N'dbo.sp_helpdiagrams'),\t\t\t@id_helpdiagramdefinition = object_id(N'dbo.sp_helpdiagramdefinition'),\t\t\t@id_creatediagram = object_id(N'dbo.sp_creatediagram'),\t\t\t@id_renamediagram = object_id(N'dbo.sp_renamediagram'),\t\t\t@id_alterdiagram = object_id(N'dbo.sp_alterdiagram'), \t\t\t@id_dropdiagram = object_id(N'dbo.sp_dropdiagram')\t\tif @id_upgraddiagrams is not null\t\t\tselect @InstalledObjects = @InstalledObjects + 1\t\tif @id_sysdiagrams is not null\t\t\tselect @InstalledObjects = @InstalledObjects + 2\t\tif @id_helpdiagrams is not null\t\t\tselect @InstalledObjects = @InstalledObjects + 4\t\tif @id_helpdiagramdefinition is not null\t\t\tselect @InstalledObjects = @InstalledObjects + 8\t\tif @id_creatediagram is not null\t\t\tselect @InstalledObjects = @InstalledObjects + 16\t\tif @id_renamediagram is not null\t\t\tselect @InstalledObjects = @InstalledObjects + 32\t\tif @id_alterdiagram  is not null\t\t\tselect @InstalledObjects = @InstalledObjects + 64\t\tif @id_dropdiagram is not null\t\t\tselect @InstalledObjects = @InstalledObjects + 128\t\t\t\treturn @InstalledObjects \tEND\t"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarMarca",
    "Content": "-------------------PROCEDIMIENTOS ALMACENADOS---------------------------------Insertar Marca-------------------CREATE procedure [dbo].[spInsertarMarca]@nombre varchar(100),@usuarioCrea varchar(50)asinsert into mst_Marca(nombreMarca,usuarioCrea)values(@nombre,@usuarioCrea)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetProductos",
    "Content": "CREATE proc [dbo].[SpGetProductos]@text varchar(100),@idGrupo int,@verDeshabilitados bit,@tope int = 50asif @tope = 0 begin set @tope = 100000 endSELECT top (@tope)*FROM Productowhere IdGrupo = CASE WHEN @idGrupo > 0 THEN @idGrupo ELSE IdGrupo ENDAND NombreProducto like CONCAT('%', @text, '%')and Estado = CASE WHEN @verDeshabilitados = 0 THEN 1 ELSE 0 END and Flag = 1order by Id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpDeleteSeguimiento",
    "Content": "CREATE proc [dbo].[SpDeleteSeguimiento]@id int,@idVenta intasupdate tbl_Seguimiento set Eliminado = 1where id = @idexec spIrCancelando_Deuda_Seguimiento @idVentaSELECT @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpDeleteColor",
    "Content": "CREATE proc [dbo].[SpDeleteColor]@id intasupdate mst_Color set estado = 0, flag = 0where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetComision",
    "Content": "CREATE proc [dbo].[SpGetComision]@idUsuario int,@deben bitasselectc.Id,c.IdVenta,CONCAT(v.SerieDoc, '-', v.NumeroDoc) as 'Referencia',v.TotalVenta,c.Total 'Comision',c.MontoPagado,(c.Total - c.MontoPagado) as 'Saldo',c.IdUsuario,u.usuario 'Usuario' from Comision cinner join mst_Venta v on c.IdVenta = v.idinner join mst_Usuarios u on c.idUsuario = u.Idwhere c.IdUsuario = case @idUsuario when 0 then c.IdUsuario else @idUsuario endand c.MontoPagado <= case @deben when 0 then c.Total else c.Total-1 endorder by id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spReporteComprobante",
    "Content": "CREATE proc [dbo].[spReporteComprobante]@id int,@bit bitasif(@bit = 0)SELECT a.Id AS IdCabCpe,CASE a.IdDocumentoWHEN '01' THEN 'FACTURA ELECTRÓNICA'WHEN '03' THEN 'BOLETA DE VENTA ELECTRÓNICA'WHEN '07' THEN 'NOTA DE CREDITO ELECTRÓNICA'WHEN '08' THEN 'NOTA DE DEBITO ELECTRÓNICA'WHEN '99' THEN 'NOTA DE VENTA'END AS TipoDocumento, CASE l.codigoSunatWHEN 6 THEN 'RAZON SOCIAL'ELSE 'CLIENTE'END AS TipoGlosa,a.SerieDoc+'-'+ cast(a.NumeroDoc as varchar(15)) as SerieNum,(CASE a.IdDocumentoWHEN '01' THEN 'FACTURA ELECTRÓNICA'WHEN '03' THEN 'BOLETA DE VENTA ELECTRÓNICA'WHEN '07' THEN 'NOTA DE CREDITO ELECTRÓNICA'WHEN '08' THEN 'NOTA DE DEBITO ELECTRÓNICA'WHEN '99' THEN 'NOTA DE VENTA'END +': '+a.SerieDoc+'-'+ cast(a.NumeroDoc as varchar(15))) as Documento, a.FechaEmision,a.SubTotal as SubTotalC, a.TotalVenta,a.Total_Letras, RTRIM((e.nombreProducto + ' ' + d.descripcion + ' '+ g.nombreMarca + ' ' + f.descripcion)) + ' ' + LTRIM(cast(b.Adicional1 as varchar(250))) AS NomPoducto, a.IdCliente, IIF(l.descripcion='OTROS','DOC',l.descripcion) AS descripcion, a.DniRuc, a.RazonSocial, a.Direccion, a.Email, a.Anulado AS Estatus, a.Observacion, a.TipoNotCred, a.DescripNotCred, a.TipoDocAfectado, a.NumeroDocAfectado, a.UsuarioCrea, a.FechaCrea, a.UsuarioModifica, a.FechaModifica, a.IdFormaPago, k.FormadePago, a.IdUsuarioPreventa, a.Descuento AS Descto, a.IdApertura, a.IdCaja, a.ImportePagado, b.Id AS IdVentaDet, b.IdProducto AS fkProducto, b.PrecioUnit, b.IdVenta, b.Flag AS FlagVentaDet, b.Anulado, b.Cantidad, b.Descuento,b.Subtotal,b.Total, h.nombreUnidad AS UnidDet, b.Factor, e.Id AS IdProductoPres, e.idMarca AS IdMarcaProductoPres, e.idsegmento, e.idfamilia, e.idclase, e.estado AS StatusVentaDet, e.flag AS FlagPresen, e.idproveedor, d.Id AS IdProductoDet, d.idProducto AS IdProductDetalles, d.idTalla, d.idColores, d.stockinicial, d.stockactual, d.stockminimo, '' fechavencimiento, d.codigoBarra, '' imagenProducto, d.estado AS StatusProdDet, d.flag AS FlagProdDet, d.idmedida AS MediProducDet, c.Id AS IdProducto, c.idProductosDetalle, c.idUnidad, c.precioUnitario, c.estado AS StatusPresent, c.flag AS FlagPresent, c.Principal, f.id AS IdMedida, f.descripcion, f.estado, f.flag, g.Id AS IdMarca, g.nombreMarca, g.estado AS StatusMarca, g.flag AS FlagMarca, a.hassh, i.usuario as Vendedor, j.Efectivo,j.Vuelto,iif(a.IdMesa >= 500 and a.idmesa < 1000,'Para Llevar',iif(a.idmesa >= 1000 and a.idmesa < 2000, 'Delivery' ,cast(a.idmesa as varchar))) as IdMesa,a.idpiso,iif(a.tipomoneda = 'PEN','PENS/','USD$') AS Simbolo,'' as 'Grado',a.Otro_Imp,\t\t\t\t\t\t (a.TotalVenta + a.Otro_Imp) as 'Importe_Total',b.Igv,DBO.F_CalcularTotalExoneradas_Gravadas_Ventas(@id,0) total_exonerada,DBO.F_CalcularTotalExoneradas_Gravadas_Ventas(@id,1) total_gravada,j.Visa,j.Mastercard,v_d.estado,v_d.flag,a.countPecho,a.countPierna,a.textObservation,cl.telefono,cl.razonSocial as Contacto,di.Direccion,v_d.num_correlative,a.delivery,a.llevar,IIF(a.delivery =1, 'D-'+cast(v_d.num_correlative as varchar), iif(a.llevar =1, 'LL-'+cast(v_d.num_correlative as varchar),'')) as 'correlativo2',a.IdDocumento,c2.telefono,a.igv as IgvCab,c2.NombreCarrera 'programaEstudio',c2.NivelFROM dbo.mst_Venta AS a INNER JOINdbo.mst_Venta_det AS b ON a.Id = b.IdVenta INNER JOINdbo.mst_ProductoPresentacion AS c ON c.Id = b.IdProducto INNER JOINdbo.mst_ProductoDetalle AS d ON d.Id = c.idProductosDetalle INNER JOINdbo.mst_Producto AS e ON e.Id = d.idProducto INNER JOINdbo.mst_Medidas AS f ON f.id = d.idmedida INNER JOINdbo.mst_Marca AS g ON g.Id = e.idMarca INNER JOIN dbo.mst_UnidadMedida AS h ON h.Id = b.IdUnidad INNER JOIN dbo.mst_Usuarios AS i ON i.Id=a.IdUsuarioPreventa INNER JOINdbo.tabla_FormaPago AS j ON j.IdVenta=a.Id INNER JOINdbo.mst_FormaPago k ON k.Id = a.IdFormaPago INNER JOINdbo.mst_TipoDocumento l ON l.codigoSunat=a.CodigoTipoDoc LEFT JOINdbo.venta_delivery v_d ON v_d.id_venta = a.Id LEFT JOINdbo.mst_Cliente cl on v_d.id_contacto = cl.id LEFT JOINdbo.mst_Cliente_Direccion di ON cl.Id = di.IdCliente \t\t\t\t\t\t  inner join mst_Cliente c2 on a.IdCliente = c2.Idleft join ProgramasEstudio pe on cl.IdProgramaEstudio = pe.idwhere b.Flag=1  and\t a.Id = @id\t\t\t\t\t\t  else------------------------------------------------------------------------------------------------------------SELECT a.Id AS IdCabCpe,CASE a.IdDocumentoWHEN '01' THEN 'FACTURA ELECTRÓNICA'WHEN '03' THEN 'BOLETA DE VENTA ELECTRÓNICA'WHEN '07' THEN 'NOTA DE CREDITO ELECTRÓNICA'WHEN '08' THEN 'NOTA DE DEBITO ELECTRÓNICA'WHEN '99' THEN 'NOTA DE VENTA'END AS TipoDocumento, CASE l.codigoSunatWHEN 6 THEN 'RAZON SOCIAL'ELSE 'CLIENTE'END AS TipoGlosa,a.SerieDoc+'-'+ cast(a.NumeroDoc as varchar(15)) as SerieNum,(CASE a.IdDocumentoWHEN '01' THEN 'FACTURA ELECTRÓNICA'WHEN '03' THEN 'BOLETA DE VENTA ELECTRÓNICA'WHEN '07' THEN 'NOTA DE CREDITO ELECTRÓNICA'WHEN '08' THEN 'NOTA DE DEBITO ELECTRÓNICA'WHEN '99' THEN 'NOTA DE VENTA'END +': '+a.SerieDoc+'-'+ cast(a.NumeroDoc as varchar(15))) as Documento, a.FechaEmision, a.SubTotal as SubTotalC,a.TotalVenta,a.Total_Letras, rtrim(B.descripcion) + ' ' + CAST(B.Adicional1 as varchar(250)) AS NomPoducto, a.IdCliente, IIF(l.descripcion='OTROS','DOC',l.descripcion) AS descripcion, a.DniRuc, a.RazonSocial, a.Direccion, a.Email, a.Anulado AS Estatus, a.Observacion, a.TipoNotCred, a.DescripNotCred, a.TipoDocAfectado, a.NumeroDocAfectado, a.UsuarioCrea, a.FechaCrea, a.UsuarioModifica, a.FechaModifica, a.IdFormaPago, --'Contado' FormadePago, CASE a.IdFormaPagoWHEN 1 THEN 'CONTADO'WHEN 2 THEN 'CREDITO'END AS FormadePago, a.IdUsuarioPreventa, a.Descuento AS Descto, a.IdApertura, a.IdCaja, a.ImportePagado, b.Id AS IdVentaDet, b.IdProducto AS fkProducto, b.PrecioUnit, b.IdVenta, b.Flag AS FlagVentaDet, b.Anulado, b.Cantidad, b.Descuento, b.Subtotal,b.Total, 'NIU' AS UnidDet, b.Factor, 0 AS IdProductoPres, 0 AS IdMarcaProductoPres, 0 idsegmento, 0 idfamilia, 0 idclase, B.Flag AS StatusVentaDet, 1 AS FlagPresen, 0 idproveedor, b.IdProducto AS IdProductoDet, b.IdProducto AS IdProductDetalles, 0 idTalla, 0 idColores, 0 stockinicial, 0 stockactual, 0 stockminimo, '' fechavencimiento, '' codigoBarra, '' imagenProducto, 1 AS StatusProdDet, 1 AS FlagProdDet, 0 AS MediProducDet, b.IdProducto AS IdProducto, b.IdProducto as idProductosDetalle,1 idUnidad, b.PrecioUnit precioUnitario, 1 AS StatusPresent, 1 AS FlagPresent, 0 Principal, 1 AS IdMedida, '' descripcion, 1 estado, 1 flag, 1 AS IdMarca, '' nombreMarca, 1 AS StatusMarca, 1 AS FlagMarca, a.hassh, i.usuario as Vendedor, 0 Efectivo,0 Vuelto,iif(a.IdMesa >= 500 and a.idmesa < 1000,'Para Llevar',iif(a.idmesa >= 1000 and a.idmesa < 2000, 'Delivery' , cast(a.idmesa as varchar))) as IdMesa,a.idpiso,iif(a.tipomoneda = 'PEN','PENS/','USD$') AS Simbolo,'' as 'Grado',a.Otro_Imp,(a.TotalVenta + a.Otro_Imp) as 'Importe_Total',b.Igv,DBO.F_CalcularTotalExoneradas_Gravadas_Ventas(@id,0) total_exonerada,DBO.F_CalcularTotalExoneradas_Gravadas_Ventas(@id,1) total_gravada,0 Visa,0 Mastercard,v_d.estado,v_d.flag,a.countPecho,a.countPierna,a.textObservation,cl.telefono,cl.razonSocial as Contacto,di.Direccion,v_d.num_correlative,a.delivery,a.llevar,IIF(a.delivery =1, 'D-'+cast(v_d.num_correlative as varchar), iif(a.llevar =1, 'LL-'+cast(v_d.num_correlative as varchar),'')) as 'correlativo2',a.IdDocumento ,c2.telefono,a.igv as IgvCab,c2.NombreCarrera 'programaEstudio',c2.NivelFROMdbo.mst_Venta AS a INNER JOINdbo.mst_Venta_det AS b ON a.Id = b.IdVenta INNER JOINdbo.mst_Usuarios AS i ON i.Id=a.IdUsuarioPreventa INNER JOINdbo.mst_TipoDocumento l ON l.codigoSunat=a.CodigoTipoDoc LEFT JOINdbo.venta_delivery v_d ON v_d.id_venta = a.Id LEFT JOINdbo.mst_Cliente cl on v_d.id_contacto = cl.id LEFT JOINdbo.mst_Cliente_Direccion di ON cl.Id = di.IdCliente left join dbo.ProgramasEstudio pe on cl.IdProgramaEstudio = pe.idinner join mst_Cliente c2 on a.IdCliente = c2.Idwhere b.Flag=1  anda.Id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarPermisosVenta",
    "Content": "CREATE proc [dbo].[spInsertarPermisosVenta]@idusuario int,@maximo money,@minimo moneyasinsert into mst_permisos_venta(idusuario,maximo,minimo)values(@idusuario,@maximo,@minimo)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetProductosById",
    "Content": "CREATE proc [dbo].[SpGetProductosById]@id intasselect * from mst_Productowhere Id = @id and estado = 1 and flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetTallaById",
    "Content": "CREATE proc [dbo].[SpGetTallaById]@id intasselectId,descripcionfrom mst_Tallawhere Estado = 1 and Flag =1 and id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spListaStock",
    "Content": "CREATE proc [dbo].[spListaStock]@idGrupo int,@idAlmacen int = 1asIF @idGrupo > 0begin\tSELECT s.IdAlmacen,a.Nombre, g.Descripcion as Grupo,\tpd.codigoBarra,g.descripcion,\tRTRIM((p.nombreProducto + ' ' + me.descripcion + ' '+ m.nombreMarca + ' ' + pd.descripcion)) as nombreProducto,\tu.nombreUnidad,\tm.nombreMarca,\tme.descripcion,\t(s.Saldo/u.factor) as Stock,\tpd.descripcion,\tpd.fechavencimiento,\tpp.precioUnitario,\tdbo.F_GetUltimoCostoProductoDetalle(pd.idproducto,s.IdAlmacen) as PCompra\tFROM mst_ProductoPresentacion pp\tINNER JOIN mst_ProductoDetalle pd ON pd.Id = pp.idProductosDetalle\tINNER JOIN mst_Producto p ON p.Id = pd.idProducto\tINNER JOIN mst_UnidadMedida u ON u.Id = pp.idUnidad\tINNER JOIN mst_Grupo g ON g.Id = IdGrupo\tINNER JOIN mst_Marca m ON m.Id = p.idMarca\tINNER JOIN mst_Medidas me ON me.Id = pd.idmedida\tINNER JOIN Stocks_Acumulados s ON s.IdProducto = pd.Id\tINNER JOIN mst_Almacen a ON a.Id = s.IdAlmacen\tWHERE p.IdGrupo = @idGrupo and s.IdAlmacen = @idAlmacen and\t(pp.Principal = 1 AND pp.estado = 1 AND pp.flag = 1) AND--\t(pp.PrincipalAlmacen = 1 AND pp.estado = 1 AND pp.flag = 1) AND\t(pd.estado = 1 AND pd.flag = 1) AND\t(p.estado = 1 AND p.flag = 1) \tORDER BY RTRIM((p.nombreProducto + ' ' + pd.descripcion + ' '+ m.nombreMarca + ' ' + me.descripcion)) ASCendelsebegin\tSELECT s.IdAlmacen,a.Nombre, g.Descripcion as Grupo,\tpd.codigoBarra,g.descripcion,\tRTRIM((p.nombreProducto + ' ' + me.descripcion + ' '+ m.nombreMarca + ' ' + pd.descripcion)) as nombreProducto,\tu.nombreUnidad,\tm.nombreMarca,\tme.descripcion,\t(s.Saldo/u.factor) as Stock,\tpd.descripcion,\tpd.fechavencimiento,\tpp.precioUnitario,\tdbo.F_GetUltimoCostoProductoDetalle(pd.idproducto,s.IdAlmacen) as PCompra\tFROM mst_ProductoPresentacion pp\tINNER JOIN mst_ProductoDetalle pd ON pd.Id = pp.idProductosDetalle\tINNER JOIN mst_Producto p ON p.Id = pd.idProducto\tINNER JOIN mst_UnidadMedida u ON u.Id = pp.idUnidad\tINNER JOIN mst_Grupo g ON g.Id = IdGrupo\tINNER JOIN mst_Marca m ON m.Id = p.idMarca\tINNER JOIN mst_Medidas me ON me.Id = pd.idmedida\tINNER JOIN Stocks_Acumulados s ON s.IdProducto = pd.Id\tINNER JOIN mst_Almacen a ON a.Id = s.IdAlmacen\tWHERE s.IdAlmacen = @idAlmacen and\t(pp.Principal = 1 AND pp.estado = 1 AND pp.flag = 1) AND\t--(pp.PrincipalAlmacen = 1 AND pp.estado = 1 AND pp.flag = 1) AND\t(pd.estado = 1 AND pd.flag = 1) AND\t(p.estado = 1 AND p.flag = 1) \tORDER BY RTRIM((p.nombreProducto + ' ' + pd.descripcion + ' '+ m.nombreMarca + ' ' + me.descripcion)) ASCend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetProveedor",
    "Content": "CREATE proc [dbo].[SpGetProveedor]@text varchar(250)asselect top 50 Id,Nombre,Ruc,Direccion,Telefono,Emailfrom mst_Proveedorwhere estado = 1 and flag = 1and (nombre like CONCAT('%', @text, '%') or ruc like CONCAT('%', @text, '%'))ORDER BY id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarProducto",
    "Content": "CREATE procedure [dbo].[spInsertarProducto]@nombreProducto varchar(100),@IdMarca int,@idsegmento char(2),@idfamilia char(2),@idclase char(2),@usuarioCrea varchar(50),@idproveedor int,@idtipo int,@idproductosunat char(8),@idgrupo intasinsert into mst_Producto(nombreProducto, idMarca,IdSegmento,IdFamilia, IdClase, usuarioCrea, idproveedor, IdTipoProducto,idproductosunat,IdGrupo)values(@nombreProducto,@IdMarca,@idsegmento,@idfamilia,@idclase, @usuarioCrea,@idproveedor, @idtipo,@idproductosunat,@idgrupo)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddTalla",
    "Content": "CREATE proc [dbo].[SpAddTalla]@id int,@descripcion varchar(50)asif @id = 0begin\t\tinsert into mst_Talla (descripcion)\tvalues(@descripcion)\tselect CAST(SCOPE_IDENTITY() as int)endelsebegin\tupdate mst_Talla set descripcion = @descripcion\twhere id = @id\tselect @idend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetTransportista",
    "Content": "CREATE proc [dbo].[spGetTransportista]asselect t.id Id,td.Id 'IdDocumento',td.descripcion 'Documento',DniRuc 'Numero',Nombre,Telefono,Licencia,Direccionfrom mst_Transportistas tinner join mst_TipoDocumento td on t.CodidoTipoDoc = td.codigoSunatwhere t.Estado = 1 and t.Flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_guardar_almacen_movimiento",
    "Content": "CREATE proc [dbo].[sp_guardar_almacen_movimiento]@documento varchar(250),@fecha datetime,@referencia varchar(250),@entrada bit,@ajuste bit,@direccion varchar(250),@credito bit,@idalmacen int,@idvendedor int,@idproveedor int,@idcliente int,@id bigint,@salida bit,@clasificadorId int,@idApertura int,@idUsuario int,@idCaja int asif @id = 0begindeclare @serie varchar(10), @numero intif @ajuste = 1 BEGIN set @numero = (select top 1 numero from mst_almacen_movimiento where ajuste = 1 order by id desc) set @serie = 'A' ENDelse if @entrada = 1 BEGIN set @numero = (select top 1 numero from mst_almacen_movimiento where entrada = 1 order by id desc) SET\t@serie = 'E'  ENDelse BEGIN set @numero = (select top 1 numero from mst_almacen_movimiento where salida = 1 order by id desc) SET @serie = 'S' END--SET @numero = ISNULL(@numero, 0)set @numero = @numero + 1insert into mst_almacen_movimiento (documento, fecha, referencia, entrada, ajuste,direccion,credito,idAlmacen, idCliente,idvendedor,idProveedor, salida, serie, numero, clasificadorId, IdApertura, idUsuario, idCaja)values(@documento, @fecha, @referencia, @entrada, @ajuste, @direccion, @credito,@idalmacen, @idcliente, @idvendedor, @idproveedor, @salida, @serie, @numero, @clasificadorId, @idApertura, @idUsuario, @idCaja)select SCOPE_IDENTITY() as 'id';endelsebegindeclare @total decimal(9,3) = (select SUM(total) from mst_almacen_movimiento_detalle where almacen_movimiento_id = @id and estado = 1 and flag = 1)declare @importePagado decimal(9,3)if @credito = 0BEGIN\tset @importePagado = @totalendupdate mst_almacen_movimiento set documento = @documento, fecha = @fecha,referencia = @referencia, entrada = @entrada, ajuste = @ajuste, direccion = @direccion,credito = @credito, idAlmacen = @idalmacen, idCliente=@idcliente, idvendedor = @idvendedor,idProveedor = @idproveedor, total = @total, salida = @salida, clasificadorId = @clasificadorId,importe_pagado = @importePagadowhere id = @idselect @id as 'id'end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarProductoDetalle",
    "Content": "--select * from TablaProductoDetalle--insert into tablaProductoDetalle(idProducto,idTalla,idColores,codigoBarra,imagenProducto,usuariocrea,fechacrea, usuariomodifica, fechaModifica, estado,flag)--values(0,0,0,'',null,'','','','',0,0);--insertarCREATE proc [dbo].[spInsertarProductoDetalle]@idproducto int,@Idtalla int,@Idcolor int,@descripcion varchar(100),@codigobarra varchar(50),@imagen image,@usuariocrea varchar(50),@stockinicial numeric(18,2),@stockminimo numeric(18,2),@fechavencimiento date,@idmedida int,@bit bit,@estado bit,@check_stock bitasif(@bit = 0)insert into mst_ProductoDetalle(idProducto, idTalla, idColores,descripcion, codigoBarra, imagenProducto, usuarioCrea,stockinicial,stockminimo,fechavencimiento, idmedida,estado, checkStock)values((@idproducto),@Idtalla,@Idcolor,@descripcion, @codigobarra,@imagen,@usuariocrea,@stockinicial,@stockminimo,@fechavencimiento,@idmedida,@estado, @check_stock)elseinsert into mst_ProductoDetalle(idProducto, idTalla, idColores,descripcion, codigoBarra, imagenProducto, usuarioCrea,stockinicial,stockminimo,fechavencimiento, idmedida,estado, checkStock)values((@idproducto),@Idtalla,@Idcolor,@descripcion, @codigobarra,@imagen,@usuariocrea,@stockinicial,@stockminimo,@fechavencimiento,@idmedida,@estado,@check_stock)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpDeleteTalla",
    "Content": "CREATE proc [dbo].[SpDeleteTalla]@id intasupdate mst_Talla set estado=0, flag =0where id =@id"
  },
  {
    "Type": "VIEW",
    "Name": "ViewProductoVenta",
    "Content": "CREATE view [dbo].[ViewProductoVenta]asselectp.Id as 'IdProducto',pd.Id as 'IdProductoDetalle',pp.Id as 'IdProductoPresentacion',ISNULL(pp.Codigo, '') as 'CodigoBarra',pd.codigoBarra as 'CodigoBarraDetalle',CONCAT(p.nombreProducto, ' ', pd.descripcion, ' ', LTRIM(mmm.descripcion), LTRIM(mm.nombreMarca), '', LTRIM(t.descripcion), ' ', LTRIM(c.descripcion))as 'NombreProducto',um.id 'IdUnidad',LTRIM(um.nombreUnidad) 'UnidadMedida',um.factor Factor,pro.nombre Proveedor,stock.saldo 'Stock',fechavencimiento as 'FechaVence',CAST(pp.precioUnitario as decimal(18,2)) 'Precio',stock.IdAlmacen 'IdAlmacen',pp.principal 'IsPrincipal',pd.checkstock 'CheckStock'from mst_Producto p inner join mst_ProductoDetalle pd on p.Id = pd.idProductoinner join mst_ProductoPresentacion pp on pd.Id=  pp.idProductosDetalleinner join mst_Marca mm on p.idMarca = mm.Idinner join mst_Talla t on pd.idTalla = t.Idinner join mst_Color c on pd.idColores = c.Idinner join mst_UnidadMedida um on pp.idUnidad = um.Idinner join mst_Medidas mmm on pd.idmedida = mmm.idinner join mst_Proveedor pro on p.idproveedor = pro.idinner join stocks_acumulados stock on pd.id = stock.idproductowhere p.flag = 1 and p.estado = 1and pd.flag = 1 and pd.estado = 1and pp.flag = 1 and pp.estado = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpReporteProductosPorPedir",
    "Content": "CREATE proc [dbo].[SpReporteProductosPorPedir]@id_almacen intasSELECT s.IdAlmacen,a.Nombre, g.Descripcion as Grupo,pd.codigoBarra,g.descripcion,RTRIM((p.nombreProducto + ' ' + me.descripcion + ' '+ m.nombreMarca + ' ' + pd.descripcion)) as nombreProducto,u.nombreUnidad,m.nombreMarca,me.descripcion,(s.Saldo/u.factor) as Stock,pd.stockminimo as stockactual,(pd.stockactual-(s.Saldo/u.factor)) as ProductosAPedir,pd.descripcion,pd.fechavencimiento,pp.precioUnitarioFROM mst_ProductoPresentacion ppINNER JOIN mst_ProductoDetalle pd ON pd.Id = pp.idProductosDetalleINNER JOIN mst_Producto p ON p.Id = pd.idProductoINNER JOIN mst_UnidadMedida u ON u.Id = pp.idUnidadINNER JOIN mst_Grupo g ON g.Id = IdGrupoINNER JOIN mst_Marca m ON m.Id = p.idMarcaINNER JOIN mst_Medidas me ON me.Id = pd.idmedidaINNER JOIN Stocks_Acumulados s ON s.IdProducto = pd.IdINNER JOIN mst_Almacen a ON a.Id = s.IdAlmacenWHERE --p.IdGrupo = @idGrupo and s.IdAlmacen = @idAlmacen and(pp.Principal = 1 AND pp.estado = 1 AND pp.flag = 1) AND--\t(pp.PrincipalAlmacen = 1 AND pp.estado = 1 AND pp.flag = 1) AND(pd.estado = 1 AND pd.flag = 1) AND (p.estado = 1 AND p.flag = 1) AND s.IdAlmacen = 2AND (s.Saldo/u.factor) <= pd.stockminimo AND (pd.stockactual-(s.Saldo/u.factor))>0ORDER BY RTRIM((p.nombreProducto + ' ' + pd.descripcion + ' '+ m.nombreMarca + ' ' + me.descripcion)) ASC"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarCompraDetalle",
    "Content": "CREATE proc [dbo].[spEliminarCompraDetalle]@id intasupdate mst_ComprasDetalles set Estado = 0, Flag = 0where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarProductoPresentacion",
    "Content": "CREATE proc [dbo].[spInsertarProductoPresentacion]@idproductodetalle int,@IdUnidad int,@preciounitario money,@usuariocrea varchar(50),@principal bit,@principalAlmacen bit = 0,@codigoBarraPresentacion VARCHAR(100),@verEnVentas bitasinsert into mst_ProductoPresentacion (idProductosDetalle, idUnidad,precioUnitario, usuarioCrea,Principal, PrincipalAlmacen, Codigo, VerEnVentas)values(@idproductodetalle, @IdUnidad,@preciounitario, @usuariocrea,@principal, @principalAlmacen, @codigoBarraPresentacion, @verEnVentas)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetReporteRequerimiento",
    "Content": "CREATE proc [dbo].[SpGetReporteRequerimiento]@numApertura int,@idCaja int,@idUsuario intas\t\tSELECT NumApertura,Fecha,SUM(Cant) AS Cant,UMedida,Descripcion,grupo FROM (\t\tSELECT \t\tg.Numero as 'NumApertura',\t\tCAST(g.Fecha AS DATE) as Fecha,\t\tb.Cantidad as Cant,\t\tum.nombreUnidad as UMedida,\t\t(p.nombreProducto + ' ' + pd.descripcion + ' ' + mmm.descripcion + ' ' +\tmm.nombreMarca + ' ' + \t\tt.descripcion+' '+ \tc.descripcion)  as 'Descripcion',\t\tgr.descripcion as grupo\t\tFROM mst_Venta a\t\tINNER JOIN mst_Venta_det b ON a.Id=b.IdVenta\t\tinner join mst_ProductoPresentacion pp on pp.Id= b.IdProducto\t\tinner join mst_ProductoDetalle pd on pd.Id = pp.IdProductosDetalle\t\tinner join mst_Producto p on p.Id = pd.IdProducto\t\tinner join mst_Marca mm on p.idMarca = mm.Id\t\tinner join mst_Talla t on pd.idTalla = t.Id\t\tinner join mst_Color c on pd.idColores = c.Id\t\tinner join mst_UnidadMedida um on pp.idUnidad = um.Id\t\tinner join mst_Medidas mmm on pd.idmedida = mmm.id\t\tinner join mst_Proveedor ppp on p.idproveedor = ppp.id\t\tinner join mst_Grupo gr on p.IdGrupo = gr.Id\t\tINNER JOIN mst_Apertura g ON g.Numero=a.IdApertura and g.IdUsuario = a.IdUsuario and g.IdCaja = a.IdCaja\t\tWHERE g.Numero = @numApertura and a.IdCaja = @idCaja and a.IdUsuario = @idUsuario\t\tand a.anulado = 0) as tmp\t\tGROUP BY NumApertura,Fecha,Descripcion,UMedida,grupo"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetTipoUsuarioById",
    "Content": "CREATE proc [dbo].[SpGetTipoUsuarioById]@id intasselect * from mst_TipoUsuariowhere id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarSerie",
    "Content": "CREATE proc [dbo].[spInsertarSerie]@serie varchar(50),@usuariocrea varchar(50)asinsert into mst_Serie (Serie,Usuariocrea,FechaCrea,Estado,Flag)values(@serie,@usuariocrea,GETDATE(),1,1)"
  },
  {
    "Type": "SQL_SCALAR_FUNCTION",
    "Name": "fn_ConvertirNumeroLetra",
    "Content": " CREATE FUNCTION [dbo].[fn_ConvertirNumeroLetra] (        @Numero     NUMERIC(18, 2),        @Moneda     VARCHAR(100) ) RETURNS VARCHAR(512) AS BEGIN        DECLARE @lnEntero       INT,                @lcRetorno      VARCHAR(512),                @lnTerna        INT,                @lcMiles        VARCHAR(512),                @lcCadena       VARCHAR(512),                @lnUnidades     INT,                @lnDecenas      INT,                @lnCentenas     INT,                @lnFraccion     INT,                @resultado      AS VARCHAR(512)               SELECT @lnEntero = CAST(@Numero AS INT),               @lnFraccion     = (@Numero - @lnEntero) * 100,               @lcRetorno      = '',               @lnTerna        = 1               WHILE @lnEntero > 0        BEGIN            /* WHILE */            -- Recorro terna por terna                  SELECT @lcCadena = ''                      SELECT @lnUnidades = @lnEntero % 10                        SELECT @lnEntero = CAST(@lnEntero / 10 AS INT)                      SELECT @lnDecenas = @lnEntero % 10                  SELECT @lnEntero = CAST(@lnEntero / 10 AS INT)                      SELECT @lnCentenas = @lnEntero % 10                        SELECT @lnEntero = CAST(@lnEntero / 10 AS INT)            -- Analizo las unidades                    SELECT @lcCadena = CASE /* UNIDADES */                                    WHEN @lnUnidades = 1 AND @lnTerna = 1 THEN                                         'UNO ' + @lcCadena                                    WHEN @lnUnidades = 1 AND @lnTerna <> 1 THEN                                         'UN ' + @lcCadena                                    WHEN @lnUnidades = 2 THEN 'DOS ' + @lcCadena                                    WHEN @lnUnidades = 3 THEN 'TRES ' + @lcCadena                                    WHEN @lnUnidades = 4 THEN 'CUATRO ' + @lcCadena                                    WHEN @lnUnidades = 5 THEN 'CINCO ' + @lcCadena                                    WHEN @lnUnidades = 6 THEN 'SEIS ' + @lcCadena                                    WHEN @lnUnidades = 7 THEN 'SIETE ' + @lcCadena                                    WHEN @lnUnidades = 8 THEN 'OCHO ' + @lcCadena                                    WHEN @lnUnidades = 9 THEN 'NUEVE ' + @lcCadena                                    ELSE @lcCadena                               END /* UNIDADES */            -- Analizo las decenas            SELECT @lcCadena = CASE /* DECENAS */                                    WHEN @lnDecenas = 1 THEN CASE @lnUnidades                                                                  WHEN 0 THEN                                                                       'DIEZ '                                                                  WHEN 1 THEN                                                                       'ONCE '                                                                  WHEN 2 THEN                                                                       'DOCE '                                                                  WHEN 3 THEN                                                                       'TRECE '                                                                  WHEN 4 THEN                                                                       'CATORCE '                                                                  WHEN 5 THEN                                                                       'QUINCE '                                                                  ELSE 'DIECI' + @lcCadena                                                             END                                    WHEN @lnDecenas = 2 AND @lnUnidades = 0 THEN                                         'VEINTE ' + @lcCadena                                    WHEN @lnDecenas = 2 AND @lnUnidades <> 0 THEN                                         'VEINTI' + @lcCadena                                    WHEN @lnDecenas = 3 AND @lnUnidades = 0 THEN                                         'TREINTA ' + @lcCadena                                    WHEN @lnDecenas = 3 AND @lnUnidades <> 0 THEN                                         'TREINTA Y ' + @lcCadena                                    WHEN @lnDecenas = 4 AND @lnUnidades = 0 THEN                                         'CUARENTA ' + @lcCadena                                    WHEN @lnDecenas = 4 AND @lnUnidades <> 0 THEN                                         'CUARENTA Y ' + @lcCadena                                    WHEN @lnDecenas = 5 AND @lnUnidades = 0 THEN                                         'CINCUENTA ' + @lcCadena                                    WHEN @lnDecenas = 5 AND @lnUnidades <> 0 THEN                                         'CINCUENTA Y ' + @lcCadena                                    WHEN @lnDecenas = 6 AND @lnUnidades = 0 THEN                                         'SESENTA ' + @lcCadena                                    WHEN @lnDecenas = 6 AND @lnUnidades <> 0 THEN                                         'SESENTA Y ' + @lcCadena                                    WHEN @lnDecenas = 7 AND @lnUnidades = 0 THEN                                         'SETENTA ' + @lcCadena                                    WHEN @lnDecenas = 7 AND @lnUnidades <> 0 THEN                                         'SETENTA Y ' + @lcCadena                                    WHEN @lnDecenas = 8 AND @lnUnidades = 0 THEN                                         'OCHENTA ' + @lcCadena                                    WHEN @lnDecenas = 8 AND @lnUnidades <> 0 THEN                                         'OCHENTA Y ' + @lcCadena                                    WHEN @lnDecenas = 9 AND @lnUnidades = 0 THEN                                         'NOVENTA ' + @lcCadena                                    WHEN @lnDecenas = 9 AND @lnUnidades <> 0 THEN                                         'NOVENTA Y ' + @lcCadena                                    ELSE @lcCadena                               END /* DECENAS */            -- Analizo las centenas                    SELECT @lcCadena = CASE /* CENTENAS */                                    WHEN @lnCentenas = 1 AND @lnUnidades = 0 AND @lnDecenas                                         = 0 THEN 'CIEN ' +                                                                                  @lcCadena                                    WHEN @lnCentenas = 1 AND NOT(@lnUnidades = 0 AND @lnDecenas = 0) THEN                                         'CIENTO ' + @lcCadena                                    WHEN @lnCentenas = 2 THEN 'DOSCIENTOS ' + @lcCadena                                    WHEN @lnCentenas = 3 THEN 'TRESCIENTOS ' + @lcCadena                                    WHEN @lnCentenas = 4 THEN 'CUATROCIENTOS ' + @lcCadena                                    WHEN @lnCentenas = 5 THEN 'QUINIENTOS ' + @lcCadena                                    WHEN @lnCentenas = 6 THEN 'SEISCIENTOS ' + @lcCadena                                    WHEN @lnCentenas = 7 THEN 'SETECIENTOS ' + @lcCadena                                    WHEN @lnCentenas = 8 THEN 'OCHOCIENTOS ' + @lcCadena                                    WHEN @lnCentenas = 9 THEN 'NOVECIENTOS ' + @lcCadena                                    ELSE @lcCadena                               END /* CENTENAS */            -- Analizo la terna                       SELECT @lcCadena = CASE /* TERNA */                                    WHEN @lnTerna = 1 THEN @lcCadena                                    WHEN @lnTerna = 2 AND (@lnUnidades + @lnDecenas + @lnCentenas <> 0) THEN                                         @lcCadena + ' MIL '                                    WHEN @lnTerna = 3 AND (@lnUnidades + @lnDecenas + @lnCentenas <> 0)                                         AND                                                                                  @lnUnidades = 1 AND @lnDecenas = 0 AND @lnCentenas                                         = 0 THEN @lcCadena + 'MILLON '                                    WHEN @lnTerna = 3 AND (@lnUnidades + @lnDecenas + @lnCentenas <> 0)                                         AND                                         NOT (@lnUnidades = 1 AND @lnDecenas = 0 AND @lnCentenas = 0) THEN                                         @lcCadena                                         + ' MILLONES '                                    WHEN @lnTerna = 4 AND (@lnUnidades + @lnDecenas + @lnCentenas <> 0) THEN                                         @lcCadena + ' MIL MILLONES '                                    ELSE ''                               END /* TERNA */            -- Armo el retorno terna a terna                    SELECT @lcRetorno = @lcCadena + @lcRetorno                  SELECT @lnTerna = @lnTerna + 1        END /* WHILE */                IF @lnTerna = 1            SELECT @lcRetorno = 'CERO'               SELECT @resultado = RTRIM(@lcRetorno) + ' CON ' + LTRIM(STR(@lnFraccion, 2))               + '/100 ' + @Moneda               RETURN @resultado END"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetUsuarioPorPagarComision",
    "Content": "CREATE proc [dbo].[SpGetUsuarioPorPagarComision]asselect distinct u.Id,u.idtipoUsuario 'IdTipoUsuario',u.nombre 'Nombre',u.Dni,u.Direccion,u.telefono 'Telefono',u.usuario 'Usuario',u.is_cobrador 'IsCobrador',u.verVentas 'VerVentas',u.DocVentaDefectofrom Comision cinner join mst_Usuarios u on c.IdUsuario = u.Id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpStockActualizarAlEliminarItemVenta",
    "Content": "CREATE procedure [dbo].[SpStockActualizarAlEliminarItemVenta]@id intasdeclare @total money, @idproduct int, @idalmacen intset @idalmacen = (select top 1 v.IdAlmacen from mst_Venta_det vd inner join mst_Venta v on vd.IdVenta = v.Id where vd.Id = @id)declare Lista cursorfor(select temp.tot, temp.idproducto from(select (vd.Cantidad * vd.Factor) tot, pp.idProductosDetalle as 'idproducto' from mst_Venta_det vdinner join mst_ProductoPresentacion pp on vd.IdProducto = pp.Idwhere vd.Id = @id and vd.Anulado  = 1)as temp)for updateopen ListaFETCH Lista INTO @total,@idproductWHILE (@@FETCH_STATUS = 0)BEGIN      UPDATE Stocks_Acumulados SET Salidas=(Salidas - @total),Saldo=(Saldo + @total)   WHERE IdProducto=@idproduct and IdAlmacen=@IdAlmacen      --print @total   --print @idventadetalle   delete from mst_Venta_det where id = @id-- LECTURA DE LA SIGUIENTE FILA DEL CURSOR   FETCH Lista INTO @total,@idproductEND-- CIERRE DEL CURSORCLOSE Lista-- LIBERAR LOS RECURSOSDEALLOCATE Lista"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetVentaForControlTransportista",
    "Content": "CREATE proc [dbo].[spGetVentaForControlTransportista]@fecha dateasSELECT top 50Id,CASE IdDocumentowhen '03' then 'BOLETA'WHEN '01' THEN 'FACTURA'WHEN '07' THEN 'NOTA DE CREDITO'WHEN '08' THEN 'NOTA DE DEBITO'end TipoDocumento,CONCAT(SerieDoc, '-', NumeroDoc) Documento,FechaEmision,TotalVenta,IdUsuarioFROM mst_Ventawhere Anulado = 0 and CAST(FechaEmision as date) = @fechaorder by id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spPreVenta_Detalle_Modificar_Contacto",
    "Content": "CREATE proc [dbo].[spPreVenta_Detalle_Modificar_Contacto]@id int,@idproducto int,@descripcion  varchar(200),@codigobarra varchar(50),@umedida varchar(50),@cantidad money,@precio money,@subtotal money,@descuento money,@factor decimal,@idunidad int,@igv money,@total money,@idpiso int,@adicional1 text,@adicional2 date,@adicional3 varchar(200),@adicional4 varchar(200),@igv_incluido bit,@esconvenio bit,@isCodBarraBusqueda bit = 1asdeclare @subtotalBD money = (@cantidad * @precio)declare @totalBD MONEY = ((@CANTIDAD * @PRECIO) + @IGV) - @DESCUENTOif(@esconvenio = 0)\tbegin\t\tupdate tabla_Pre_Venta_Detalle set\t\tIdProducto = @idproducto,\t\tDescripcion = @descripcion,\t\tCodigoBarra = @codigobarra,\t\tUMedida = @umedida,\t\tCantidad = @cantidad,\t\tPrecio = @precio,\t\tSubtotal = @subtotalBD,\t\tDescuento = @descuento,\t\tFactor = @factor,\t\tidunidad = @idunidad,\t\tigv = @igv,\t\ttotal = @totalBD,\t\tadicional1 = @adicional1,\t\tadicional2 = @adicional2,\t\tadicional3 = @adicional3,\t\tAdicional4 = @adicional4,\t\tigv_incluido = @igv_incluido,\t\tIsCodBarraBusqueda = @isCodBarraBusqueda\t\twhere Id = @id and IdPiso = @idpiso\tendelse\tbegin\t\tupdate tabla_Pre_Venta_Detalle_Convenio set\t\tIdProducto = @idproducto,\t\tDescripcion = @descripcion,\t\tCodigoBarra = @codigobarra,\t\tUMedida = @umedida,\t\tCantidad = @cantidad,\t\tPrecio = @precio,\t\tSubtotal = @subtotalBD,\t\tDescuento = @descuento,\t\tFactor = @factor,\t\tidunidad = @idunidad,\t\tigv = @igv,\t\ttotal = @totalBD,\t\tadicional1 = @adicional1,\t\tadicional2 = @adicional2,\t\tadicional3 = @adicional3,\t\tAdicional4 = @adicional4,\t\tigv_incluido = @igv_incluido\t\t \t\twhere Id = @id and IdPiso = @idpiso\tend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarTalla",
    "Content": "---------------------------insertarCREATE proc [dbo].[spInsertarTalla]@descripcion varchar(10),@usuarioCrea varchar(50)asinsert into mst_Talla (descripcion, usuarioCrea)values (@descripcion, @usuariocrea)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetRestPisos",
    "Content": "CREATE proc [dbo].[SpGetRestPisos]asselectId,numpiso Piso,cantmesas Mesas,numInicio Iniciofrom tabla_RestPisoswhere Estado = 1order by Piso asc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "InsertarConvenio",
    "Content": "CREATE procedure [dbo].[InsertarConvenio]@id int,@idcliente int,@ruc varchar(11),@razon varchar(250),@direccion text,@contrato varchar(50),@descripcion text,@montolimite money,@fechainicio date,@fechafin date,@usuariocrea varchar(50),@estado bit,@bit bitasif @bit = 0\tbegin\tinsert into mst_convenios (idcliente, ruc, Razon, Direccion, Contrato, Descripcion, MontoLimite, FechaInicio, FechaFin, UsuarioCrea)\tvalues(@idcliente, @ruc, @razon, @direccion, @contrato, @descripcion, @montolimite, @fechainicio, @fechafin, @usuariocrea)\tendelse\tbegin\tupdate mst_convenios \tset idcliente = @idcliente, \tRuc = @ruc, \tRazon = @razon,\tDireccion = @direccion,\tContrato = @contrato,\tDescripcion = @descripcion,\tMontoLimite = @montolimite,\tFechaInicio = @fechainicio,\tFechaFin = @fechafin,\tUsuarioModifica = @usuariocrea,\tFechaModifica = GETDATE(),\tEstado = @estado\twhere Id = @id\tend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarSiTienePecho",
    "Content": "CREATE proc [dbo].[spBuscarSiTienePecho]@id intasdeclare @idtemp int = (select p.Id from mst_ProductoPresentacion pp inner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Idinner join mst_Producto p  on pd.idProducto = p.Idwhere pp.Id = @id)----------------------------------------------------------------------------------select temp.*from(selectpp.Id Id,pd.codigoBarra [Cod_Barra],p.nombreProducto + ' ' + pd.descripcion + ' ' + LTRIM(mmm.descripcion) + ' ' +LTRIM(mm.nombreMarca) + ' ' + LTRIM(t.descripcion)+' '+ LTRIM(c.descripcion) as 'Descripcion',LTRIM(um.nombreUnidad) [U_Medida],um.factor [Factor],pd.imagenproducto Imagen,pro.nombre [Proveedor],stock.saldo [Stock_Actual],iif(CONVERT(varchar,fechavencimiento,103) IS NULL,'Sin definir',cast(fechavencimiento as varchar))[F_Vencimiento],pp.precioUnitario [Precio_Unit],um.id [Id_Unidad]from mst_Producto p inner join mst_ProductoDetalle pd on p.Id = pd.idProductoinner join mst_ProductoPresentacion pp on pd.Id=  pp.idProductosDetalleinner join mst_Marca mm on p.idMarca = mm.Idinner join mst_Talla t on pd.idTalla = t.Idinner join mst_Color c on pd.idColores = c.Idinner join mst_UnidadMedida um on pp.idUnidad = um.Idinner join mst_Medidas mmm on pd.idmedida = mmm.idinner join mst_Proveedor pro on p.idproveedor = pro.idinner join stocks_acumulados stock on pd.id = stock.idproductowhere p.flag = 1 and p.estado = 1and pd.flag = 1 and pd.estado = 1and pp.flag = 1 and pp.estado = 1and p.Id = @idtempand pd.idmedida = 2)as Temp where temp.Descripcion collate Latin1_general_CI_AI like '%' + '' + '%'order by temp.Id asc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spPreVenta_Detalle_Modificar_Mesa",
    "Content": "CREATE proc [dbo].[spPreVenta_Detalle_Modificar_Mesa]@idmesa int,@idcontacto int,@idproducto int,@descripcion  varchar(200),@codigobarra varchar(50),@umedida varchar(50),@cantidad money,@precio money,@subtotal money,@descuento money,@factor decimal,@idunidad intasupdate tabla_Pre_Venta_Detalle setIdProducto = @idproducto,Descripcion = @descripcion,CodigoBarra = @codigobarra,UMedida = @umedida,Cantidad = @cantidad,Precio = @precio,Subtotal = @subtotal,Descuento = @descuento,Factor = @factor,idunidad = @idunidadwhere IdMesa = @idmesa and IdProducto = @idproducto"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarTipoUsuario",
    "Content": "CREATE proc [dbo].[spInsertarTipoUsuario]@descripcion varchar(100),@usuariocrea varchar(50)asinsert into mst_TipoUsuario (descripcion,usuarioCrea,fechaCrea,estado,flag)values(@descripcion,@usuariocrea,getdate(),1,1)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarOses",
    "Content": "CREATE proc [dbo].[spMostrarOses]@numero intasif(@numero = 0)beginselect * from mst_osesendelse beginselect * from mst_oseswhere numose = @numeroend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spCheckDeudaXCliente",
    "Content": "CREATE proc [dbo].[spCheckDeudaXCliente]@idCliente intasdeclare @fecha_primera_deuda date = (select top 1 CAST(FechaEmision as date) fecha from mst_Venta where IdCliente = @idClienteand TotalVenta > ImportePagadoorder by FechaEmision asc) DECLARE @result int = DATEDIFF(day,@fecha_primera_deuda, cast(getdate() as date)) select ISNULL(@result, 0) as 'dias_atrasados'"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetClienteByIdVenta",
    "Content": "CREATE proc [dbo].[SpGetClienteByIdVenta]@idVenta intas    select c.* from mst_Venta m    inner join mst_cliente c on m.IdCliente = c.id    where m.id = @idVenta"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "EliminarConvenio",
    "Content": "CREATE proc [dbo].[EliminarConvenio]@id intasupdate mst_convenios set Estado = 0, Flag = 0where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarUnidadMedida",
    "Content": "--------------------insertar unidad---------CREATE procedure [dbo].[spInsertarUnidadMedida]@nombre varchar(100),@factor decimal(18,2),@usuarioCrea varchar(50)asinsert into mst_UnidadMedida (nombreUnidad,factor, usuarioCrea)values (@nombre, @factor, @usuarioCrea)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetAlmacenTraslado",
    "Content": "CREATE proc [dbo].[SpGetAlmacenTraslado]@dateini date,@datefin date,@text varchar(250)asselect at.id,fecha,descripcion,cerrado,at.estado,at.flag,serie,numero,ass.Id 'IdAlmacenSalida',ass.Nombre 'AlmacenSalidaNombre',ae.Id 'IdAlmacenEntrada',ae.Nombre 'AlmacenEntradaNombe',at.totalfrom mst_almacen_traslado atinner join mst_Almacen ae on at.idAlmacenEntrada = ae.Idinner join mst_Almacen ass on at.idAlmacenSalida = ass.Idwhere CAST(at.fecha as date) between @dateini and @datefinand (ae.Nombre like CONCAT('%',@text,'%') or ass.Nombre like CONCAT('%',@text,'%'))order by id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spAddAlmacen",
    "Content": "CREATE proc [dbo].[spAddAlmacen]@id int,@nombre varchar(250),@ususarioCrea varchar(50),@usuarioModifica varchar(50)asif @id = 0begin\tinsert into almacen (nombre, usuarioCrea)\tvalues(@nombre, @ususarioCrea)\tselect CAST(SCOPE_IDENTITY() as int)endelsebegin\tupdate almacen set nombre = @nombre, usuarioModifica = @usuarioModifica\twhere id = @id\tselect CAST(@id as int)end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarUsuario",
    "Content": "CREATE proc [dbo].[spInsertarUsuario]@idtipousuario int,@nombre varchar(100),@dni varchar(50),@direccion varchar(200),@telefono varchar(100),@usuario varchar(50),@pass varchar(50),@usuariocrea varchar(50),@correo varchar(200),@foto image,@docVentaDefecto VARCHAR(2)asinsert into mst_Usuarios (idtipoUsuario,nombre,dni,direccion,telefono,usuario,pass,usuarioCrea,fechaCrea,estado,flag,correo,Foto,DocVentaDefecto)values(@idtipousuario,@nombre,@dni,@direccion,@telefono,@usuario,@pass,@usuariocrea,GETDATE(),1,1,@correo,@foto,@docVentaDefecto)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetMedidaById",
    "Content": "CREATE proc [dbo].[SpGetMedidaById]@id intasselectId,descripcionfrom mst_Medidaswhere Estado = 1 and Flag =1 and id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMotivos",
    "Content": "CREATE proc [dbo].[spMotivos]@id char(2)asselectCodigo id,Descripcion descripcionfrom mst_motivo_ncwhere iddoc = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetAlmacenTrasladoById",
    "Content": "CREATE proc [dbo].[SpGetAlmacenTrasladoById]@id intasselect at.id,fecha,descripcion,cerrado,at.estado,at.flag,serie,numero,ae.Id 'IdAlmacenEntrada',ae.Nombre 'AlmacenEntradaNombe',ass.Id 'IdAlmacenSalida',ass.Nombre 'AlmacenSalidaNombre',at.totalfrom mst_almacen_traslado atinner join mst_Almacen ae on at.idAlmacenEntrada = ae.Idinner join mst_Almacen ass on at.idAlmacenSalida = ass.Idwhere at.id = @idorder by id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarSotckItem",
    "Content": "CREATE proc [dbo].[spInsertarSotckItem]@id int,@idalmacen intasinsert into Stocks_Acumulados (IdAlmacen, IdProducto, Entradas,Salidas,Saldo,Fecha_Crea,Usuario_Crea)values(@idalmacen,@id,0,0,0,GETDATE(),'Admin')"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spAddVentaCronograma",
    "Content": "CREATE proc [dbo].[spAddVentaCronograma]@id int,@fecha date,@idVenta int,@nroCuota int,@monto floatasif @id = 0begin\tinsert into venta_cronograma (fecha, idVenta, nroCuota, monto)\tvalues(@fecha, @idVenta, @nroCuota, @monto)\tselect cast(SCOPE_IDENTITY() as int);endelsebegin\tupdate venta_cronograma set fecha = @fecha, idVenta = @idVenta, nroCuota = @nroCuota, monto = @monto\twhere id = @id\tselect cast(@id as int);end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spReporteResumenProductos_CierreCaja",
    "Content": "CREATE proc [dbo].[spReporteResumenProductos_CierreCaja]@id int,@idpiso int,@idcaja int,@idusuario intasSELECT \tg.Numero as NumApertura,\tsum(b.Cantidad) as Cant,\tf.nombreProducto,\tSUM(iif(a.anulado=0,b.Total,0.00)) As ImporteTotal\tFROM mst_Venta a\tINNER JOIN mst_Venta_det b ON a.Id=b.IdVenta\tINNER JOIN mst_ProductoPresentacion d ON d.Id=b.IdProducto\tINNER JOIN mst_ProductoDetalle e ON e.Id=d.idProductosDetalle\tINNER JOIN mst_Producto f ON f.Id=e.idProducto\tINNER JOIN mst_Apertura g ON g.Numero=a.IdApertura\tWHERE g.Numero = @id and a.IdCaja = @idcaja and a.IdUsuario = @idusuario\tGROUP BY g.Numero,f.nombreProducto"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarVenta",
    "Content": "CREATE proc [dbo].[spInsertarVenta]@codigoDoc char(2),@seriedoc char(4),@numerodoc int,@idcliente int,@codigotipodocsunat int,@dniruc varchar(20),@razonsocial varchar(200),@direccion varchar(200),@email varchar(200),@observacion text,@codigotiponotcredito char(2),@descripcionnotacred varchar(50),@codigodocafectado char(2),@numerodocafectado varchar(50),@usuariocrea varchar(50),@idformapago int,@idusuariopreventa int,@descuento money,@idapertura int,@idcaja int,@importepagado money,@totalletras text,@Hassh varchar(max),@idalmacen int,@idpiso int,@idmesa int,@idusuario int,@tipomoneda varchar(10),@tipooperacion varchar(4),@adicional varchar(250),@beneficiario varchar(250),@idconvenio int,@idparentesco intasinsert into mst_Venta(IdDocumento,SerieDoc,NumeroDoc,FechaEmision,IdCliente,CodigoTipoDoc,DniRuc,RazonSocial,Direccion,Email,Anulado,Observacion,TipoNotCred,DescripNotCred,TipoDocAfectado,NumeroDocAfectado,UsuarioCrea,FechaCrea,IdFormaPago,IdUsuarioPreventa,Descuento,IdApertura,idcaja, importepagado, total_letras, hassh, IdAlmacen,IdGuia, idpiso,IdMesa,idusuario, TipoMoneda, tipo_operacion, Adicional, Beneficiario, IdConvenio, IdParentesco)values(@codigoDoc,@serieDoc,@numeroDoc,GETDATE(),@idcliente,@codigoTipoDocSunat,@dniRuc,@RazonSocial,@direccion,@email,0,@observacion,@codigotiponotcredito,@descripcionnotacred,@codigodocafectado,@numerodocafectado,@usuariocrea,GETDATE(),@idformapago,@idusuariopreventa,@descuento,@idapertura,@idcaja,@importepagado,@totalletras,@Hassh,@idalmacen,0,@idpiso,@idmesa,@idusuario,@tipomoneda,@tipooperacion, @adicional, @beneficiario, @idconvenio, @idparentesco)declare @id_despues intset @id_despues = SCOPE_IDENTITY();select @id_despues as 'id'SET NOCOUNT ONif CAST(@observacion as varchar) <> ''begindeclare @id int = (select id from mst_almacen_movimiento where serie+'-'+CAST(numero as varchar)=CAST(@observacion AS varchar))update mst_almacen_movimiento set doc_facturado = @seriedoc + '-' + CAST(@numerodoc AS varchar)where id = @idend--declare @idventa  int = (select MAX(id) FROM mst_Venta)--exec spInsertarVenta_ext @idventa,@seriedoc,@numerodoc,@idpiso,@idmesa,@idapertura,@importepagado"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetStock",
    "Content": "CREATE proc [dbo].[SpGetStock]@idProductoDetalle int,@idUnidad intasdeclare @factor money = (select factor from mst_UnidadMedida where Id = @idUnidad)select a.Nombre,(Saldo / @factor) saldo, s.IdProducto, pd.checkStock from Stocks_Acumulados sinner join mst_Almacen a on s.IdAlmacen = a.Idinner join mst_ProductoDetalle pd on s.IdProducto = pd.Idwhere s.IdProducto = @idProductoDetalle"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetCliente",
    "Content": "CREATE proc [dbo].[SpGetCliente]@text varchar(max)asselect top 20c.Id,idDocumento 'IdDocumento',td.descripcion 'Documento',numeroDocumento 'NumeroDocumento',razonSocial 'RazonSocial',cd.Direccion 'Direccion',telefono 'Telefono',correo 'Correo',ISNULL(delivery, 0) 'Delivery',ISNULL(nacionalidad, 1) 'Nacionalidad',DefaultPago 'DefaultPago'from mst_Cliente c inner join mst_TipoDocumento td on c.idDocumento = td.codigoSunatinner join mst_Cliente_Direccion cd on c.Id = cd.IdClientewhere CONCAT(razonSocial, ' ', numeroDocumento, '') like CONCAT('%',@text,'%')and c.estado = 1 and c.flag = 1and cd.Principal = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddMedida",
    "Content": "CREATE proc [dbo].[SpAddMedida]@id int,@descripcion varchar(50)asif @id = 0begin\tinsert into mst_Medidas(descripcion)\tvalues(@descripcion)\tselect CAST(SCOPE_IDENTITY() as int)endelsebegin\tupdate mst_Medidas set descripcion = @descripcion\twhere id = @id\tselect @idend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetAlmacenTrasladoDetalle",
    "Content": "CREATE proc [dbo].[SpGetAlmacenTrasladoDetalle]@idAlmacenTraslado intasselectid,idProducto,nombreProducto,idUnidad,nombreUnidad,factor,cantidad,estado,flag,almacen_traslado_id 'IdAlmacenTraslado',precio,totalfrom mst_almacen_traslado_detallewhere almacen_traslado_id = @idAlmacenTrasladoand Estado =1 and Flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spReporteResumenVendedor_CierreCaja",
    "Content": " CREATE proc [dbo].[spReporteResumenVendedor_CierreCaja]@id int,@idpiso int,@idcaja int,@idusuario intasSELECT u.usuario,SUM(v.TotalVenta) AS TotalVenta FROM mst_Venta vINNER JOIN mst_Usuarios uON v.IdUsuarioPreVenta = u.IdWHERE v.IdApertura = @id and v.IdCaja = @idcaja and v.IdUsuario = @idusuario GROUP BY u.usuario"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetAuditoriaById",
    "Content": "CREATE proc [dbo].[SpGetAuditoriaById]@id intasselectid,CONCAT(Serie, '-', Numero) 'serie',Fecha,Usuario,FechaModifica,UsuarioModificafrom Auditoriawhere id = @idorder by id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarVentaDetalle",
    "Content": "-------------------------------ahora los detallesCREATE proc [dbo].[spInsertarVentaDetalle]@idproducto int,@preciounitario money,@idventa int,@cantidad money,@descuento money,@idunidad int,@factor decimal,@subtotal money,@igv money,@total money,@descripcion text,@adicional1 text,@adicional2 date,@adicional3 varchar(200),@adicional4 varchar(200),@codbarra varchar(100),@igv_incluido bit,@isCodBarraBusqueda bit = 0asinsert into mst_Venta_det(IdProducto,PrecioUnit,idventa,Flag,anulado,cantidad,Descuento,IdUnidad,Factor,Subtotal, igv,total,descripcion,Adicional1,Adicional2,Adicional3,Adicional4, codigoBarra, igv_incluido, IsCodBarraBusqueda)values(@idproducto,@preciounitario,@idventa,1,0,@cantidad,@descuento,@idunidad,@factor,@subtotal,@igv,@total,@descripcion,@adicional1,@adicional2,@adicional3,@adicional4,@codbarra, @igv_incluido, @isCodBarraBusqueda)declare @idalmacen int = (select idalmacen from mst_Venta where id = @idventa)declare @idproductodet int = (select idProductosDetalle from mst_ProductoPresentacion where Id =  @idproducto)exec spStockActualizarSaldoItem @idalmacen,@idproductodet--declare @iddetalle int = (select max(id) from mst_Venta_det) --exec spInsertarVentaDet_Ext @idventa,@iddetalle,@idproducto,@descripcion,@preciounitario, @cantidad,@totalexec spIngresarOtrosImpuestos_Venta @idventa"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpDeleteMedida",
    "Content": "CREATE proc [dbo].[SpDeleteMedida]@id intasupdate mst_Medidas set estado = 0, flag= 0where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarDuplicidadProducto",
    "Content": "CREATE proc [dbo].[spBuscarDuplicidadProducto]@buscar varchar(100)asselect p.id,nombreproducto + ' ' + nombreMarca Descripcion,p.fechacrea,p.usuarioCrea from mst_Producto pinner join mst_Marca m on p.idMarca = m.Idwhere p.nombreProducto + ' ' + m.nombreMarca = @buscarand p.flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetAuditoriaDetalleByIdAuditoria",
    "Content": "CREATE proc [dbo].[SpGetAuditoriaDetalleByIdAuditoria]@idAuditoria int,@idAlmacen intasselect ad.Id as 'id',ad.AuditoriaId as 'AuditoriaId',ad.IdProducto,p.nombreProducto 'descripcion',um.nombreUnidad 'Unidad',um.Id 'IdUnidad',g.Id 'IdGrupo',g.Descripcion 'grupo',ad.Stock 'Stock',ad.Conteo as 'conteo',ad.Diferencia as 'diferencia',stock.Saldo as 'stockActual',0 as 'diferenciaFinal',pp.Codigo 'CodigoBarra',pp.Id 'IdProductoPresentacion',pp.precioUnitario 'Precio',um.factor 'Factor'from AuditoriaDetalles ad inner join mst_ProductoDetalle pd on ad.IdProducto=pd.Id and pd.estado = 1 and pd.flag = 1inner join mst_ProductoPresentacion pp on pd.idProducto = pp.idProductosDetalle and pp.Principal = 1 and pp.estado = 1 and pp.flag = 1inner join mst_Producto p on pd.idProducto = p.Id and p.estado = 1 and p.flag = 1inner join mst_Grupo g on p.IdGrupo = g.Id inner join mst_UnidadMedida um on ad.IdUnidad = um.Idinner join Stocks_Acumulados stock on ad.IdProducto  = stock.IdProducto and @idAlmacen = stock.IdAlmacenwhere ad.AuditoriaId = @idAuditoria and pp.estado = 1 and pp.flag = 1and pd.estado = 1 and pd.flag = 1 and p.estado = 1 and p.flag = 1and pp.PrincipalAlmacen = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarVentaDetalle2",
    "Content": "CREATE proc [dbo].[spInsertarVentaDetalle2]@idproducto int,@preciounitario money,@idventa int,@cantidad money,@descuento money,@idunidad int,@factor decimal,@subtotal moneyasinsert into mst_Venta_det(IdProducto,PrecioUnit,idventa,Flag,anulado,cantidad,Descuento,IdUnidad,Factor,Subtotal)values(@idproducto,@preciounitario,@idventa,1,0,@cantidad,@descuento,@idunidad,@factor,@subtotal)update mst_Venta setTotalVenta = TotalVenta + @subtotal,Descuento = Descuento + @descuentowhere Id = @idventaupdate tabla_FormaPago set Total = Total + @subtotalwhere IdVenta = @idventadeclare @idalmacen int = (select idalmacen from mst_Venta where id = @idventa)declare @idproductodet int = (select idProductosDetalle from mst_ProductoPresentacion where Id =  @idproducto)exec spStockActualizarSaldoItem @idalmacen,@idproductodetdeclare @iddetalle int = (select max(id) from mst_Venta_det) "
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetTallas",
    "Content": "CREATE proc [dbo].[SpGetTallas]@text VARCHAR(50)asselectId,descripcionfrom mst_Tallawhere Estado = 1 and Flag =1 and descripcion like '%'+@text+'%'"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetBackUpScripts",
    "Content": "CREATE procedure [dbo].[SpGetBackUpScripts]asWITH ROUTINES AS (         SELECT o.type_desc AS Type            ,o.name AS Name            ,m.definition AS Content    FROM sys.sql_modules AS m    INNER JOIN sys.objects AS o        ON m.object_id = o.object_id)SELECT *FROM ROUTINES"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetApertura",
    "Content": "CREATE proc [dbo].[spGetApertura]asselect * from mst_Apertura"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetProgramasEstudio",
    "Content": "CREATE proc [dbo].[SpGetProgramasEstudio]asselect * from ProgramasEstudio"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spLogin",
    "Content": "CREATE proc [dbo].[spLogin]@usuario varchar(50),@contrasenia varchar(50)asselect u.Id,usuario,Foto,tu.descripcion, u.idtipoUsuario from mst_Usuarios uinner join mst_TipoUsuario tu on u.idtipoUsuario = tu.Idwhere usuario = @usuario and pass = @contraseniaand u.estado = 1 and u.flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpFilterMasterProductos",
    "Content": "CREATE proc [dbo].[SpFilterMasterProductos]@text varchar(max),@idGrupo int,@desactivados bit,@idAlmacen int,@cantidad int = 50asselect top (@cantidad)Id,Id_Producto 'IdProducto',IdPresentacion 'IdProductoPresentacion',Cod_Barra 'CodigoBarra',Descripcion 'NombreProducto',U_Medida 'Unidad',Factor,Proveedor,F_Vence 'FechaVence',Precio_Unit 'Precio',Estado,Stock,Grupo,stockminimo 'StockMinimo',dbo.F_GetUltimoCostoProductoDetalle(Id, @idalmacen) as 'Costo'from vw_FiltroMstProductoswhere (Descripcion like '%'+@text+'%' or Cod_Barra like '%'+@text+'%')and idGrupo = CASe @idgrupo when 0 then idGrupo else @idgrupo endand Estado = CASe @desactivados when 0 then 1 else 0 endand IdAlmacen = @idAlmacenorder by Descripcion desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spIrCancelando_Deuda_SeguimientoCompra",
    "Content": "CREATE proc [dbo].[spIrCancelando_Deuda_SeguimientoCompra]@idcompra intasdeclare @monto money, @estado bitset @monto = (select sum(Monto) from tbl_SeguimientoCompra where Flag = 1 and IdCompra = @idcompra)UPDATE tbl_SeguimientoCompra SET validado = 1 WHERE IdCompra = @idcompraset @monto = isnull(@monto, 0)update mst_Compras set ImportePagado = @montowhere Id = @idcompra"
  },
  {
    "Type": "SQL_TABLE_VALUED_FUNCTION",
    "Name": "Split",
    "Content": " CREATE FUNCTION [dbo].[Split](    @Texto VARCHAR(MAX),    @Delimitador CHAR(1))RETURNS @output TABLE(Datos VARCHAR(MAX))BEGIN    DECLARE @Empieza INT, @Termina INT    SELECT @Empieza = 1, @Termina= CHARINDEX(@Delimitador , @Texto )    WHILE @Empieza < LEN(@Texto ) + 1 BEGIN        IF @Termina = 0              SET @Termina = LEN(@Texto ) + 1              INSERT INTO @output (Datos)          VALUES(SUBSTRING(@Texto , @Empieza , @Termina - @Empieza ))        SET @Empieza = @Termina + 1        SET @Termina = CHARINDEX(@Delimitador , @Texto , @Empieza )            END    RETURNEND"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrar_Horario_envio",
    "Content": "CREATE proc [dbo].[spMostrar_Horario_envio]asselect hora_envio from tabla_configuracion_general"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarCliente",
    "Content": "---modificarCREATE procedure [dbo].[spModificarCliente]@idCliente int,@idDocumento int,@numeroDocumento varchar(20),@razonSocial varchar(200),@nombreComercial varchar(200),@estado bit,@telefono varchar(20),@correo varchar(100),@usuarioModifica varchar(50)asif(@idCliente != 1)beginupdate mst_Cliente set idDocumento = @idDocumento, numeroDocumento = @numeroDocumento,razonSocial = @razonSocial,nombreComercial = @nombreComercial,estado = @estado, telefono = @telefono, correo = @correo, usuarioModifica = @usuarioModifica, fechaModifica = GETDATE()where Id = @idClienteend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetTipoDocumento",
    "Content": "CREATE proc [dbo].[SpGetTipoDocumento]asselect * from mst_TipoDocumentowhere estado = 1 and flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpFilterProductoVentas",
    "Content": "CREATE proc [dbo].[SpFilterProductoVentas]@text varchar(100),@idAlmacen int,@idProductoPresentacion int = 0asdeclare @top int = 25if @idProductoPresentacion > 0begin\tset @text = ''\tset @top = 1endselect top (@top)Id, C_Interno 'IdDetalle',IdProducto,Cod_Barra 'CodigoBarra',Descripcion,U_Medida 'Unidad',Factor,Proveedor,Stock_Actual 'StockActual',F_Vencimiento 'FechaVencimiento',Precio_Unit 'Precio',idUnidad 'IdUnidad',IdAlmacen,principal 'Principal'from vw_FiltroProductoswhere idalmacen = @idAlmacen and  (Id = case @idProductoPresentacion when 0 then Id else @idProductoPresentacion end) and (Descripcion like '%'+@text+'%' or @text = Codigo)order by Id, Descripcion, principal desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "ActualizarPedidoConvenio",
    "Content": "CREATE procedure [dbo].[ActualizarPedidoConvenio]@idventa int,@ids_pedidos_convenio varchar(max)asdeclare @id intdeclare temp cursorfor(select * from dbo.split(@ids_pedidos_convenio, ','))open tempfetch temp into @id;while(@@FETCH_STATUS = 0)begin\tupdate tabla_Pre_Venta_Convenio set IdVenta = @idventa, Pagado = 1\twhere IdPedido = @id\tFETCH temp INTO @idendCLOSE tempDEALLOCATE temp"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_reporte_ticket_restaurant",
    "Content": "CREATE proc [dbo].[sp_reporte_ticket_restaurant]@id int,@idpiso intasselect * from(select temp.*,g.Descripcion as [Grupo],g.id as [IdGrupo],iif(temp.IdMesa >= 500,'Para Llevar N° ' + cast(temp.numsecuencia as varchar),'Mesa N° '+ ' ' + cast(temp.IdMesa as varchar)) as 'Mesa',us.nombre as 'Mozo',cast(temp.Descripcion as varchar) + ' ('+g.Descripcion+')' as 'Descripcion_Grupo'from tabla_Pre_Venta_Detalle_Temp tempinner join mst_ProductoPresentacion pp on temp.IdProducto = pp.Idinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Idinner join mst_Producto p on pd.idProducto = p.Idinner join mst_Grupo g on p.IdGrupo = g.Idinner join mst_Usuarios us on temp.IdUsuario = us.Idwhere temp.IdPiso = @idpiso and IdMesa = @idand temp.Pagado = 0and temp.Eliminado = 0) as temporal"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarGuiaVenta",
    "Content": "CREATE proc [dbo].[spInsertarGuiaVenta]@idguia int,@idventa intasupdate mst_Venta set IdGuia = @idguiawhere id = @idventa"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarClienteDireccion",
    "Content": "CREATE proc [dbo].[spModificarClienteDireccion]@id int,@direccion varchar(200),@principal bitasupdate mst_Cliente_Direccion set Principal = 0where id = @idupdate mst_Cliente_Direccion set Principal = @principal,Direccion = @direccionwhere Id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddProveedor",
    "Content": "CREATE proc [dbo].[SpAddProveedor]@id int,@nombre varchar(200),@ruc varchar(20),@direccion varchar(max),@telefono varchar(20),@email varchar(max)asif @id = 0begin\tinsert into mst_Proveedor (nombre, ruc,\tdireccion, telefono, email)\tvalues(@nombre, @ruc, @direccion, @telefono, @email)\tselect CAST(SCOPE_IDENTITY() as int) 'id'endelsebegin\tupdate mst_Proveedor set nombre = @nombre, ruc = @ruc, direccion= @direccion,telefono=@telefono,\temail=@email\twhere id=@id\tselect @id 'id'end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarAnexoEmpresa",
    "Content": "CREATE proc [dbo].[spInsertarAnexoEmpresa]@CodigoAnexo char(4)asupdate tabla_configuracion_general set CodigoAnexo = @CodigoAnexo"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarColor",
    "Content": "--modificarCREATE proc [dbo].[spModificarColor]@id int,@descripcion varchar(10),@estado bit,@usuarioModifica varchar(50)asupdate mst_Color setdescripcion = @descripcion,estado = @estado,usuarioModifica = @usuarioModifica,fechaModifica = getdate()where Id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetTipoProducto",
    "Content": "CREATE proc [dbo].[SpGetTipoProducto]asselectId,Descripcionfrom mst_TipoProductowhere Estado = 1 and Flag =1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spCambiarPresentacionPrincipalAlmacen",
    "Content": "CREATE proc [dbo].[spCambiarPresentacionPrincipalAlmacen]@iddetalle int,@id int,@estado bit,@bit bitasif(@bit =0)beginupdate mst_ProductoPresentacion set PrincipalAlmacen = 0where idProductosDetalle = @iddetalleupdate mst_ProductoPresentacion set PrincipalAlmacen = 1where id = @idend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarPresentacion_by_IdDetalle",
    "Content": "CREATE proc [dbo].[spBuscarPresentacion_by_IdDetalle]@iddetalle int,@idunidad intasselect * from mst_ProductoPresentacionwhere idProductosDetalle = @iddetalle and idUnidad = @idunidad"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "Reporte_Gastos_Operativos_Cierre_Totalizado_por_fecha",
    "Content": "CREATE proc [dbo].[Reporte_Gastos_Operativos_Cierre_Totalizado_por_fecha]@fecha_ini date,@fecha_fin dateasselect g.*, t.Descripcion 'Tipo_de_Gasto' from mst_GastosOperativos ginner join mst_tipoGasto t on g.IdTipoGasto = t.Idwhere cast(g.Fecha  as date) between  @fecha_ini and @fecha_finorder by g.id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sppruebadoblereporte",
    "Content": "CREATE PROC [dbo].[sppruebadoblereporte]@id int,@fechainicio date,@fechafinal dateasselect * from mst_GastosOperativoswhere CAST(Fecha as date) between @fechainicio and @fechafinal"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spValidarManuales",
    "Content": "CREATE proc [dbo].[spValidarManuales]@serie varchar(4),@numero intasselect * from mst_Ventawhere SerieDoc = @serie and NumeroDoc = @numero"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetProductoForAuditoriaDetalles",
    "Content": "CREATE proc [dbo].[SpGetProductoForAuditoriaDetalles]@idAlmacen intasselect0 as 'id',0 as 'AuditoriaId',stock.IdProducto,p.nombreProducto 'descripcion',um.nombreUnidad 'Unidad',um.Id 'IdUnidad',g.Id 'IdGrupo',g.Descripcion 'grupo',stock.Saldo 'Stock',0 as 'conteo',0 as 'diferencia',stock.Saldo as 'stockActual',0 as 'diferenciaFinal',pp.Codigo 'CodigoBarra',pp.Id 'IdProductoPresentacion',pp.precioUnitario 'Precio',um.factor 'Factor'from Stocks_Acumulados stockinner join mst_ProductoDetalle pd on stock.IdProducto = pd.Idinner join mst_ProductoPresentacion pp on pd.Id = pp.Id inner join mst_Producto p on pd.idProducto = p.Idinner join mst_Grupo g on p.IdGrupo = g.Idinner join mst_UnidadMedida um on pp.idUnidad = um.Idwhere IdAlmacen = @idAlmacen and pp.estado = 1 and pp.flag = 1and pd.estado = 1 and pd.flag = 1 and p.estado = 1 and p.flag = 1and pp.PrincipalAlmacen = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarDireccionPrincipal",
    "Content": "CREATE proc [dbo].[spModificarDireccionPrincipal]@iddireccion int,@direccion varchar(100),@referencia varchar(MAX)asupdate mst_Cliente_Direccion set Direccion = @direccion, Referencia = @referenciawhere id = @iddireccion"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetNextNumeroForAlmacenTraslado",
    "Content": "CREATE proc [dbo].[SpGetNextNumeroForAlmacenTraslado]asdeclare @count int = (select COUNT(id) from mst_almacen_traslado)if @count = 0begin\tselect 1endelsebegin\tselect\ttop 1\tISNULL(numero+1, 1) as numero\tfrom mst_almacen_traslado\torder by id descend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spIrCancelando_Deuda_Seguimiento",
    "Content": "-----------------------------CREATE proc [dbo].[spIrCancelando_Deuda_Seguimiento]@idventa intasdeclare @monto money, @estado bitset @monto = (select sum(Monto) from tbl_Seguimiento where Flag = 1 and IdVenta = @idventa and Eliminado = 0)UPDATE tbl_Seguimiento SET validado = 1 WHERE IdVenta = @idventa and Eliminado = 0set @monto = isnull(@monto, 0)update mst_Venta set ImportePagado = @montowhere Id = @idventa"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetStockMinimoProducto",
    "Content": "CREATE proc [dbo].[spGetStockMinimoProducto]@IdDetalle intasSELECT stockminimo FROM mst_ProductoDetalle WHERE Id = @IdDetalle"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spActualizarFechaVentaManual",
    "Content": "CREATE proc [dbo].[spActualizarFechaVentaManual]@id int,@fecha datetimeasupdate mst_Venta set FechaEmision = @fechawhere id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetReporteAlmacenTraslado",
    "Content": "CREATE proc [dbo].[SpGetReporteAlmacenTraslado]@id intasselect--at.id,CASE at.serieWHEN 'T' THEN 'TRASLADO'END DescripDoc,cast(at.fecha as date) as FechaEmision,at.descripcion,at.cerrado,at.estado,at.flag,at.serie,at.numero,--at.idalmacenentrada,ao.nombre as AlmaceEntrada,at.idalmacensalida,asa.nombre as AlmacenSalida,at.total,atd.IdProducto,atd.nombreProducto,atd.idunidad,atd.nombreUnidad,atd.factor,atd.cantidad,atd.estado,atd.flag,--atd.almacen_traslado_id,atd.precio,atd.totalfrom mst_almacen_traslado atinner join mst_almacen_traslado_detalle atd on at.Id = atd.almacen_traslado_idinner join mst_Almacen ao on at.idAlmacenEntrada = ao.Idinner join mst_Almacen asa on at.idAlmacenSalida = asa.Idwhere at.id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarGastosById",
    "Content": "CREATE proc [dbo].[spBuscarGastosById]@id intasselect * from mst_GastosOperativoswhere Id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spVerificarInventarioAbierto",
    "Content": "CREATE proc [dbo].[spVerificarInventarioAbierto]@id intasselect * from mst_Inventario where Id_Almacen = @id and Estado = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarSeguimiento",
    "Content": "--------------------------------------------CREATE PROC [dbo].[spInsertarSeguimiento]@id int,@idventa int,@idtipopago int,@descripcion varchar(100),@monto money,@fechapago date,@usuariocrea varchar(50),@bit bit,@descontar bit,@idApertura int,@idCaja int,@idUsuario intasif(@bit = 0)begininsert into tbl_Seguimiento(IdVenta, IdTipoPago, descripcion, monto, FechaPago, UsuarioCrea, idApertura, idCaja, idUsuario)values(@idventa, @idtipopago, @descripcion, @monto,@fechapago,@usuariocrea, @idApertura, @idCaja, @idUsuario)endelsebeginupdate tbl_Seguimiento set IdTipoPago = @idtipopago, descripcion = @descripcion, Monto = @monto,FechaPago = @fechapagowhere id = @idendif @descontar = 1beginexec spIrCancelando_Deuda_Seguimiento @idventaend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddVenta",
    "Content": "CREATE proc [dbo].[SpAddVenta]@Id int,@IdDocumento int,@SerieDoc varchar(20),@NumeroDoc int,@FechaEmision datetime,@SubTotal money,@Igv money,@Descuento money,@TotalVenta money,@IdCliente int,@CodigoTipoDoc varchar(2),@DniRuc varchar(20),@RazonSocial varchar(100),@Direccion varchar(200),@Email varchar(100),@Anulado bit,@Observacion text,@TipoNotCred char(2),@DescripNotCred varchar(50),@TipoDocAfectado char(2),@NumeroDocAfectado varchar(50),@UsuarioCrea varchar(50),@IdFormaPago int,@IdUsuarioPreventa int,@IdApertura int,@IdCaja int,@ImportePagado money,@TotalLetras text,@Hassh varchar(max),@IdAlmacen int,@IdGuia int,@IdPiso int,@IdMesa int,@IdUsuario int,@TipoMoneda varchar(10),@OtroImp money,@TipoOperacion varchar(4),@Adicional varchar(250),@Beneficiario varchar(250),@IdConvenio int,@IdParentesco int,@Cortesia bit,@Delivery bit,@Llevar bit,@CountPecho int,@CountPierna int,@TextObservation varchar(250),@FechaApertura dateasif @Id = 0begin\tinsert into mst_Venta \t(IdDocumento,SerieDoc,NumeroDoc,FechaEmision,IdCliente,CodigoTipoDoc,DniRuc,RazonSocial,Direccion,Email,Anulado,Observacion,\tTipoNotCred,DescripNotCred,TipoDocAfectado,NumeroDocAfectado,UsuarioCrea,FechaCrea,IdFormaPago,IdUsuarioPreventa,Descuento,\tIdApertura,idcaja, importepagado, total_letras, hassh, IdAlmacen,IdGuia, idpiso,IdMesa,idusuario, TipoMoneda, tipo_operacion, \tAdicional, Beneficiario, IdConvenio, IdParentesco)\tvalues(@CodigoTipoDoc,@serieDoc,@numeroDoc,GETDATE(),@idcliente,@CodigoTipoDoc,@dniRuc,@RazonSocial,@direccion,@email,0,@observacion,\t@TipoNotCred,@DescripNotCred,@TipoDocAfectado,@numerodocafectado,@UsuarioCrea,GETDATE(),@idformapago,@idusuariopreventa,@descuento,\t@idapertura,@idcaja,@importepagado,@TotalLetras,@Hassh,@idalmacen,0,@idpiso,@IdMesa,@idusuario,@tipomoneda,@TipoOperacion, \t@adicional, @beneficiario, @idconvenio, @idparentesco)\tselect CAST(SCOPE_IDENTITY() as int) 'id'endelsebegin\tupdate mst_Venta set \tIdDocumento = @CodigoTipoDoc,\tSerieDoc = @serieDoc,\tNumeroDoc = @numeroDoc,\tIdCliente = @idcliente,\tCodigoTipoDoc = @CodigoTipoDoc,\tDniRuc = @dniRuc,\tRazonSocial = @RazonSocial,\tDireccion = @direccion,\tEmail = @email,\tAnulado = @Anulado,\tObservacion = @observacion,\tTipoNotCred= @TipoNotCred,\tDescripNotCred = @DescripNotCred,\tTipoDocAfectado = @TipoDocAfectado,\tNumeroDocAfectado = @numerodocafectado,\tUsuarioModifica = @UsuarioCrea,\tFechaModifica = GETDATE(),\tIdFormaPago = @idformapago,\timportepagado = @importepagado,\ttotal_letras = @totalletras,\tHassh = @Hassh,\tTipoMoneda = @tipomoneda\twhere Id = @id\t\tEXEC spIngresarOtrosImpuestos_Venta @id\tselect @id 'id'end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetTotalContadoVentas",
    "Content": "CREATE proc [dbo].[spGetTotalContadoVentas]@idApertura int,@idUsuario int,@idCaja intasselectSUM(v.totalventa)-(SUM(fp.visa)+SUM(fp.mastercard)) totalfrom mst_Venta v inner join tabla_FormaPago fp on v.Id = fp.IdVentawhere fp.Contado = 1 and v.IdApertura = @idAperturaand v.IdUsuario = @idUsuario and v.IdCaja = @idCajaand v.Anulado = 0"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpReporteConcar",
    "Content": "CREATE proc [dbo].[SpReporteConcar]@fechaInicio date,@fechaFin dateasSELECT Concar.Restricciones,Concar.SubDiario,Concar.NumComprobante,FORMAT(Concar.FechaComprobante,'dd/MM/yyyy') as FechaComprobante,Concar.Cod_Moneda,SUBSTRING(Concar.Glosa,1,40) as Glosa,Concar.TipoCambio,Concar.TipoConversion,Concar.FlagConversion,FORMAT(Concar.FechaTipoCambio,'dd/MM/yyyy') as FechaTipoCambio,Concar.CuentaContable,Concar.CodigoAnexo,Concar.CodigoCentroCosto,Concar.Debe_Haber,Concar.ImporteOriginal,Concar.ImporteDolar,Concar.ImporteSoles,Concar.TipoDoc,Concar.NumDocumento,FORMAT(Concar.FechaDocumento,'dd/MM/yyyy') as FechaDocumento,FORMAT(Concar.FechaVencimiento,'dd/MM/yyyy') as FechaVencimiento,Concar.CodigoArea,Concar.GlosaDetalle,Concar.AnexoAuxiliar,Concar.MedioPago,Concar.TipoDocReferencia,Concar.NumDocReferencia,Concar.FechaDocReferencia,Concar.MaqRegistradora,Concar.BaseDocReferencia,Concar.IgvDocprevison,Concar. Mq,Concar.NumCajaReg,Concar.FechaOperacion,Concar.Tipotasa,Concar.TasaDetrac,Concar.ImporteDetracDol,Concar.ImporteDetracSol,Concar.TipCambioF,Concar.ImporteSinIgvFROM (SELECT'' as Restricciones,'05' as SubDiario,(RIGHT('00' + Ltrim(Rtrim(cast(MONTH(a.fecha_emi_doc_cpe) as varchar(2)))),2)) as [NumComprobante],a.fecha_emi_doc_cpe as FechaComprobante,IIF(a.tipo_moneda='PEN', 'MN','ME') as Cod_Moneda,IIF(a.estatus=1,'ANULADO',a.nombre_cliente) as Glosa,'' as TipoCambio,'F' as TipoConversion,'S' as FlagConversion,a.fecha_emi_doc_cpe as FechaTipoCambio,'121201' as CuentaContable,--LA SIGUIENTE LINEA ES CUENTA HABER 121201'0000' as CodigoAnexo,'' as CodigoCentroCosto,'D' as Debe_Haber,-- D Y Ha.total_cpe as ImporteOriginal,'' as ImporteDolar,a.total_cpe as ImporteSoles,CASE a.codigoWHEN '01' THEN 'FT'WHEN '03' THEN 'BV'WHEN '07' THEN 'NC'ELSE''END as TipoDoc,a.serie_nro_doc_cpe as NumDocumento,a.fecha_emi_doc_cpe as FechaDocumento,a.fecha_emi_doc_cpe as FechaVencimiento,'' as CodigoArea,'' as GlosaDetalle,'' as AnexoAuxiliar,'' as MedioPago,'' as TipoDocReferencia,'' as NumDocReferencia,'' as FechaDocReferencia,'' as MaqRegistradora,'' as BaseDocReferencia,'' as IgvDocprevison,'' as Mq,'' as NumCajaReg,'' as FechaOperacion,'' as Tipotasa,'' as TasaDetrac,'' as ImporteDetracDol,'' as ImporteDetracSol,'V' As TipCambioF,'' as ImporteSinIgv,serie_doc_cpe,nro_doc_cpeFROM vw_tbl_cab_cpe aWHERE a.codigo <> '00'UNION ALLSELECT'' as Restricciones,'05' as SubDiario,(RIGHT('00' + Ltrim(Rtrim(cast(MONTH(a.fecha_emi_doc_cpe) as varchar(2)))),2)) as [NumComprobante],a.fecha_emi_doc_cpe as FechaComprobante,IIF(a.tipo_moneda='PEN', 'MN','ME') as Cod_Moneda,IIF(a.estatus=1,'ANULADO',a.nombre_cliente) as Glosa,'' as TipoCambio,'F' as TipoConversion,'S' as FlagConversion,a.fecha_emi_doc_cpe as FechaTipoCambio,'701211' as CuentaContable,--LA SIGUIENTE LINEA ES CUENTA HABER 121201'0000' as CodigoAnexo,'' as CodigoCentroCosto,'H' as Debe_Haber,-- D Y Ha.ope_exonerada as ImporteOriginal,'' as ImporteDolar,a.ope_exonerada as ImporteSoles,CASE a.codigoWHEN '01' THEN 'FT'WHEN '03' THEN 'BV'WHEN '07' THEN 'NC'ELSE''END as TipoDoc,a.serie_nro_doc_cpe as NumDocumento,a.fecha_emi_doc_cpe as FechaDocumento,a.fecha_emi_doc_cpe as FechaVencimiento,'' as CodigoArea,'' as GlosaDetalle,'' as AnexoAuxiliar,'' as MedioPago,'' as TipoDocReferencia,'' as NumDocReferencia,'' as FechaDocReferencia,'' as MaqRegistradora,'' as BaseDocReferencia,'' as IgvDocprevison,'' as Mq,'' as NumCajaReg,'' as FechaOperacion,'' as Tipotasa,'' as TasaDetrac,'' as ImporteDetracDol,'' as ImporteDetracSol,'V' As TipCambioF,'' as ImporteSinIgv,serie_doc_cpe,nro_doc_cpeFROM vw_tbl_cab_cpe aWHERE a.codigo <> '00'UNION ALLSELECT'' as Restricciones,'05' as SubDiario,(RIGHT('00' + Ltrim(Rtrim(cast(MONTH(a.fecha_emi_doc_cpe) as varchar(2)))),2)) as [NumComprobante],a.fecha_emi_doc_cpe as FechaComprobante,IIF(a.tipo_moneda='PEN', 'MN','ME') as Cod_Moneda,IIF(a.estatus=1,'ANULADO',a.nombre_cliente) as Glosa,'' as TipoCambio,'F' as TipoConversion,'S' as FlagConversion,a.fecha_emi_doc_cpe as FechaTipoCambio,'401891' as CuentaContable,--LA SIGUIENTE LINEA ES CUENTA HABER 121201'0000' as CodigoAnexo,'' as CodigoCentroCosto,'H' as Debe_Haber,-- D Y Ha.otros_impuestos as ImporteOriginal,'' as ImporteDolar,a.otros_impuestos as ImporteSoles,CASE a.codigoWHEN '01' THEN 'FT'WHEN '03' THEN 'BV'WHEN '07' THEN 'NC'ELSE''END as TipoDoc,a.serie_nro_doc_cpe as NumDocumento,a.fecha_emi_doc_cpe as FechaDocumento,a.fecha_emi_doc_cpe as FechaVencimiento,'' as CodigoArea,'' as GlosaDetalle,'' as AnexoAuxiliar,'' as MedioPago,'' as TipoDocReferencia,'' as NumDocReferencia,'' as FechaDocReferencia,'' as MaqRegistradora,'' as BaseDocReferencia,'' as IgvDocprevison,'' as Mq,'' as NumCajaReg,'' as FechaOperacion,'' as Tipotasa,'' as TasaDetrac,'' as ImporteDetracDol,'' as ImporteDetracSol,'V' As TipCambioF,'' as ImporteSinIgv,serie_doc_cpe,nro_doc_cpeFROM vw_tbl_cab_cpe aWHERE a.codigo <> '00' AND a.otros_impuestos>0) AS ConcarWHERE Concar.FechaComprobante BETWEEN @fechaInicio AND @fechaFinORDER BY Concar.serie_doc_cpe,Concar.nro_doc_cpe"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarFormaPago",
    "Content": "CREATE proc [dbo].[spMostrarFormaPago]@id intasselect * from tabla_FormaPagowhere IdVenta = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_add_permisos_cobrador",
    "Content": "CREATE proc [dbo].[sp_add_permisos_cobrador]@id int,@check bitasupdate mst_Usuarios set is_cobrador = @checkwhere id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarGrupo",
    "Content": "------------------------------------------------EDITAR GRUPOCREATE procedure [dbo].[spModificarGrupo]@id int ,@descripcion varchar(100),@estado bit,@usuarioModifica varchar(50)asupdate mst_Gruposet Descripcion=@descripcion,estado = @estado,usuarioModifica = @usuarioModifica,fechaModifica = getdate()where id=@id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetVentaDetalle",
    "Content": "CREATE proc [dbo].[SpGetVentaDetalle]@idVenta intasselectvd.Id,IdProducto,descripcion 'Descripcion',IdVenta, Cantidad,PrecioUnit 'Precio',Descuento,Subtotal,Igv,Total,um.nombreUnidad 'Unidad',IdUnidad,vd.Factor,Adicional1,Adicional2,Adicional3,Adicional4,vd.CodigoBarra,igv_incluido 'IgvIncluido',countPecho 'CountPecho',countPierna 'CountPierna',textObservation 'TextObservation',IsCodBarraBusqueda,IdProductoDetallefrom mst_Venta_det vd inner join mst_UnidadMedida um on vd.IdUnidad = um.Idwhere vd.IdVenta = @idVenta and vd.Anulado = 0"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetConrolTransportisaDetalleByIdControlTransportista",
    "Content": "CREATE proc [dbo].[SpGetConrolTransportisaDetalleByIdControlTransportista]@idControlTransportista intasselect cd.*, fp.FormadePago 'FormaPago' from ControlTransportistasDetalle cdinner join mst_FormaPago fp on cd.IdFormaPago = fp.Idwhere IdControlTransportista = @idControlTransportista"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spReporteComprobante_aux",
    "Content": "CREATE proc [dbo].[spReporteComprobante_aux]@id intas SELECT cpe.id_cab_cpe AS IdCabCpe,cpe.descri_doc AS TipoDocumento,iif(cpe.ant_tipo_doc_cli = 6,'RAZON SOCIAL','CLIENTE') AS TipoGlosa,cpe.serie_nro_doc_cpe as SerieNum,cpe.fecha_emi_doc_cpe as FechaEmision, cpe.total_cpe as TotalVenta,cpe.total_cpe_letras as Total_Letras, cpe_detalle.nom_producto AS NomPoducto, IIF(CPE.tipo_doc_cli = 0, 'OTROS','DOC') AS descripcion,CPE.ruc_dni_cliente AS DniRuc, CPE.nombre_cliente AS RazonSocial, CPE.Direccion AS Direccion,  CPE.tipo_not_crede AS TipoNotCred, CPE.descri_not_crede AS DescripNotCred, CPE.tipo_doc_afecta AS TipoDocAfectado, CPE.nro_doc_afecta AS NumeroDocAfectado, cpe_detalle.id_item_cab_cpe AS IdVentaDet, CPE_DETALLE.pre_unitario AS PrecioUnit, cpe_detalle.cantidad AS Cantidad, 0 AS Descuento, CPE_DETALLE.sub_total AS Subtotal,CPE_DETALLE.sub_total AS Total, CPE_DETALLE.UNIT_CODE AS UnidDet,CPE.HASH_SUNAT AS hassh,cpe_detalle.monto_igv igv_detalle,cpe.igv igv_cabeceraFROM vw_tbl_cab_cpe cpeinner join vw_tbl_items_cab_cpe cpe_detalle on cpe.id_cab_cpe = cpe_detalle.id_cab_cpewhere cpe.id_cab_cpe = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spListarSeguimiento",
    "Content": "-------------------------------------------------CREATE proc [dbo].[spListarSeguimiento]@id int,@bit intasif(@bit = 0)--PARA MOSTRAR TODOSbeginselects.Id,ts.Descripcion as 'Tipo',s.descripcion,s.Monto,s.FechaPago,s.UsuarioCrea as 'Usuario',s.IdTipoPago,v.TotalVenta,s.idApertura,s.idCaja,s.idUsuariofrom tbl_Seguimiento sinner join tbl_TipoPago_Seguimiento ts on s.IdTipoPago = ts.Idleft join mst_Venta v on s.IdVenta = v.Idwhere s.Flag = 1endelse if(@bit = 1)--PARA FILTRAR POR VENTASbeginselects.Id,ts.Descripcion as 'Tipo',s.descripcion,s.Monto,s.FechaPago,s.UsuarioCrea as 'Usuario',s.IdTipoPago,v.TotalVenta,s.idApertura,s.idCaja,s.idUsuariofrom tbl_Seguimiento sinner join tbl_TipoPago_Seguimiento ts on s.IdTipoPago = ts.Idleft join mst_Venta v on s.IdVenta = v.Idwhere s.IdVenta = @idendelse if(@bit = 2)--PARA FILTRAR POR ITEMbeginselects.Id,ts.Descripcion as 'Tipo',s.descripcion,s.Monto,s.FechaPago,s.UsuarioCrea as 'Usuario',s.IdTipoPago,v.TotalVenta,s.idApertura,s.idCaja,s.idUsuariofrom tbl_Seguimiento sinner join tbl_TipoPago_Seguimiento ts on s.IdTipoPago = ts.Idleft join mst_Venta v on s.IdVenta = v.Idwhere s.Id = @idend"
  },
  {
    "Type": "SQL_SCALAR_FUNCTION",
    "Name": "F_SecuenciaDelivery",
    "Content": "CREATE function [dbo].[F_SecuenciaDelivery]()returns intasbegindeclare @fecha_actual date = GETDATE()return (select count(*) as 'Secuencia' from mst_Venta where delivery = 1 and CAST(FechaEmision as date) = CAST(@fecha_actual as date))+1;end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddAlmacenTraslado",
    "Content": "CREATE proc [dbo].[SpAddAlmacenTraslado]@id int,@idalmacensalida int,@idalmacenentrada int,@fecha datetime,@descripcion varchar(max),@cerrado bit,@estado bit ,@serie varchar(max) = 'T',@numero int,@total decimal(8,2)asif @id = 0\tbegin\tinsert into mst_almacen_traslado (idAlmacenSalida, idAlmacenEntrada, fecha, descripcion, cerrado, serie, numero, total)\tvalues(@idalmacensalida, @idalmacenentrada, @fecha,@descripcion,@cerrado, @serie, @numero, @total)\tselect CAST(SCOPE_IDENTITY() as int) as id;\tendelse\tbegin\tupdate mst_almacen_traslado set idAlmacenSalida = @idalmacensalida, idAlmacenEntrada = @idalmacenentrada, fecha = @fecha, descripcion = @descripcion, cerrado = @cerrado,\ttotal = @total\twhere id = @id\tselect CAST(@id as int) as id;\tend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_buscar_compra",
    "Content": "CREATE PROC [dbo].[sp_buscar_compra]@buscar varchar(250),@fecha_ini date,@fecha_fin dateasselect c.Id ,c.FechaEmision,c.FechaIngreso,a.Nombre [Almacén],d.Descripcion[Documento],CAST(c.Serie as varchar) + '-' + CAST(c.Numero as varchar) [Serie],p.nombre[Proveedor],c.Direccion,fp.FormadePago,c.FechaVence,c.Subtotal,c.TotalIgv,c.Totaldescuento,c.Total,c.Estado,c.ImportePagadofrom mst_Compras c inner join mst_Almacen a on c.IdAlmacen = a.Idinner join mst_documentos d on c.TipoDoc = d.Codigoinner join mst_Proveedor p on c.IdProveedor = p.idinner join mst_FormaPago fp on c.FormaPago = fp.Idwhere (CONCAT(RazonSocial, ' ', DniRuc, ' ') like CONCAT('%', @buscar, '%') OR CONCAT(C.Serie, '-', c.Numero) like CONCAT('%', @buscar, '%')) and FechaEmision between @fecha_ini and @fecha_fin and c.Flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetTotalCreditoVentas",
    "Content": "CREATE proc [dbo].[spGetTotalCreditoVentas]@idApertura int,@idUsuario int,@idCaja intasselectSUM(Total) totalfrom mst_Venta v inner join tabla_FormaPago fp on v.Id = fp.IdVentawhere fp.Credito = 1and v.IdApertura = @idAperturaand v.IdUsuario = @idUsuario and v.IdCaja = @idCajaand v.Anulado = 0"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarLinea",
    "Content": "------------------------------------------------EDITAR LINEACREATE procedure [dbo].[spModificarLinea]@idLinea int ,@nombre varchar(100),@estado bit,@idgrupo int,@usuarioModifica varchar(50)asupdate mst_Lineaset nombreLinea=@nombre,estado = @estado,idGrupo = @idgrupo,usuarioModifica = @usuarioModifica,fechaModifica = getdate()where id=@idLinea"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetAllBarCodes",
    "Content": "CREATE proc [dbo].[SpGetAllBarCodes]asselect Id 'IdProductoDetalle',0 'IdProductoPresentacion',codigoBarrafrom mst_ProductoDetallewhere estado = 1 and flag = 1union allselect0 'IdProductoDetalle',Id 'IdProductoPresentacion',Codigofrom mst_ProductoPresentacionwhere estado = 1 and flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetDocumentoClienteVenta",
    "Content": "CREATE proc [dbo].[SpGetDocumentoClienteVenta]asselectId,descripcion 'Descripcion',codigoSunat 'Codigo'from mst_TipoDocumentowhere estado = 1 and flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "BuscarConvenio",
    "Content": "CREATE procedure [dbo].[BuscarConvenio]@id int,@buscar varchar(250),@fecha date,@fechafin date,@bit bitasif(@bit = 0)\tbegin\tselect * from\t(\t\tselect\t\t\tId,\t\t\tRuc,\t\t\tRazon,\t\t\tDireccion,\t\t\tContrato,\t\t\tDescripcion,\t\t\tCAST(MontoLimite as decimal(18,2)) as 'MontoLimite',\t\t\tFechaInicio,\t\t\tFechaFin,\t\t\tUsuarioCrea,\t\t\tFechaCrea,\t\t\tUsuarioModifica,\t\t\tFechaModifica,\t\t\tEstado,\t\t\tIdCliente\t\t\tfrom mst_convenios\t\t\twhere (FechaInicio between CAST(@fecha as date) and CAST(@fechafin as date) and Flag = 1)\t\t\t\t\t)as temp\t\twhere ((temp.Ruc + ' ' + temp.Razon + ' ' + cast(temp.Direccion as varchar(250)) + ' ' + temp.Contrato) like '%'+@buscar+'%')\t\torder by temp.Id desc\tendelse\tbegin\tselect\t\tId,\t\tRuc,\t\tRazon,\t\tDireccion,\t\tContrato,\t\tDescripcion,\t\tCAST(MontoLimite as decimal(18,2)) as 'MontoLimite',\t\tFechaInicio,\t\tFechaFin,\t\tUsuarioCrea,\t\tFechaCrea,\t\tUsuarioModifica,\t\tFechaModifica,\t\tEstado,\t\tIdCliente\t\tfrom mst_convenios\t\twhere Id = @id\tend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetReporteVentaCronogramaByIdVenta",
    "Content": "CREATE proc [dbo].[SpGetReporteVentaCronogramaByIdVenta]@idVenta intasselectid idCronograma,fecha fechaCronograma,idVenta,nroCuota,monto montoCronogramafrom venta_cronogramawhere idVenta = @idVenta and estado = 1 and flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarSeguimiento",
    "Content": "CREATE proc [dbo].[spEliminarSeguimiento]@id int,@idventa intasdelete from tbl_Seguimiento where Id = @idexec spIrCancelando_Deuda_Seguimiento @idventa"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddAlmacenTrasladoDetalle",
    "Content": "CREATE proc [dbo].[SpAddAlmacenTrasladoDetalle]@id int,@idProducto int,@nombreProducto varchar(250),@idUnidad int,@nombreUnidad varchar(250),@factor numeric(9,3),@cantidad numeric(9,3),@almacenTrasladoId int,@precio numeric(9,3),@total numeric(9,3)asif @id = 0\tbegin\t\tinsert into mst_almacen_traslado_detalle (idProducto, nombreProducto, idUnidad, nombreUnidad, factor, cantidad, almacen_traslado_id, precio, total, estado, flag)\t\tvalues(@idProducto, @nombreProducto, @idUnidad, @nombreUnidad, @factor, @cantidad, @almacenTrasladoId, @precio, @total, 1, 1)\t\tselect CAST(SCOPE_IDENTITY() as int);\tendelse\tbegin\t\tupdate mst_almacen_traslado_detalle set @idProducto = @idProducto, idUnidad = @idUnidad, nombreUnidad = @nombreUnidad, factor = @factor, cantidad = @cantidad,\t\talmacen_traslado_id = @almacenTrasladoId, precio = @precio, total = @total\t\twhere id = @id\t\tselect CAST(@id as int);\tend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarGlobal",
    "Content": "CREATE Procedure  [dbo].[spMostrarGlobal]( @nombreTabla varchar(100))AsDeclare @tabla nvarchar(max);Set @tabla = 'SELECT * FROM ' + QUOTENAME(@nombreTabla) + ' where flag = 1 ORDER BY ID DESC'exec sp_executesql @tabla"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetTotalGastosOperativosCierre",
    "Content": "CREATE proc [dbo].[spGetTotalGastosOperativosCierre]@idapertura int,@idcaja int,@idusuario intasselect ISNULL(SUM(Monto), 0) total  from mst_GastosOperativos where eliminado = 0 and IdApertura = @idapertura and idcaja = @idcaja and IdUsuario = @idusuario"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarMarca",
    "Content": "----------------------------------------------------------------------------Modificar-----------------------------CREATE procedure [dbo].[spModificarMarca]@idMarca int,@nombreMarca varchar(100),@estado bit,@usuarioModifica varchar(50)asupdate mst_Marca setnombreMarca=@nombreMarca,estado = @estado,usuarioModifica = @usuarioModifica,fechaModifica = GETDATE()where id=@idMarca"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMigrarMesa",
    "Content": "CREATE proc [dbo].[spMigrarMesa]@idmesaan int,@idmesanuevo int,@idpiso intasupdate tabla_Pre_Venta set IdMesa = @idmesanuevowhere idmesa = @idmesaan and Eliminado = 0 and Pagado = 0 and IdPiso = @idpisoupdate tabla_Pre_Venta_Detalle set IdMesa = @idmesanuevowhere IdMesa = @idmesaan and Pagado = 0 and Eliminado = 0 and IdPiso = @idpiso"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spStockActualizarSaldoItem",
    "Content": "CREATE proc [dbo].[spStockActualizarSaldoItem]@idalmacen int,@idproductoentrada intasDECLARE @IdProducto INT,@Entrada DECIMAL(18,2) = 0,@Salida DECIMAL(18,2) = 0,@Saldo DECIMAL(18,2) = 0DECLARE CStockAcumulado CURSORFOR(SELECT TEMP.Id_Almacen,TEMP.Id,(SUM(TEMP.Inicial)+SUM(TEMP.Compras)) as Entrada,SUM(TEMP.Ventas) as Salida, (SUM(TEMP.Inicial)+SUM(TEMP.Compras)-SUM(TEMP.Ventas)) as SaldoFROM(---------------INVENTARIO---------SELECT a.Id_Almacen,c.Id,b.IdUnidad,d.nombreUnidad,(b.Cantidad*d.factor) as Inicial,0 as Compras,0 as VentasFROM mst_Inventario aINNER JOIN mst_Inventario_Detalle b ON a.Id = b.Id_InventarioINNER JOIN mst_productodetalle c ON c.Id = b.Id_ProductoINNER JOIN mst_UnidadMedida d ON d.Id = b.IdUnidad where a.Estado = 0 and a.Flag = 1 and b.Estado = 1 and b.Flag = 1 AND a.Id_Almacen = @idalmacen-----------INVENTARIO--------------------COMPRAS---------UNION ALLSELECT a.IdAlmacen,c.Id,b.IdUnidad,d.nombreUnidad,0 as Inicial,(b.Cantidad*d.factor) as Compras, 0 as VentasFROM mst_Compras aINNER JOIN mst_ComprasDetalles b ON a.Id = b.IdCompraINNER JOIN mst_productodetalle c ON c.Id = b.IdProductoINNER JOIN mst_UnidadMedida d ON d.Id = b.IdUnidad where a.Estado=1 and a.flag=1 AND a.isClosed = 1 and b.Estado=1 and b.Flag=1 and a.IdAlmacen = @idalmacen and a.IsClosed = 1-----------COMPRAS---------UNION ALLSELECT a.IdAlmacen,c.Id,b.IdUnidad,d.nombreUnidad,0 as Inicial,0 as Compras,(b.Cantidad*d.factor) as VentasFROM mst_Venta aINNER JOIN mst_Venta_det b ON a.Id = b.IdVentaINNER JOIN mst_ProductoPresentacion pp on b.IdProducto = pp.IdINNER JOIN mst_productodetalle c ON c.Id = pp.idProductosDetalleINNER JOIN mst_UnidadMedida d ON d.Id = b.IdUnidad where a.Anulado=0 and b.Flag = 1 and b.Anulado = 0 and cast(a.Observacion as varchar) = ''AND a.IdDocumento <> '07' and a.IdAlmacen = @idalmacenUNION ALLSELECT a.IdAlmacen,c.Id,b.IdUnidad,d.nombreUnidad,0 as Inicial,CASE a.TipoNotCredWHEN '01' THEN ISNULL((b.Cantidad*d.factor),0.00)WHEN '02' THEN ISNULL((b.Cantidad*d.factor),0.00)WHEN '03' THEN ISNULL((b.Cantidad*d.factor),0.00)WHEN '06' THEN ISNULL((b.Cantidad*d.factor),0.00)WHEN '07' THEN ISNULL((b.Cantidad*d.factor),0.00)WHEN '08' THEN ISNULL((b.Cantidad*d.factor),0.00)ELSE 0.00 END AS Compras,0 as VentasFROM mst_Venta aINNER JOIN mst_Venta_det b ON a.Id = b.IdVentaINNER JOIN mst_ProductoPresentacion pp on b.IdProducto = pp.IdINNER JOIN mst_productodetalle c ON c.Id = pp.idProductosDetalleINNER JOIN mst_UnidadMedida d ON d.Id = b.IdUnidad where a.Anulado=0 and b.Flag = 1 and b.Anulado = 0 AND a.IdDocumento = '07' AND (a.TipoNotCred<>'04' OR a.TipoNotCred<>'05' OR a.TipoNotCred<>'09' OR a.TipoNotCred<>'10') and a.IdAlmacen = @idalmacen-----------TRASLADOS---------UNION ALLSELECT t.idAlmacenEntrada, td.idProducto , td.idUnidad, td.nombreUnidad,0 as Inicial, (td.cantidad * td.factor) as 'Compras', 0 as 'Ventas' FROM mst_almacen_traslado tINNER JOIN mst_almacen_traslado_detalle td on t.id = td.almacen_traslado_idWHERE t.flag = 1 and td.flag = 1 and t.idAlmacenEntrada = @idalmacen-----------UNION ALLSELECT t.idAlmacenSalida, td.idProducto , td.idUnidad, td.nombreUnidad,0 as Inicial, 0 as 'Compras', (td.cantidad * td.factor) as 'Ventas' FROM mst_almacen_traslado tINNER JOIN mst_almacen_traslado_detalle td on t.id = td.almacen_traslado_idWHERE t.flag = 1 and td.flag = 1 and t.idAlmacenSalida = @idalmacen-----------TRASLADOS--------------------MOVIMIENTOS ENTRADA---------UNION ALLSELECT m.idAlmacen, md.idProducto, md.idUnidad, md.nombreUnidad,0 as Inicial, (md.cantidad * md.factor) as 'Compras', 0 as 'Ventas' from mst_almacen_movimiento m INNER JOIN mst_almacen_movimiento_detalle md on m.id = md.almacen_movimiento_idWHERE m.flag = 1 and md.flag = 1 and entrada = 1 and m.idAlmacen = @idalmacen-----------MOVIMIENTOS ENTRADA--------------------MOVIMIENTOS SALIDA---------UNION ALLSELECT m.idAlmacen, md.idProducto, md.idUnidad, md.nombreUnidad,0 as Inicial, 0 as 'Compras', (md.cantidad * md.factor) as 'Ventas' from mst_almacen_movimiento m INNER JOIN mst_almacen_movimiento_detalle md on m.id = md.almacen_movimiento_idWHERE m.flag = 1 and md.flag = 1 and salida = 1 and m.idAlmacen = @idalmacen-----------MOVIMIENTOS SALIDA--------------------MOVIMIENTOS AJUSTES---------UNION ALLSELECT m.idAlmacen, md.idProducto, md.idUnidad, md.nombreUnidad,0 as Inicial, (md.cantidad * md.factor) as 'Compras', 0 as 'Ventas' from mst_almacen_movimiento m INNER JOIN mst_almacen_movimiento_detalle md on m.id = md.almacen_movimiento_idWHERE m.flag = 1 and md.flag = 1 and m.ajuste = 1 and m.idAlmacen = @idalmacen-----------MOVIMIENTOS AJUSTES---------) AS TEMPwhere temp.Id = @idproductoentradaGROUP BY TEMP.Id_Almacen,TEMP.IdHAVING TEMP.Id_Almacen=@idalmacen)FOR UPDATEOPEN CStockAcumuladoFETCH CStockAcumulado INTO @IdAlmacen,@IdProducto,@Entrada,@Salida,@Saldoset NOCOUNT ONdeclare @exist int = isnull((select count(Id) from Stocks_Acumulados where IdProducto = @idproductoentrada and IdAlmacen = @idalmacen), 0)if @exist = 0begin\tinsert into Stocks_Acumulados (IdAlmacen, IdProducto, Entradas, Salidas, Saldo, Fecha_Crea)\tvalues(@idalmacen, @idproductoentrada, @Entrada, @Salida, @Saldo, GETDATE())endUPDATE Stocks_Acumulados SET Entradas=@Entrada,Salidas=@Salida,Saldo=@SaldoWHERE IdProducto=@idproductoentrada and IdAlmacen=@IdAlmacenWHILE (@@FETCH_STATUS = 0)BEGINset NOCOUNT ON\t   UPDATE Stocks_Acumulados SET Entradas=@Entrada,Salidas=@Salida,Saldo=@Saldo   WHERE IdProducto=@idproductoentrada and IdAlmacen=@IdAlmacen   --print 'almacen = ' + cast(@idalmacen as varchar)   --print 'idproducto = ' + cast(@IdProducto as varchar)   --print 'entradas = ' + cast(@entrada as varchar)   --print 'salidas = ' + cast(@salida as varchar)   --print 'saldo = ' + cast(@saldo as varchar)-- LECTURA DE LA SIGUIENTE FILA DEL CURSOR   FETCH CStockAcumulado INTO @IdAlmacen,@IdProducto,@Entrada,@Salida,@SaldoEND-- CIERRE DEL CURSORCLOSE CStockAcumulado-- LIBERAR LOS RECURSOSDEALLOCATE CStockAcumuladoselectid 'id',IdAlmacen 'id_almacen' ,IdProducto 'id_producto',Entradas 'entradas',Salidas 'salidas',Saldo 'saldo'from Stocks_Acumulados where IdProducto = @idproductoentradaand idAlmacen = @idalmacen"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_get_apertura_by_numero_usuario_caja",
    "Content": "CREATE proc [dbo].[sp_get_apertura_by_numero_usuario_caja]@numero_apertura int,@id_usuario int,@id_caja intasselect * from mst_Aperturawhere Numero = @numero_apertura and IdUsuario = @id_usuario and IdCaja =  @id_caja"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetTotalSalidasAlmacen",
    "Content": "CREATE proc [dbo].[spGetTotalSalidasAlmacen]asselectsum(importe_pagado) totalfrom mst_almacen_movimientowhere salida = 1 and CAST(fecha as date) = CAST(GETDATE() as date)group by total, idorder by id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarPermisosVenta",
    "Content": "CREATE proc [dbo].[spModificarPermisosVenta]@idusuario int,@maximo money,@minimo money,@estado bitasdeclare @exist int = (select top 1 id from mst_Permisos_Venta where IdUsuario = @idusuario)set @exist = ISNULL(@exist, 0)if @exist = 0begin\tinsert into mst_Permisos_Venta (IdUsuario, Maximo, Minimo, Estado)\tvalues(@idusuario, @maximo, @minimo, @estado)endelsebegin\tupdate mst_permisos_venta set\tmaximo = @maximo,\tminimo = @minimo,\testado = @estado\twhere idusuario = @idusuarioend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetTotalTarjetasVentas",
    "Content": "CREATE proc [dbo].[spGetTotalTarjetasVentas]@idApertura int,@idUsuario int,@idCaja intasselectSUM(fp.Visa) + SUM(fp.Mastercard) totalfrom mst_Venta v inner join tabla_FormaPago fp on v.Id = fp.IdVentawhere v.IdApertura = @idAperturaand v.IdUsuario = @idUsuario and v.IdCaja = @idCajaand v.Anulado = 0and (fp.Visa > 0 OR FP.Mastercard > 0)and fp.Contado = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spProcedimientoX_Det",
    "Content": "CREATE proc [dbo].[spProcedimientoX_Det]@id int,@idventa int,@idproducto int,@descripcion varchar(200),@precio money,@cantidad money,@total moneyasif(@id = 0)begininsert into tabla_Venta_Det_Ext (IdVenta,IdProducto,Descripcion,Precio,Cantidad,Total)values(@idventa,@idproducto, @descripcion,@precio,@cantidad,@total)endelsebeginupdate tabla_Venta_Det_Ext set idproducto = @idproducto,descripcion = @descripcion, precio = @precio, cantidad = @cantidad, total = @totalwhere IdVenta_Det = @idend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpCambiarTipoMonedaVenta",
    "Content": "CREATE proc [dbo].[SpCambiarTipoMonedaVenta]@idVenta int,@tipoMoneda varchar(5)asdeclare @total decimal = (select TotalVenta from mst_Venta where id = @idVenta)declare @tipomoneda_text varchar(200) set @tipomoneda_text = CASE @TipoMoneda\tWHEN 'PEN' THEN 'SOLES'\tELSE 'DOLARES'ENDupdate mst_Venta set TipoMoneda = @tipoMoneda, Total_Letras = dbo.fn_ConvertirNumeroLetra(@total, @tipomoneda_text)where id = @idVenta"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetPedidosById",
    "Content": "CREATE proc [dbo].[SpGetPedidosById]@id intasselectId,IdPedido,IdMesa,CodigoDoc,IdCliente,DniRuc,RazonSocial,Direccion,Email,Pagado,Eliminado,IdUsuario,BolFac,sub_total 'SubTotal',igv 'Igv',Descuento,Total,Idalmacen,Proforma,IdPiso,NumSecuencia,PreCuenta,Otro_Imp 'OtrosImpuestos',Adicional,Beneficiario,IdConvenio,IdParentesco,Fecha,is_llevar 'IsLlevar',is_delivery 'IsDelivery',ISNULL(countPecho, 0) 'CountPecho',ISNULL(countPierna, 0) 'CountPierna',textObservation 'TextObservacion',OperacionExoneradafrom tabla_Pre_Ventawhere id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarPreContacto",
    "Content": "CREATE proc [dbo].[spModificarPreContacto]@id int,@codigodoc char(2),@idcliente int,@dniruc varchar(50),@razonsocial varchar(200),@direccion varchar(200),@email varchar(200),@idusuario int,@bolfac char(2),@pm bit,@idalmacen int,@idpiso int,@adicional varchar(250),@beneficiario varchar(250),@idconvenio int,@esconvenio bit,@idparentesco intasif(@pm = 0)begin\tif(@esconvenio = 0)\t\tbegin\t\t\tupdate tabla_Pre_Venta set\t\t\tCodigoDoc = @codigodoc,\t\t\tIdCliente = @idcliente,\t\t\tDniRuc = @dniruc,\t\t\tRazonSocial = @razonsocial,\t\t\tDireccion = @direccion,\t\t\tEmail = @email,\t\t\tIdUsuario = @idusuario,\t\t\tbolfac = @bolfac,\t\t\tIdalmacen = @idalmacen,\t\t\tAdicional = @adicional,\t\t\tBeneficiario =@beneficiario,\t\t\tIdConvenio = @idconvenio,\t\t\tIdParentesco = @idparentesco\t\t\twhere IdPedido = @id\t\t\tand Pagado = 0 and Eliminado = 0\t\tend\telse\t\tbegin\t\t\tupdate tabla_Pre_Venta_Convenio set\t\t\tCodigoDoc = @codigodoc,\t\t\tIdCliente = @idcliente,\t\t\tDniRuc = @dniruc,\t\t\tRazonSocial = @razonsocial,\t\t\tDireccion = @direccion,\t\t\tEmail = @email,\t\t\tIdUsuario = @idusuario,\t\t\tbolfac = @bolfac,\t\t\tIdalmacen = @idalmacen,\t\t\tAdicional = @adicional,\t\t\tBeneficiario = @beneficiario,\t\t\tIdConvenio = @idconvenio,\t\t\tIdParentesco = @idparentesco\t\t\twhere Id = @id\t\t\t\t\tendendelse if (@pm = 1) beginupdate tabla_Pre_Venta setCodigoDoc = @codigodoc,IdCliente = @idcliente,DniRuc = @dniruc,RazonSocial = @razonsocial,Direccion = @direccion,Email = @email,IdUsuario = @idusuario,bolfac = @bolfac,Idalmacen = @idalmacenwhere IdMesa = @id and IdPiso = @idpisoand Pagado = 0 and Eliminado = 0endexec spIngresarOtrosImpuestos_Preventa @id, @pm,@esconvenio"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spIngresarOtrosImpuestos_Preventa",
    "Content": "CREATE proc [dbo].[spIngresarOtrosImpuestos_Preventa]@id int,@bit bit,@esconvenio bitasDECLARE @total money = 0if(@bit = 0)\tbegin\t\tif(@esconvenio = 0)\t\t\tbegin\t\t\t\tset @total = (select SUM(Cantidad) \t\t\t\tfrom tabla_Pre_Venta_Detalle pvd\t\t\t\tinner join mst_ProductoPresentacion pp on pvd.IdProducto = pp.Id\t\t\t\tinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Id\t\t\t\tinner join mst_Producto p on pd.idProducto = p.Id\t\t\t\tinner join mst_Grupo g on p.IdGrupo = g.Id\t\t\t\t \t\t\t\tinner join tabla_Pre_Venta pedido on pvd.IdPedido = pedido.IdPedido\t\t\t\twhere pvd.IdPedido = @id and pvd.Pagado = 0 and pvd.Eliminado = 0 and (g.Descripcion = 'BOLSA' or g.Descripcion = 'BOLSAS') and pedido.BolFac <> '99')\t\t\tend\t\telse\t\t\tbegin\t\t\t\tset @total = (select SUM(Cantidad) \t\t\t\tfrom tabla_Pre_Venta_Detalle_Convenio pvd\t\t\t\tinner join mst_ProductoPresentacion pp on pvd.IdProducto = pp.Id\t\t\t\tinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Id\t\t\t\tinner join mst_Producto p on pd.idProducto = p.Id\t\t\t\tinner join mst_Grupo g on p.IdGrupo = g.Id\t\t\t\tinner join tabla_Pre_Venta pedido on pvd.IdPedido = pedido.IdPedido\t\t\t\twhere pvd.IdPedido = @id and pvd.Pagado = 0 and pvd.Eliminado = 0 and (g.Descripcion = 'BOLSA' or g.Descripcion = 'BOLSAS') and pedido.BolFac <> '99')\t\t\tend\tendelse\tbegin\tset @total = (select SUM(Cantidad) \t\tfrom tabla_Pre_Venta_Detalle pvd\t\tinner join mst_ProductoPresentacion pp on pvd.IdProducto = pp.Id\t\tinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Id\t\tinner join mst_Producto p on pd.idProducto = p.Id\t\tinner join mst_Grupo g on p.IdGrupo = g.Id\t\tinner join tabla_Pre_Venta pedido on pvd.IdMesa = pedido.IdMesa and pvd.Pagado = 0\t\twhere pvd.IdMesa = @id and pvd.Pagado = 0 and pvd.Eliminado = 0 and pedido.Pagado = 0 and pedido.Eliminado = 0 and (g.Descripcion = 'BOLSA' or g.Descripcion = 'BOLSAS') and pedido.BolFac <> '99')\tend--set @total = @total * 0.20set @total = @total * dbo.getIcbAmount()set @total = ISNULL(@total,0)if(@bit = 0)\tbegin\t\tif(@esconvenio = 0)\t\t\tbegin\t\t\t\tupdate tabla_Pre_Venta set Otro_Imp = @total where IdPedido = @id and Pagado = 0 and Eliminado = 0\t\t\tend\t\telse\t\t\tbegin\t\t\t\tupdate tabla_Pre_Venta_Convenio set Otro_Imp = @total where IdPedido = @id and Pagado = 0 and Eliminado = 0\t\t\tend\tendelse if(@bit = 1)update tabla_Pre_Venta set Otro_Imp = @total where IdMesa = @id and Pagado = 0 and Eliminado = 0else \tbegin\t\tif(@esconvenio = 0)\t\t\tbegin\t\t\t\tupdate tabla_Pre_Venta set Otro_Imp = @total where Id = @id and Pagado = 0 and Eliminado = 0\t\t\tend\t\telse\t\t\tbegin\t\t\t\tupdate tabla_Pre_Venta_Convenio set Otro_Imp = @total where IdPedido = @id and Pagado = 0 and Eliminado = 0\t\t\tend\tend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_descontar_deuda",
    "Content": "CREATE proc [dbo].[sp_descontar_deuda]@id_venta intasupdate tbl_Seguimiento set validado = 1where IdVenta = @id_ventadeclare @monto money = (select SUM(Monto) from tbl_Seguimiento where IdVenta = @id_venta)update mst_Venta set ImportePagado = @montowhere id = @id_venta"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpStockNuevoRegistro",
    "Content": "CREATE proc [dbo].[SpStockNuevoRegistro]@idAlmacen int,@idProducto int,@entrada numeric,@salida numeric,@saldo numericasdeclare @hay int = (select COUNT(Id) from Stocks_Acumuladoswhere IdAlmacen = @idalmacen and IdProducto = @idproducto)if @hay = 0beginSET NOCOUNT ONINSERT INTO Stocks_Acumuladosvalues (@idalmacen, @idproducto, @entrada, @salida, @saldo, GETDATE(), NULL, 'ADMIN', NULL)SELECT CAST(SCOPE_IDENTITY() AS INT);endelse select 0"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarProducto",
    "Content": "-------------------------------------------------------------modificar------------CREATE procedure [dbo].[spModificarProducto]@idProducto int,@nombreProducto varchar(100),@IdMarca int,@idsegmento char(2),@idfamilia char(2),@idclase char(2),@usuarioModifica varchar(50),@estado bit,@idproveedor int,@idtipo int,@idproductosunat char(8),@idgrupo intasupdate mst_Productoset nombreProducto = @nombreProducto,idMarca = @IdMarca,IdSegmento = @idsegmento,idfamilia = @idfamilia,IdClase = @idclase,usuarioModifica = @usuarioModifica, fechaModifica = GETDATE(),estado = @estado,idproveedor = @idproveedor,IdTipoProducto = @idtipo,IdProductoSunat = @idproductosunat,idgrupo = @idgrupowhere id = @idproducto"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "Impresion_Items_Convenio_Factura",
    "Content": "CREATE procedure [dbo].[Impresion_Items_Convenio_Factura]@idventa intasselect * from tabla_Pre_Venta_Convenio pc inner join tabla_Pre_Venta_Detalle_Convenio pdc on pc.IdPedido = pdc.IdPedidowhere pc.IdVenta = @idventa"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spIngresarOtrosImpuestos_Venta",
    "Content": "CREATE proc [dbo].[spIngresarOtrosImpuestos_Venta]@id intasDECLARE @total money = 0 set @total = (selectsum(Cantidad) cantidadfrom mst_Venta_det vdinner join mst_ProductoPresentacion pp on vd.IdProducto = pp.Idinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Idinner join mst_Producto p on pd.idProducto = p.Idinner join mst_Grupo g on p.IdGrupo = g.Idinner join mst_Venta v on vd.idventa = v.Idwhere IdVenta = @id and vd.Anulado = 0 and (g.Descripcion = 'BOLSA' or g.Descripcion = 'BOLSAS')and v.IdDocumento <> '99')--set @total = (@total * 0.20)set @total = (@total * dbo.getIcbAmount())set @total = ISNULL(@total,0)--print @totalupdate mst_Venta set Otro_Imp = @total,TotalVenta = (SubTotal + @total)where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_get_reserva_cierre_caja",
    "Content": "CREATE proc [dbo].[sp_get_reserva_cierre_caja]@id_caja int,@id_usuario int,@id_apertura intasselect reserva from mst_Apertura where Numero= @id_apertura and IdUsuario = @id_usuario and IdCaja = @id_caja"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_mostrar_detalles_deuda_acumulada_almacenMovimiento",
    "Content": "CREATE proc [dbo].[sp_mostrar_detalles_deuda_acumulada_almacenMovimiento]@idusuario int,@fecha dateasselectam.id as id,CONCAT(am.serie, '-' , CAST(am.numero as varchar)) as 'serie',c.RazonSocial AS 'cliente',am.total as 'total_deuda',SUM(s.monto) as 'importe_pagado'from mst_almacen_movimiento aminner join mst_Cliente c on am.idCliente = c.Idleft join api_almacen_pagos s on s.almacen_movimiento_id = am.idinner join mst_Usuarios u on am.idvendedor = u.Idwhere s.validado = 0 AND am.idvendedor = @idusuario and CAST(s.fecha as date) = @fechagroup by am.serie, am.numero, c.razonSocial, am.total, am.id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarProductoDetalle",
    "Content": "----------------------------------------------------exec spInsertarProductoDetalle 'laptop','ddd','aaa','01010101101011',null,'maick'--select * from TablaColor----------------------------------------------------modificarCREATE proc [dbo].[spModificarProductoDetalle]@idproductodetalle int,@Idtalla int,@Idcolor int,@descripcion varchar(100),@codigobarra varchar(50),@imagen image,@usuariomodifica varchar(50),@estado bit,--@stockinicial int,@stockminimo int,@fechavencimiento date,@idmedida int,@bit bitasif(@bit = 0)update mst_ProductoDetalleset idTalla = @Idtalla,idColores = @Idcolor ,descripcion = @descripcion,codigoBarra = @codigobarra,imagenProducto =  @imagen, usuarioModifica =  @usuariomodifica,estado = @estado,stockinicial = @stockinicial,stockminimo = @stockminimo,fechavencimiento = @fechavencimiento,idmedida = @idmedida,fechaModifica = GETDATE()where Id = @idproductodetalleelseupdate mst_ProductoDetalleset idTalla = @Idtalla,idColores = @Idcolor ,descripcion = @descripcion,codigoBarra = @codigobarra,imagenProducto =  @imagen, usuarioModifica =  @usuariomodifica,estado = @estado,stockinicial = @stockinicial,stockminimo = @stockminimo,idmedida = @idmedidawhere Id = @idproductodetalle"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spCambiarEstadoStock",
    "Content": "CREATE proc [dbo].[spCambiarEstadoStock](@iddetalle int, @check_stock bit)asupdate mst_ProductoDetalle set checkStock = @check_stockwhere Id = @iddetalle"
  },
  {
    "Type": "SQL_SCALAR_FUNCTION",
    "Name": "F_Trim",
    "Content": "CREATE function [dbo].[F_Trim](@valor varchar(max))returns varchar(max)asbeginreturn ltrim(rtrim(replace(@valor, '   ', '')))end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_get_ventas_tarjetas",
    "Content": "CREATE PROC\t[dbo].[sp_get_ventas_tarjetas]@id_apertura int,@id_caja int,@id_usuario intasSELECT CAST(v.FechaEmision as Date) as Fecha,v.IdDocumento,(v.SerieDoc+'-'+cast(v.NumeroDoc as varchar(20))) as Doc,v.TotalVenta,(tp.visa+tp.mastercard) as tarjetas,tp.EfectivoFROM mst_venta vINNER JOIN tabla_FormaPago tpON v.Id = tp.IdVentaWHERE (tp.visa+tp.mastercard)>0 and v.IdApertura= @id_apertura and v.IdCaja = @id_caja and v.IdUsuario = @id_usuarioORDER BY v.SerieDoc, v.NumeroDoc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spProcedimientoX",
    "Content": "CREATE PROC [dbo].[spProcedimientoX]@id int,@idcaja int,@total money,@idpiso int,@idmesa int,@idapertura intasif(@id = 0)begininsert into tabla_Venta_Ext(IdCaja,Fecha,Total,IdPiso,IdMesa,IdApertura)values(@idcaja,getdate(),@total,@idpiso,@idmesa, @idapertura)endelsebeginupdate tabla_Venta_Ext set Total = @totalwhere IdVenta = @idend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarProductoPresentacion",
    "Content": "CREATE proc [dbo].[spModificarProductoPresentacion]@idproductoPresentacion int,@IdUnidad int,@preciounitario money,@usuariomodifica varchar(50),@principal bit,@estado bit,@principalAlmacen bit,@codigoBarraPresentacion varchar(100),@verEnVentas bitasupdate mst_ProductoPresentacion set idUnidad = @IdUnidad,precioUnitario = @preciounitario,usuarioModifica = @usuariomodifica,estado = @estado,Principal = @principal,fechaModifica = GETDATE(),principalAlmacen = @principalAlmacen,Codigo = @codigoBarraPresentacion,VerEnVentas = @verEnVentaswhere Id = @idproductoPresentacion"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetBaseConfig",
    "Content": "CREATE proc [dbo].[SpGetBaseConfig]asselect * from BaseConfig"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarProveedor",
    "Content": "CREATE proc [dbo].[spInsertarProveedor]@nombre varchar(100),@ruc varchar(20),@direccion varchar(100),@telefono varchar(20),@email varchar(100),@usuariocrea varchar(50)asinsert into mst_Proveedor(nombre, ruc,direccion,telefono,email, usuariocrea, fechacrea)values(@nombre,@ruc,@direccion,@telefono,@email,@usuariocrea,GETDATE())"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_guardar_estado_caja",
    "Content": "CREATE proc [dbo].[sp_guardar_estado_caja]@numero int,@idusuario int,@idcaja int,@contado DECIMAL(18,3),@credito DECIMAL(18,3),@tarjetas DECIMAL(18,3),@otros_ingresos DECIMAL(18,3),@gastos DECIMAL(18,3),@total_efectivo DECIMAL(18,3),@total_egreso DECIMAL(18,3),@efectivo_declarado DECIMAL(18,3),@diferencia DECIMAL(18,3),@reserva DECIMAL(18,3)asupdate mst_apertura setContado = @contado, Credito = @credito, tarjetas = @tarjetas, otros_ingresos = @otros_ingresos,gastos = @gastos, total_efectivo = @total_efectivo, total_egreso = @total_egreso, efectivo_declarado = @efectivo_declarado,diferencia = @diferencia, reserva = @reserva where  numero = @numero and IdUsuario = @idusuario and IdCaja = @idcaja"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spResumenVentasProductos",
    "Content": "CREATE PROCEDURE [dbo].[spResumenVentasProductos]@id int,@idpiso int,@idcaja int,@idusuario int,@detallado bit--solo 0-1ASif(@detallado = 1)\tbegin\tif(@idpiso = 0)\tbegin \t\tSELECT g.Numero,\t\tCAST(g.Fecha AS DATE) as Fecha,\t\tSUM(b.Cantidad) as Cant,\t\tf.nombreProducto,\t\tb.PrecioUnit,\t\tSUM(b.Total) as ImporteTotal ,\t\t'Todos' as Piso,\t\t0 as 'Num_Ini',\t\t0 as 'Num_Max',\t\t'xxx' as 'SerieDoc',\t\t'xxx' as 'IdDocumento'\t\tFROM mst_Venta a\t\tINNER JOIN mst_Venta_det b ON a.Id=b.IdVenta\t\tINNER JOIN tabla_FormaPago c ON c.IdVenta = a.id\t\tINNER JOIN mst_ProductoPresentacion d ON d.Id=b.IdProducto\t\tINNER JOIN mst_ProductoDetalle e ON e.Id=d.idProductosDetalle\t\tINNER JOIN mst_Producto f ON f.Id=e.idProducto\t\tINNER JOIN mst_Apertura g ON g.Numero=a.IdApertura and g.IdUsuario = a.IdUsuario and g.IdCaja = a.IdCaja\t\tINNER JOIN mst_Grupo h ON h.Id=f.IdGrupo\t\tWHERE a.Anulado=0 and (b.Flag=1 and b.Anulado=0) and g.Numero = @id and a.IdCaja = @idcaja \t\tand a.IdUsuario = @idusuario\t\tGROUP BY g.Numero,g.Fecha,f.nombreProducto,b.PrecioUnit,h.Descripcion\t\tORDER BY h.Descripcion asc\tend\telse\tSELECT g.Numero,CAST(g.Fecha AS DATE) as Fecha,SUM(b.Cantidad) as Cant,f.nombreProducto,b.PrecioUnit,SUM(b.Total) as ImporteTotal ,\tCAST(@idpiso AS varchar(50)) as Piso,\t0 as 'Num_Ini',\t0 as 'Num_Max',\t'xxx' as 'SerieDoc',\t'xxx' as 'IdDocumento'\tFROM mst_Venta a\tINNER JOIN mst_Venta_det b ON a.Id=b.IdVenta\tINNER JOIN tabla_FormaPago c ON c.IdVenta = a.id\tINNER JOIN mst_ProductoPresentacion d ON d.Id=b.IdProducto\tINNER JOIN mst_ProductoDetalle e ON e.Id=d.idProductosDetalle\tINNER JOIN mst_Producto f ON f.Id=e.idProducto\tINNER JOIN mst_Apertura g ON g.Numero=a.IdApertura and g.IdUsuario = a.IdUsuario and g.IdCaja = a.IdCaja\tINNER JOIN mst_Grupo h ON h.Id=f.IdGrupo\tWHERE a.Anulado=0 and (b.Flag=1 and b.Anulado=0) and g.Numero = @id and a.IdPiso = @idpiso and a.IdCaja = @idcaja and a.IdUsuario = @idusuario\tGROUP BY g.Numero,g.Fecha,f.nombreProducto,b.PrecioUnit,h.Descripcion\tORDER BY h.Descripcion asc\tendelse \tbegin\t\tif @idpiso = 0\t\t\tbegin\t\t\t\tSELECT g.Numero,\t\t\t\tCAST(g.Fecha AS DATE) as Fecha,\t\t\t\t0.00 as 'Cant',\t\t\t\t'XXX' as 'nombreProducto',\t\t\t\t0.00 as 'PrecioUnit',\t\t\t\tSUM(b.Total) as ImporteTotal ,\t\t\t\t'Todos' as Piso,\t\t\t\tMIN(A.NumeroDoc) as 'Num_Ini',\t\t\t\tMAX(a.NumeroDoc) AS 'Num_Max'\t\t\t\t,a.SerieDoc,\t\t\t\tA.IdDocumento\t\t\t\tFROM mst_Venta a\t\t\t\tINNER JOIN mst_Venta_det b ON a.Id=b.IdVenta\t\t\t\tINNER JOIN tabla_FormaPago c ON c.IdVenta = a.id\t\t\t\tINNER JOIN mst_ProductoPresentacion d ON d.Id=b.IdProducto\t\t\t\tINNER JOIN mst_ProductoDetalle e ON e.Id=d.idProductosDetalle\t\t\t\tINNER JOIN mst_Producto f ON f.Id=e.idProducto\t\t\t\tINNER JOIN mst_Apertura g ON g.Numero=a.IdApertura and g.IdUsuario = a.IdUsuario and g.IdCaja = a.IdCaja\t\t\t\tINNER JOIN mst_Grupo h ON h.Id=f.IdGrupo\t\t\t\tWHERE a.Anulado=0 and (b.Flag=1 and b.Anulado=0) and g.Numero =@id and a.IdCaja = @idcaja and a.IdUsuario = @idusuario\t\t\t\tGROUP BY g.Numero,g.Fecha,A.SerieDoc, a.IdDocumento\t\t\tend\t\telse\t\t\tbegin\t\t\t\tSELECT g.Numero,\t\t\t\tCAST(g.Fecha AS DATE) as Fecha,\t\t\t\t0.00 as 'Cant',\t\t\t\t'XXX' as 'nombreProducto',\t\t\t\t0.00 as 'PrecioUnit',\t\t\t\tSUM(b.Total) as ImporteTotal ,\t\t\t\t'Todos' as Piso,\t\t\t\tMIN(A.NumeroDoc) as 'Num_Ini',\t\t\t\tMAX(a.NumeroDoc) AS 'Num_Max'\t\t\t\t,a.SerieDoc,\t\t\t\tA.IdDocumento\t\t\t\tFROM mst_Venta a\t\t\t\tINNER JOIN mst_Venta_det b ON a.Id=b.IdVenta\t\t\t\tINNER JOIN tabla_FormaPago c ON c.IdVenta = a.id\t\t\t\tINNER JOIN mst_ProductoPresentacion d ON d.Id=b.IdProducto\t\t\t\tINNER JOIN mst_ProductoDetalle e ON e.Id=d.idProductosDetalle\t\t\t\tINNER JOIN mst_Producto f ON f.Id=e.idProducto\t\t\t\tINNER JOIN mst_Apertura g ON g.Numero=a.IdApertura and g.IdUsuario = a.IdUsuario and g.IdCaja = a.IdCaja\t\t\t\tINNER JOIN mst_Grupo h ON h.Id=f.IdGrupo\t\t\t\tWHERE a.Anulado=0 and (b.Flag=1 and b.Anulado=0) and g.Numero =@id and a.IdCaja = @idcaja and a.IdUsuario = @idusuario and a.IdPiso = @idpiso\t\t\t\tGROUP BY g.Numero,g.Fecha,A.SerieDoc, a.IdDocumento\t\t\tend\tend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarPago",
    "Content": "CREATE proc [dbo].[spInsertarPago]@idventa int,@contado bit,@credito bit,@efectivo money,@visa money,@mastercard money,@total money,@vuelto moneyasdeclare @total2 money = (select TotalVenta from mst_Venta where id = @idventa)insert into tabla_formapago(idventa,contado,credito,efectivo,visa,mastercard,total, Vuelto)values(@idventa,@contado,@credito,@efectivo,@visa,@mastercard,@total2,@vuelto)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarSerie",
    "Content": "CREATE proc [dbo].[spModificarSerie]@id int,@serie varchar(50),@usuariomodifica varchar(50)asupdate mst_Serie setSerie = @serie,UsuarioModifica =@usuariomodifica,fechamodifica = GETDATE()where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetUnidadMedidas",
    "Content": "CREATE proc [dbo].[SpGetUnidadMedidas]@text VARCHAR(50) = ''asselect top 200Id,nombreUnidad as 'Descripcion',factorfrom mst_UnidadMedidawhere Estado = 1 and Flag =1and nombreUnidad like '%'+@text+'%'ORDER BY ID DESC"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarProveedor",
    "Content": "------CREATE proc [dbo].[spModificarProveedor]@id int,@nombre varchar(100),@ruc varchar(20),@direccion varchar(100),@telefono varchar(20),@email varchar(100),@estado bit,@usuariomodifica varchar(50)asupdate mst_Proveedor setnombre = @nombre,ruc = @ruc,direccion = @direccion,telefono = @telefono,email = @email,estado = @estado,usuariomodifica = @usuariomodifica,fechamodifica = GETDATE()where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarTalla",
    "Content": "--modificarCREATE proc [dbo].[spModificarTalla]@id int,@descripcion varchar(10),@estado bit,@usuarioModifica varchar(50)asupdate mst_Talla set descripcion  = @descripcion,usuarioModifica = @usuariomodifica,estado = @estado,fechaModifica = GETDATE()where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetUsuarioById",
    "Content": "CREATE proc [dbo].[SpGetUsuarioById]@id intasselect * from mst_Usuarioswhere id = @id and estado = 1 and flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarProveedor",
    "Content": "--------CREATE proc [dbo].[spEliminarProveedor]@id intasupdate mst_Proveedor set estado = 0, flag = 0where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarTipoUsuario",
    "Content": "CREATE proc [dbo].[spModificarTipoUsuario]@id int,@descripcion varchar(100),@usuariomodifica varchar(50),@estado bit asupdate mst_TipoUsuario setdescripcion = @descripcion,usuarioModifica = @usuariomodifica,fechaModifica = GETDATE(),estado = @estadowhere id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetUsuarios",
    "Content": "CREATE proc [dbo].[SpGetUsuarios]@text varchar(max)asselect * from mst_Usuarioswhere estado = 1 and flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarProveedor",
    "Content": "-----------------CREATE proc [dbo].[spMostrarProveedor]@top bitasif(@top =0)select TOP 200 id [Id],nombre Nombre,ruc Ruc,direccion Direccion,telefono Telefono,email Email,usuariocrea [Usuario Crea.],fechacrea [Fecha Crea],usuariomodifica [Usuario Modifica],fechamodifica [fecha Modifica],estado Estadofrom mst_Proveedorwhere flag= 1order by id descelseselect id [Id],nombre Nombre,ruc Ruc,direccion Direccion,telefono Telefono,email Email,usuariocrea [Usuario Crea.],fechacrea [Fecha Crea],usuariomodifica [Usuario Modifica],fechamodifica [fecha Modifica],estado Estadofrom mst_Proveedorwhere flag= 1order by id desc"
  },
  {
    "Type": "VIEW",
    "Name": "vw_tbl_cronograma_cpe",
    "Content": "CREATE view [dbo].[vw_tbl_cronograma_cpe]asSELECTvc.id 'id_cronograma',vc.idVenta 'id_cab_cpe',CAST(vc.fecha AS varchar) 'fecha',CONCAT('Cuota', RIGHT('000' + Ltrim(Rtrim(vc.nroCuota)), 3)) 'nro_cuota',vc.monto 'monto'FROM venta_cronograma vcwhere vc.estado = 1 and vc.flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarServidor",
    "Content": "CREATE proc [dbo].[spInsertarServidor]@id int,@Descripcion varchar(100),@Gestor varchar(50),@Driver varchar(50),@Servidor varchar(50),@Puerto varchar(100),@Usuario varchar(50),@Contrasenia varchar(50),@BaseDatos varchar(50),@RutaScript varchar(50),@RutaBaseDatos varchar(200),@SeguridadDatos varchar(50),@Logotipo imageasif((select count(id) from MST_SERVIDORES where id = @id) > 0)beginupdate MST_SERVIDORES set Descripcion = @Descripcion,Gestor = @Gestor,Driver = @Driver,Servidor = @Servidor,Puerto = @Puerto,Usuario = @Usuario,Contrasenia = @Contrasenia,BaseDatos = @BaseDatos,RutaScript = @RutaScript,RutaBaseDatos = @RutaBaseDatos,SeguridadDatos = @SeguridadDatos,Logotipo = @Logotipowhere id = @idendelsebegininsert into MST_SERVIDORES(Descripcion,Gestor,Driver,Servidor,Puerto,Usuario,Contrasenia,BaseDatos,RutaScript,RutaBaseDatos,SeguridadDatos,Logotipo)values(@Descripcion,@Gestor,@Driver,@Servidor,@Puerto,@Usuario,@Contrasenia,@BaseDatos,@RutaScript,@RutaBaseDatos,@SeguridadDatos,@Logotipo)end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarAlmacen",
    "Content": "CREATE proc [dbo].[spInsertarAlmacen]@nombre varchar(100),@usuariocrea varchar(50)asinsert into mst_Almacen(nombre, usuariocrea)values(@nombre,@usuariocrea)declare @id_almacen int = SCOPE_IDENTITY();"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpCheckLote",
    "Content": "CREATE proc [dbo].[SpCheckLote]asselectActivarLotefrom tabla_configuracion_general"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spIsertarFalatantes",
    "Content": "CREATE proc [dbo].[spIsertarFalatantes]@id intasinsert into tabla_Usuarios_Menu(idmenu,idusuario,estado)select m.id,@id,1 from tabla_Menus mleft join tabla_Usuarios_Menu umon m.id = um.idmenu and um.idusuario = @id and um.Estado = 1where um.idmenu IS NULL--insert into tabla_Usuario_SubMenu (idmenu,idsubmenu,idusuario,estado)select sm.idmenu as 'idmenu' ,sm.id as 'idsubmenu',@id,1from tabla_Menus minner join tabla_SubMenus smon m.id = sm.idmenuleft join tabla_Usuario_SubMenu usmon usm.idmenu = sm.idmenu and usm.idsubmenu = sm.id and idusuario = @idand usm.Estado = 1where usm.id IS NULLorder by sm.idmenu,sm.id--exec spIsertarFalatantes 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAnularAlmacenTraslado",
    "Content": "CREATE proc [dbo].[SpAnularAlmacenTraslado]@id intasupdate mst_almacen_traslado set estado = 0,flag = 0, total = 0where id = @id select 1;"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarResumen",
    "Content": "-----------------------CREATE proc [dbo].[spInsertarResumen]@id int,@serie varchar(100),@fecharef datetime,@numticket varchar(100),@hassunat varchar(100),@respuesta varchar(100),@numitems int,@cod_sunat varchar(10),@tipoproceso char(2),@tipoprocesoaux char(2)asif(@id = 0)insert into Tbl_Resumen(Serie,Fecha_Referencia,Fecha_Documento,NumTicket,Hash_Sunat,respuesta,numitems,cod_respuesta,tipoproceso,tipoprocesoaux)values(@serie,@fecharef,getdate(),@numticket,@hassunat,@respuesta,@numitems,@cod_sunat,@tipoproceso,@tipoprocesoaux)elseupdate Tbl_Resumen set Respuesta = @respuesta, hash_sunat = @hassunat, cod_respuesta = @cod_sunatwhere id = @id and tipoproceso = @tipoproceso"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_getIcbAmount",
    "Content": "CREATE proc [dbo].[sp_getIcbAmount]asselect dbo.getIcbAmount()"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarUnidad",
    "Content": "-------------------------------------------------------------------------modificar unidad--------------CREATE procedure [dbo].[spModificarUnidad]@id int,@nombre varchar(100),@factor decimal(18,2),@usuarioModifica varchar(50),@estado bit asupdate mst_UnidadMedida set nombreUnidad = @nombre,factor = @factor, usuarioModifica = @usuarioModifica, fechaModifica = getdate(), estado = @estadowhere id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarProveedor",
    "Content": "------------------------CREATE proc [dbo].[spBuscarProveedor]@buscar varchar(100)asselect id [Id],nombre Nombre,ruc Ruc,direccion Direccion,telefono Telefono,email Email,usuariocrea [Usuario Crea.],fechacrea [Fecha Crea],usuariomodifica [Usuario Modifica],fechamodifica [fecha Modifica],estado Estadofrom mst_Proveedorwhere nombre like '%' + @buscar+'%' and flag = 1order by id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarServidores",
    "Content": "CREATE proc [dbo].[spMostrarServidores]asselect * from MST_SERVIDORES"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpCloseCompra",
    "Content": "CREATE proc [dbo].[SpCloseCompra]@Id int,@close bitasupdate mst_Compras set isclosed = @closewhere Id = @Idselect @id as id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarAlmacen",
    "Content": "CREATE proc [dbo].[spModificarAlmacen]@id int,@nombre varchar(100),@estado bit,@usuariomodifica varchar(50)asupdate mst_Almacen setnombre =@nombre,estado = @estado,usuariomodifica = @usuariomodifica,fechamodifica = GETDATE()where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarMenus",
    "Content": "CREATE proc [dbo].[spMostrarMenus]asselect * from tabla_Menus"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarResumen",
    "Content": "--EXEC spMostrarResumen '09','2019','RA'CREATE proc [dbo].[spMostrarResumen]@fecha char(2),@anio char(4),@tipoproceso char(2)asdeclare @tpaux char(2) = 'RC'if(@tipoproceso = 'RA')\tbegin\tSET @tipoproceso = 'RC'\tSET @tpaux = 'RA'endif(@fecha = '')beginselect * from Tbl_Resumenwhere (tipoproceso = @tipoproceso AND TipoProcesoAux = @tpaux) and (tipoproceso = @tpaux and TipoProcesoAux = @tpaux)endelsebeginselect * from Tbl_Resumenwhere MOnth(Fecha_Documento) = @fechaand YEAR(Fecha_Documento) = @anio and (tipoproceso = @tipoproceso AND TipoProcesoAux = @tpaux) and (tipoproceso = @tpaux and TipoProcesoAux = @tpaux)order by Fecha_Referencia descend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarUsuario",
    "Content": "CREATE proc [dbo].[spModificarUsuario]@idusuario int,@idtipousuario int,@nombre varchar(100),@dni varchar(50),@direccion varchar(200),@telefono varchar(100),@usuario varchar(50),@pass varchar(50),@usuariomodifica varchar(50),@estado bit,@correo varchar(200),@foto image,@docVentaDefecto VARCHAR(2)asupdate mst_Usuarios setidtipoUsuario = @idtipousuario,nombre = @nombre,dni = @dni,direccion = @direccion,telefono = @telefono,usuario = @usuario,pass = @pass,usuariomodifica = @usuariomodifica,fechamodifica =  GETDATE(),estado = @estado,correo = @correo,Foto = @foto,DocVentaDefecto = @docVentaDefectowhere id = @idusuario"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarDetalles",
    "Content": "CREATE proc [dbo].[spMostrarDetalles]@id intasselect * from mst_Producto pinner join mst_Proveedor pd on p.idproveedor =pd.idwhere p.Id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetReporteComision",
    "Content": "CREATE proc [dbo].[SpGetReporteComision]@token varchar(max)asSELECT c.*, cp.*, u.nombre FROM Comision cINNER JOIN ComisionPagos cpON c.Id = cp.IdComisionINNER JOIN mst_Usuarios uON c.IdUsuario = u.IdWHERE cp.token = @token"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarAlmacen",
    "Content": "--CREATE proc [dbo].[spEliminarAlmacen]@id intasupdate mst_Almacen set estado = 0,flag=0where id=@id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spListarResumenesFaltantes",
    "Content": "-----------------------------------------------------CREATE proc [dbo].[spListarResumenesFaltantes]asselect\t\t\tLTRIM(RTRIM(TIPO_COMPROBANTE)) 'TIPO_COMPROBANTE',\t\t\tLTRIM(RTRIM(Num_Comprobante)) 'NRO_COMPROBANTE',\t\t\tLTRIM(RTRIM(Tipo_Comprobante_Ref)) 'TIPO_COMPROBANTE_REF',\t\t\tLTRIM(RTRIM(Num_Comprobante_Ref)) 'NRO_COMPROBANTE_REF',\t\t\tLTRIM(RTRIM(TIPO_DOC)) 'TIPO_DOCUMENTO',\t\t\tLTRIM(RTRIM(NUMERO_DOC)) 'NRO_DOCUMENTO',\t\t\tLTRIM(RTRIM(CLIENTE)) 'CLIENTE',\t\t\tformat(Total,'N','es-pe') 'TOTAL',\t\t\tformat(Gravada,'N','es-pe') 'GRAVADA',\t\t\tformat(Isc,'N','es-pe') 'ISC',\t\t\tformat(IGV,'N','es-pe')\t'IGV',\t\t\tformat(OTROS,'N','es-pe') 'OTROS',\t\t\tCARGO_X_ASIGNACION 'CARGO_X_ASIGNACION',\t\t\tformat(Monto_Cargo_X_Asignacion,'N','es-pe') 'MONTO_CARGO_X_ASIG',\t\t\tformat(Exonerado,'N','es-pe')\t'EXONERADO',\t\t\tformat(Inafecto,'N','es-pe') 'INAFECTO',\t\t\tformat(Exportacion,'N','es-pe') 'EXPORTACION',\t\t\tformat(GRATUITAS,'N','es-pe') 'GRATUITAS',\t\t\tId as 'ID',\t\t\tDESCRIPCION AS 'DESCRIPCION',\t\t\tformat(Otro_Imp,'N','es-pe') as 'OTROS_IMPUESTOS',\t\t\tFecha,\t\t\tMONTH(Fecha) MES,\t\t\tDAY(Fecha) DIA,\t\t\tYEAR(Fecha) ANIO\t\t\tfrom Tbl_Resumen_Det\t\t\twhere MONTH(Fecha) = \t\t\tMONTH(GETDATE()) \t\t\t\t\t\t--4\t\t\tand Tipo_Comprobante = '03' and Enviado = 0\t\t\torder by Fecha"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarResumen_Det",
    "Content": "-----------------CREATE proc [dbo].[spMostrarResumen_Det]@fecha date,@doc char(2),@bit bit,@tipoproceso char(2)asdeclare @enviado_ bit, @doc_ char(2), @otro bitif(@tipoproceso = 'RC')\tbegin\t\tset @enviado_ = 0\t\tset @doc_ = '03'\t\tset @otro = 0\tendelse\tbegin\t\tset @enviado_ = 1\t\tset @doc_ = @doc\t\tset @otro = 1endif(@bit = 0)begin\tif(@otro = 0)\t\tbegin\t\t\tselect\t\t\tID,\t\t\tFECHA 'F_EMISION',\t\t\tTIPO_COMPROBANTE 'TIPO_CPE',\t\t\tNum_Comprobante 'NRO_CPE',\t\t\tTipo_Comprobante_Ref 'D_AF',\t\t\tNum_Comprobante_Ref 'NRO_AFEC',\t\t\tTIPO_DOC 'TD_CLI',\t\t\tNUMERO_DOC 'RUC_DNI',\t\t\tCLIENTE 'CLIENTE',\t\t\tTotal 'TOTAL',\t\t\tdescripcion 'DESCRIPCION'\t\t\tfrom Tbl_Resumen_Det\t\t\twhere Fecha = @fecha and Enviado = @enviado_ and Tipo_Comprobante = @doc_\t\tend\telse\t\tbegin\t\t\tselect\t\t\tid_cab_cpe 'ID',\t\t\tfecha_emi_doc_cpe 'F_EMISION',\t\t\tcodigo 'TIPO_CPE',\t\t\tserie_nro_doc_cpe 'NRO_CPE',\t\t\ttipo_doc_afecta 'D_AF',\t\t\tnro_doc_afecta 'NRO_AFEC',\t\t\ttipo_doc_cli 'TD_CLI',\t\t\truc_dni_cliente 'RUC_DNI',\t\t\tnombre_cliente 'CLIENTE',\t\t\ttotal_cpe 'TOTAL',\t\t\t'' 'DESCRIPCION'\t\t\tfrom vw_tbl_cab_cpe \t\t\twhere fecha_emi_doc_cpe = @fecha and doc_firma = 1 and doc_cdr = 1 and codigo = @doc_\t\tend\t\tendelsebegin\tif(@otro = 0)\t\tbegin\t\t\tselect\t\t\tLTRIM(RTRIM(TIPO_COMPROBANTE)) 'TIPO_COMPROBANTE',\t\t\tLTRIM(RTRIM(Num_Comprobante)) 'NRO_COMPROBANTE',\t\t\tLTRIM(RTRIM(Tipo_Comprobante_Ref)) 'TIPO_COMPROBANTE_REF',\t\t\tLTRIM(RTRIM(Num_Comprobante_Ref)) 'NRO_COMPROBANTE_REF',\t\t\tLTRIM(RTRIM(TIPO_DOC)) 'TIPO_DOCUMENTO',\t\t\tLTRIM(RTRIM(NUMERO_DOC)) 'NRO_DOCUMENTO',\t\t\tLTRIM(RTRIM(CLIENTE)) 'CLIENTE',\t\t\tformat(Total,'N','es-pe') 'TOTAL',\t\t\tformat(Gravada,'N','es-pe') 'GRAVADA',\t\t\tformat(Isc,'N','es-pe') 'ISC',\t\t\tformat(IGV,'N','es-pe')\t'IGV',\t\t\tformat(OTROS,'N','es-pe') 'OTROS',\t\t\tCARGO_X_ASIGNACION 'CARGO_X_ASIGNACION',\t\t\tformat(Monto_Cargo_X_Asignacion,'N','es-pe') 'MONTO_CARGO_X_ASIG',\t\t\tformat(Exonerado,'N','es-pe')\t'EXONERADO',\t\t\tformat(Inafecto,'N','es-pe') 'INAFECTO',\t\t\tformat(Exportacion,'N','es-pe') 'EXPORTACION',\t\t\tformat(GRATUITAS,'N','es-pe') 'GRATUITAS',\t\t\tId as 'ID',\t\t\tDESCRIPCION AS 'DESCRIPCION',\t\t\tformat(Otro_Imp,'N','es-pe') as 'OTROS_IMPUESTOS'\t\t\tfrom Tbl_Resumen_Det\t\t\twhere Fecha = @fecha and Enviado = @enviado_ and Tipo_Comprobante = @doc_\t\tend\telse\t\tbegin\t\t\tselect\t\t\tLTRIM(RTRIM(codigo)) 'TIPO_COMPROBANTE',\t\t\tLTRIM(RTRIM(serie_nro_doc_cpe)) 'NRO_COMPROBANTE',\t\t\tLTRIM(RTRIM(tipo_doc_afecta)) 'TIPO_COMPROBANTE_REF',\t\t\tLTRIM(RTRIM(nro_doc_afecta)) 'NRO_COMPROBANTE_REF',\t\t\tLTRIM(RTRIM(tipo_doc_cli)) 'TIPO_DOCUMENTO',\t\t\tLTRIM(RTRIM(ruc_dni_cliente)) 'NRO_DOCUMENTO',\t\t\tLTRIM(RTRIM(nombre_cliente)) 'CLIENTE',\t\t\tformat(total_cpe,'N','es-pe') 'TOTAL',\t\t\tformat(ope_gravada,'N','es-pe') 'GRAVADA',\t\t\tformat(Isc,'N','es-pe') 'ISC',\t\t\tformat(IGV,'N','es-pe')\t'IGV',\t\t\tformat(0,'N','es-pe') 'OTROS',\t\t\t0 'CARGO_X_ASIGNACION',\t\t\tformat(0,'N','es-pe') 'MONTO_CARGO_X_ASIG',\t\t\tformat(0,'N','es-pe')\t'EXONERADO',\t\t\tformat(0,'N','es-pe') 'INAFECTO',\t\t\tformat(0,'N','es-pe') 'EXPORTACION',\t\t\tformat(0,'N','es-pe') 'GRATUITAS',\t\t\tid_cab_cpe as 'ID',\t\t\t'' AS 'DESCRIPCION',\t\t\tformat(otros_impuestos,'N','es-pe') AS 'OTROS_IMPUESTOS'\t\t\tfrom vw_tbl_cab_cpe\t\t\twhere fecha_emi_doc_cpe = @fecha and doc_firma = 1 and doc_cdr = 1 and codigo = @doc_\t\tendend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarVenta",
    "Content": "CREATE proc [dbo].[spModificarVenta]@id int,@codigoDoc char(2),@seriedoc char(4),@numerodoc int,@idcliente int,@codigotipodocsunat int,@dniruc varchar(20),@razonsocial varchar(200),@direccion varchar(200),@email varchar(200),@observacion text,@codigotiponotcredito char(2),@descripcionnotacred varchar(50),@codigodocafectado char(2),@numerodocafectado varchar(50),@usuariomodifica varchar(50),@idformapago int,@importepagado money,@totalletras text,@Hassh varchar(max),@tipomoneda varchar(10)asupdate mst_Venta set IdDocumento = @codigoDoc,SerieDoc = @serieDoc,NumeroDoc = @numeroDoc,IdCliente = @idcliente,CodigoTipoDoc = @codigoTipoDocSunat,DniRuc = @dniRuc,RazonSocial = @RazonSocial,Direccion = @direccion,Email = @email,Anulado = 0,Observacion = @observacion,TipoNotCred= @codigotiponotcredito,DescripNotCred = @descripcionnotacred,TipoDocAfectado = @codigotiponotcredito,NumeroDocAfectado = @numerodocafectado,UsuarioModifica = @usuariomodifica,FechaModifica = GETDATE(),IdFormaPago = @idformapago,importepagado = @importepagado,total_letras = @totalletras,Hassh = @Hassh,TipoMoneda = @tipomonedawhere Id = @idEXEC spIngresarOtrosImpuestos_Venta @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarFamilia_Segmento",
    "Content": "CREATE proc [dbo].[spMostrarFamilia_Segmento]@id char(2),@bit bitasif(@bit = 0)select codigo,codsegmento+codigo+' - ' + Descripcion [descripcion] from mst_familiawhere CodSegmento = @id and flag = 1elseselect codigo,codigo+' - ' + Descripcion [descripcion] from mst_segmentowhere flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarAlmacen",
    "Content": "CREATE proc [dbo].[spBuscarAlmacen]@buscar varchar(100)asselect * from mst_Almacenwhere Nombre like '%'+@buscar+'%'order by id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarVentaDetalle",
    "Content": "CREATE proc [dbo].[spModificarVentaDetalle]@id int,@idproducto int,@preciounitario money,@cantidad money,@descuento money,@idunidad int,@factor decimal,@subtotal money,@idventa int,@igv money,@total money,@descripcion text,@adicional1 text,@adicional2 date,@adicional3 varchar(200),@adicional4 varchar(200),@codbarra varchar(100),@igv_incluido bitasdeclare @igvaux money = (select igv from mst_Venta_det where Id = @id)declare @subaux money = (select Subtotal from mst_Venta_det where Id = @id)declare @descaux money = (select descuento from mst_Venta_det where Id = @id)--update mst_Venta set --TotalVenta = TotalVenta - @subaux,--Descuento = Descuento - @descaux--where Id = @idventaupdate mst_Venta_det setIdProducto = @idproducto,PrecioUnit = @preciounitario,Cantidad = @cantidad,Descuento = @descuento,IdUnidad = @idunidad,Factor = @factor,Subtotal = @subtotal,igv = @igv,total = @total,descripcion = @descripcion,Adicional1 = @adicional1,Adicional2=  @adicional2,Adicional3 = @adicional3,Adicional4 = @adicional4,codigoBarra = @codbarra,igv_incluido = @igv_incluidowhere Id = @id--update mst_Venta set--TotalVenta = TotalVenta + @subtotal,--Descuento = Descuento + @descuento--where Id = @idventaupdate tabla_FormaPago setTotal = Total - @subauxwhere IdVenta = @idventaupdate tabla_FormaPago setTotal = Total + @subtotalwhere IdVenta = @idventaexec spModificarVentaDetalle_Ext @id,@idproducto,@descripcion,@preciounitario, @cantidad,@totalexec spIngresarOtrosImpuestos_Venta @iddeclare @idalmacen int = (select top 1 IdAlmacen from mst_Venta where Id = @idventa)declare @iddetalle int = (select idProductosDetalle from mst_ProductoPresentacion where id = @idproducto)exec spStockActualizarSaldoItem @idalmacen,@iddetalle"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarClase_Familia",
    "Content": "CREATE proc [dbo].[spMostrarClase_Familia]@id char(4),@bit bitasif(@bit = 0)select c.Codigo,cod_segfam+codigo+ ' - ' + Descripcion [descripcion] from mst_Clase cwhere cod_segfam = @id and c.flag = 1elsedeclare @idaux char(2) = (select top 1 CodFamilia from mst_clase where Codigo = @id)select codigo,Descripcion [descripcion] from mst_Clasewhere Codigo = @idaux and flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarAlmacen",
    "Content": "--CREATE proc [dbo].[spMostrarAlmacen]asselect * from mst_Almacenorder by id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_insertar_fecha_apertura_venta",
    "Content": "CREATE proc [dbo].[sp_insertar_fecha_apertura_venta]@idventa int,@fecha dateasupdate mst_Venta set fecha_apertura = @fechawhere id = @idventa"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarCliente",
    "Content": "CREATE procedure [dbo].[spMostrarCliente]@top bitasif(@top = 0)select top 200 c.id as 'ID',td.descripcion as 'Documento',c.numeroDocumento as 'N° Documento',c.razonSocial as 'Razón',c.nombreComercial as 'Nombre Comercial',cd.Direccion as 'Direccion',c.telefono as 'Teléfono',c.correo as 'Correo',c.usuarioCrea as 'Usuario Crea',c.fechaCrea as 'Fecha Crea', c.usuarioModifica as 'Usuario Modifica', c.fechaModifica as 'Fecha Mod.',c.estado as 'Estado',TD.codigoSunat AS 'ID DOCUMENTO',ISNULL(c.nacionalidad, 0) as 'nacionalidad',c.DefaultPago,c.NombreCarrera 'NombreCarrera',ISNULL(c.IdProgramaEstudio, 0) 'IdProgramaEstudio',c.Nivelfrom mst_Cliente cinner join mst_TipoDocumento td on c.idDocumento = td.codigoSunatinner join mst_Cliente_Direccion cd on c.Id = cd.idclientewhere c.flag = 1 and cd.principal = 1order by c.Id descelseselectc.id as 'ID',td.descripcion as 'Documento',c.numeroDocumento as 'N° Documento',c.razonSocial as 'Razón',c.nombreComercial as 'Nombre Comercial',cd.Direccion as 'Direccion',c.telefono as 'Teléfono',c.correo as 'Correo',c.usuarioCrea as 'Usuario Crea',c.fechaCrea as 'Fecha Crea', c.usuarioModifica as 'Usuario Modifica', c.fechaModifica as 'Fecha Mod.',c.estado as 'Estado',TD.codigoSunat AS 'ID DOCUMENTO',ISNULL(c.nacionalidad, 0) as 'nacionalidad',c.DefaultPago,c.NombreCarrera 'NombreCarrera',ISNULL(c.IdProgramaEstudio, 0) 'IdProgramaEstudio',c.Nivelfrom mst_Cliente cinner join mst_TipoDocumento td on c.idDocumento = td.codigoSunatinner join mst_Cliente_Direccion cd on c.Id = cd.idclientewhere c.flag = 1 and cd.principal = 1order by c.Id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarClienteVenta",
    "Content": "CREATE procedure [dbo].[spMostrarClienteVenta]@id intasif(@id != 0)beginselect top 100  c.id as 'ID',td.descripcion as 'Documento',c.numeroDocumento as 'N',c.razonSocial as 'Razon',c.nombreComercial as 'Nombre_Comercial',cd.Direccion as 'Direccion',c.telefono as 'Telefono',c.correo as 'Correo',c.estado as 'Estado',TD.codigoSunat AS 'ID_DOCUMENTO',cd.Principal,ISNULL(c.nacionalidad, 0) as 'nacionalidad',isnull(c.DefaultPago, 'C') as 'DefaultPago',c.NombreCarrera 'NombreCarrera'from mst_Cliente cinner join mst_TipoDocumento td on c.idDocumento = td.codigoSunatinner join mst_Cliente_Direccion cd on c.Id = cd.IdClientewhere c.flag = 1 and c.Id = @idorder by c.id ASCendelsebeginselect top 100  c.id as 'ID',td.descripcion as 'Documento',c.numeroDocumento as 'N',c.razonSocial as 'Razon',c.nombreComercial as 'Nombre_Comercial',cd.Direccion as 'Direccion',c.telefono as 'Telefono',c.correo as 'Correo',c.estado as 'Estado',TD.codigoSunat AS 'ID_DOCUMENTO',cd.Principal,ISNULL(c.nacionalidad, 0) as 'nacionalidad',isnull(c.DefaultPago, 'C') as 'DefaultPago',c.NombreCarrera 'NombreCarrera'from mst_Cliente cinner join mst_TipoDocumento td on c.idDocumento = td.codigoSunatinner join mst_Cliente_Direccion cd on c.Id = cd.IdClientewhere c.flag = 1 order by c.id ASCend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpDeleteCliente",
    "Content": "CREATE proc [dbo].[SpDeleteCliente]@id intasupdate mst_Cliente set estado = 0, flag = 0where Id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spFormatoConvenio",
    "Content": "CREATE proc [dbo].[spFormatoConvenio]@id intasselect c.Id,c.IdPedido,c.CodigoDoc,c.IdCliente,c.DniRuc,c.RazonSocial,c.Direccion,u.nombre as IdUsuario,c.BolFac,c.sub_total,c.igv,c.Descuento,c.Total,c.Beneficiario,c.IdConvenio,mc.Razon,c.IdParentesco,p.Descripcion as parentesco,c.Fecha,dc.Descripcion,dc.Cantidad,dc.Precio,dc.Subtotal,dc.Total as TotalDetfrom tabla_Pre_Venta_Convenio cinner join mst_convenios mc on mc.Id = c.IdConvenioinner join tabla_Pre_Venta_Detalle_Convenio dc on c.Id = dc.IdPedidoinner join Parentesco p on p.Id = c.IdParentescoinner join mst_Usuarios u on u.Id = c.IdUsuariowhere c.Id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spVerificarVendedor",
    "Content": "CREATE proc [dbo].[spVerificarVendedor]@idvendedor int,@idmesa int,@idpiso intasselect * from tabla_Pre_Ventawhere IdMesa = @idmesa and IdPiso = @idpiso and Pagado=0and Eliminado = 0and IdUsuario = @idvendedor"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarColor",
    "Content": "--mostrarCREATE proc [dbo].[spMostrarColor]@top bitasif(@top=0)select TOP 200 id as 'ID', descripcion as 'Descripción',usuarioCrea as 'Usuario de Creación',fechaCrea as 'Fecha de Creación',usuarioModifica as 'Usuario de Modificación',fechaModifica as 'Fecha de Modificación',estado as 'Estado'from mst_Colorwhere flag = 1order by id descelseselect id as 'ID', descripcion as 'Descripción',usuarioCrea as 'Usuario de Creación',fechaCrea as 'Fecha de Creación',usuarioModifica as 'Usuario de Modificación',fechaModifica as 'Fecha de Modificación',estado as 'Estado'from mst_Colorwhere flag = 1order by id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarProducto_Clase",
    "Content": "CREATE proc [dbo].[spMostrarProducto_Clase]@id char(6),@bit bitasif(@bit = 0)select codigo,cod_segfamclas+codigo+' - ' + Descripcion [descripcion] from mst_ProductoSunatwhere cod_segfamclas = @id and flag = 1elsedeclare @idaux char(2) = (select top 1 codclase from mst_ProductoSunat where Codigo = @id)select codigo,descripcion [descripcion] from mst_Familiawhere codigo = @idaux and flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpDeleteClienteDireccion",
    "Content": "CREATE proc [dbo].[SpDeleteClienteDireccion]@id intasupdate mst_Cliente_Direccion set Estado = 0, Flag = 0where Id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddSeguimiento",
    "Content": "CREATE PROCEDURE [dbo].[SpAddSeguimiento]@id int,@idVenta int,@idTipoPago int,@descripcion VARCHAR(max),@monto float,@fechaPago date,@validado bit,@idApertura int,@idUsuario int,@idCaja int,@descontarDeuda bit,@usuario VARCHAR(50)asif @id = 0begin\tINSERT into tbl_Seguimiento (IdVenta, IdTipoPago, descripcion, Monto, FechaPago, validado, IdApertura, IdUsuario, IdCaja, UsuarioCrea)\tVALUES(@idVenta, @idtipoPago, @descripcion, @monto,@fechaPago, @validado, @idApertura, @idUsuario, @idCaja, @usuario)\tselect CAST(SCOPE_IDENTITY() as int)endelsebegin\tupdate tbl_Seguimiento set IdVenta =@idVenta, IdTipoPago=@idtipoPago,descripcion=@descripcion,Monto=@monto, FechaPago=@fechaPago,\tvalidado=@validado,idApertura=@idApertura,idUsuario=@idUsuario,idCaja=@idCaja,\tUsuarioCrea = @usuario\twhere id=@id\tselect @idendif @descontarDeuda = 1 begin exec spIrCancelando_Deuda_Seguimiento @idVenta end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spLimpiarPedidos",
    "Content": "CREATE proc [dbo].[spLimpiarPedidos]@id_usuario intasDELETE tabla_Pre_Venta_Detalle       FROM tabla_Pre_Venta_Detalle pd INNER JOIN tabla_Pre_Venta p            ON pd.IdMesa = p.IdMesa AND pd.IdPiso = p.IdPiso       WHERE p.IdUsuario=@id_usuariodelete from tabla_Pre_Venta where IdUsuario = @id_usuario--declare @tipo_usuario varchar(250) = (select tu.descripcion from mst_Usuarios uinner  join mst_TipoUsuario tu on u.idtipoUsuario = tu.idwhere u.id = @id_usuario)if @tipo_usuario = 'admin' or @tipo_usuario = 'administrador'begindelete from tabla_Pre_Venta delete from tabla_Pre_Venta_DetalleDBCC CHECKIDENT ('[tabla_Pre_Venta]', RESEED, 0);DBCC CHECKIDENT ('[tabla_Pre_Venta_detalle]', RESEED, 0);end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMarcarEnviados_Resumen_Det",
    "Content": "---CREATE proc [dbo].[spMarcarEnviados_Resumen_Det]@fecha date,@numticket varchar(100),@idresumen int,@bit bitasif(@bit = 0)beginupdate Tbl_Resumen_Det setEnviado = 1,NumTicket = @numticket,IdResumen = @idresumenwhere cast(fecha as date) = cast(@fecha as date) and enviado = 0endelsebeginupdate Tbl_Resumen_Det setEnviado = 1,NumTicketBajas = @numticket,idbajas = @idresumenwhere cast(fecha as date) = cast(@fecha as date) and enviado = 1end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_insertar_monedas",
    "Content": "CREATE proc [dbo].[sp_insertar_monedas]@m010 decimal(9, 3),@m020 decimal(9, 3),@m050 decimal(9, 3),@m1 decimal(9, 3),@m2 decimal(9, 3),@m5 decimal(9, 3),@m10 decimal(9, 3),@m20 decimal(9, 3),@m50 decimal(9, 3),@m100 decimal(9, 3),@m200 decimal(9, 3),@idapertura int,@idcaja int,@idusuario intasupdate mst_Apertura set m010 = @m010,m020 = @m020,m050 = @m050,m1 = @m1,m2 = @m2,m5 = @m5,m10 = @m10,m20 = @m20,m50 = @m50,m100 = @m100,m200 = @m200where Numero = @idapertura and IdCaja = @idcaja and IdUsuario = @idusuario"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spStockSalidas",
    "Content": "CREATE proc [dbo].[spStockSalidas]@idventa int,@bit intasdeclare @idprod intdeclare @cantidad moneydeclare @factor int declare @valor moneydeclare @idalmacen intif(@bit=1)declare Temp cursorFOR(select pp.idProductosDetalle,cantidad,um.factor,v.IdAlmacen from mst_venta_det vdinner join mst_unidadmedida um on vd.idunidad= um.idinner join mst_venta v on vd.IdVenta = v.Idinner join mst_ProductoPresentacion pp on vd.IdProducto = pp.Idwhere idventa = @idventa) open Tempfetch Temp into @idprod,@cantidad,@factor,@idalmacen;while(@@fetch_status = 0)begin\t\t\tset @valor = @cantidad  * CAST( @factor as money);\tupdate Stocks_Acumulados set \tsalidas = salidas + @valor ,\tsaldo = entradas - (Salidas + @valor)\twhere IdProducto = @idprod and idalmacen = @idalmacen;\tfetch Temp into @idprod,@cantidad,@factor,@idalmacen;\tend\tclose Temp;\tDEALLOCATE Temp;"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrar",
    "Content": "CREATE proc [dbo].[spMostrar]@tbl varchar(100),@tops varchar(5)asDeclare @tabla nvarchar(max);declare @top nvarchar(500);set @top = '@tops varchar(5)';if(@tops != 0)Set @tabla = 'SELECT top '+@tops+' * from ' + @tbl + ' where flag = 1 order by id asc'elseSet @tabla = 'SELECT * from ' + @tbl + ' where flag = 1 order by id asc'exec sp_executesql @tabla"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarCombo",
    "Content": "CREATE Procedure [dbo].[spMostrarCombo]( @nombreTabla nvarchar(max), @columna varchar(max), @columna2 varchar(max), @columna3 varchar(max))AsDeclare @tabla nvarchar(max);declare @columnas nvarchar(max);set @columnas = '@columna varchar(max)';if(@columna3='0')Set @tabla = 'SELECT '+ cast(@columna as varchar)+',' + cast(@columna2 as varchar)+ ' FROM ' + QUOTENAME(@nombreTabla) + ' where flag=1 and estado=1';else Set @tabla = 'SELECT '+ cast(@columna as varchar)+', cast(' +@columna2 + ' as varchar) + '' - '' + cast('+ @columna3 + ' as varchar)'+@columna2 +' FROM ' + QUOTENAME(@nombreTabla) + ' where flag=1 and estado=1 ';exec sp_executesql @tabla"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetUsuariosVendedores",
    "Content": "CREATE proc [dbo].[spGetUsuariosVendedores]asselect id,nombrefrom mst_Usuarioswhere Estado = 1 and Flag = 1 and idtipoUsuario = 3"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpDeleteCompra",
    "Content": "CREATE proc [dbo].[SpDeleteCompra]@id intasupdate mst_Compras set Estado = 0, Flag = 0where id = @idselect @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddPedidosDetalles",
    "Content": "CREATE proc [dbo].[SpAddPedidosDetalles]@id int,@idPedido int,@idProducto int,@descripcion varchar(200),@codigoBarra varchar(50),@idUnidad int,@unidad varchar(50),@factor float,@cantidad float,@precio float,@subTotal float,@igv float,@descuento float,@total float,@eliminado float,@igvIncluido bit,@isCodBarra bitasif @id = 0begin\tinsert into PedidosDetalles(IdPedido, IdProducto, Descripcion, CodigoBarra,\tIdUnidad, Unidad, Factor, Cantidad, Precio, SubTotal, Igv, Descuento, Total,\tEliminado, IgvIncluido, IsCodBarra)\tvalues(@idPedido, @idProducto, @descripcion, @codigoBarra, @idUnidad,\t@unidad, @factor, @cantidad, @precio, @subTotal, @igv, @descuento, @total,\t@eliminado, @igvIncluido, @isCodBarra)\tselect CAST(SCOPE_IDENTITY() as int)endelsebegin\tupdate PedidosDetalles set IdProducto=@idProducto,Descripcion=@descripcion,\tCodigoBarra=@codigoBarra,IdUnidad=@idUnidad,Unidad=@unidad,Factor=@factor,\tCantidad=@cantidad,Precio=@precio,SubTotal=@subTotal,Igv=@igv,\tDescuento=@descuento,Total=@total,Eliminado=@eliminado,IgvIncluido=@igvIncluido,\tIsCodBarra=@isCodBarra\twhere IdPedido=@idPedido\tselect @idPedidoend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarResumen_Det",
    "Content": "CREATE proc [dbo].[spInsertarResumen_Det]@id bigint,@Fecha date,@Tipo_Comprobante char(2),@Num_Comprobante varchar(50),@Tipo_Doc char(1),@Numero_Doc varchar(20),@Tipo_Comprobante_Ref char(2),@Num_Comprobante_Ref varchar(50),@Total money,@Gravada money,@Isc money,@Igv money,@Otros money,@Cargo_X_Asignacion bit,@Monto_Cargo_X_Asignacion money,@Exonerado money,@Inafecto money,@Exportacion money,@Gratuitas money,@Cliente varchar(100),@bit bit,@descripcion varchar(100),@Otro_Imp moneyasinsert into Tbl_Resumen_Det(Fecha,Tipo_Comprobante,Num_Comprobante ,Tipo_Doc,Numero_Doc,Tipo_Comprobante_Ref,Num_Comprobante_Ref,Total,Gravada,Isc,Igv,Otros,Cargo_X_Asignacion,Monto_Cargo_X_Asignacion,Exonerado,Inafecto,Exportacion,Gratuitas,Cliente,descripcion, Otro_Imp)values(@Fecha,@Tipo_Comprobante,@Num_Comprobante,@Tipo_Doc,@Numero_Doc,@Tipo_Comprobante_Ref,@Num_Comprobante_Ref,@Total,@Gravada,@Isc,@Igv,@Otros,@Cargo_X_Asignacion,@Monto_Cargo_X_Asignacion,@Exonerado,@Inafecto,@Exportacion,@Gratuitas,@cliente,@descripcion, @Otro_Imp)------if(@bit = 0)beginDECLARE @MENSAJE VARCHAR(100) = 'La Boleta numero '+@Num_Comprobante+', ha sido enviada para resumen diario'exec spInsertar_Resultado_Envio @id,1,1,'',@MENSAJE,''end------"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetProductoByIdAlmacenIdProductoDetalle",
    "Content": "CREATE proc [dbo].[SpGetProductoByIdAlmacenIdProductoDetalle]@idalmacen int,@idProductoDetalle intasselect id 'id',C_Interno 'codigo',Cod_Barra 'codigo_barra',RTRIM(LTRIM(Descripcion)) 'descripcion',U_Medida 'unidad_medida',Factor 'factor',Imagen 'imagen',Proveedor 'proveedor',Stock_Actual 'stock',F_Vencimiento 'fecha_vencimiento',Precio_Unit 'precio',IdAlmacen 'idalmacen',idUnidad 'idunidad',checkStockfrom vw_FiltroProductoswhere IdAlmacen = @idalmacen and C_Interno = @idProductoDetalleand principal = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarDirecciones",
    "Content": "CREATE proc [dbo].[spMostrarDirecciones]@idcliente intasselect Id,Direccion,Principal, Referencia from mst_Cliente_Direccion where flag = 1 and Estado = 1 and IdCliente = @idcliente"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpDeleteCompraDetalle",
    "Content": "CREATE proc [dbo].[SpDeleteCompraDetalle]@id intasupdate mst_ComprasDetalles set Estado = 0, Flag = 0where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarInventario",
    "Content": "CREATE proc [dbo].[spInsertarInventario]@idalmacen int,@observacion varchar(100),@usuariocrea varchar(50),@tipoinventario varchar(50),@fechacrea dateasinsert into mst_Inventario(Id_Almacen,Observacion, usuariocrea, TipoInventario, Estado, Flag, fechacrea)values(@idalmacen,@observacion,@usuariocrea,@tipoinventario, 1, 1, @fechacrea)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_agregar_count_pecho_piera_textObs",
    "Content": "CREATE proc [dbo].[sp_agregar_count_pecho_piera_textObs]@count_pecho int,@count_pierna int,@text_obs varchar(250),@id_pedido int,@mesa bitas--id_pedido es el id de la tabla pkif(@mesa = 0)\tBEGIN\t\tupdate tabla_Pre_Venta set countPierna = @count_pierna, countPecho = @count_pecho,\t\ttextObservation = @text_obs\t\twhere id = @id_pedido AND Pagado = 0 and Eliminado = 0\tENDelse\tBEGIN\t\tupdate tabla_Pre_Venta set countPierna = @count_pierna, countPecho = @count_pecho,\t\ttextObservation = @text_obs\t\twhere IdMesa = @id_pedido AND Pagado = 0 and Eliminado = 0 \tEND"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarConfig",
    "Content": "---CREATE proc [dbo].[spInsertarConfig]@ruc varchar(20),@razon varchar(100),@nombrecomercial varchar(100),@direccion varchar(100),@telefono varchar(20),@celular varchar(20),@web varchar(100),@correo varchar(100),@marca bit,@gruplinfam bit,@talla bit,@color bit,@medidas bit,@descripcion bit,@fvence bit,@proveedor bit,@visa bit,@mastercard bit,@logo image,@impresora1 varchar(100),@impresora2 varchar(100),@ubigeo varchar(100),@ciudad varchar(100),@distrito varchar(100),@igv money,@certificadocpe varchar(100),@ContraseniaCertificadoCpe varchar(100),@UsuarioSecundarioSol varchar(100),@ContraseniaUsuarioSecundarioSol varchar(100),@validar_vendedor bit,@modrapido bit,@codbarra bit,@numcopias int,@nummesas int,@produccion bit,@passcorreo varchar(50),@met_busqueda char(2),@urlose varchar(100),@tipoose int,@urlosebeta varchar(100),@urloseotros varchar(100),@urloseotrosbeta varchar(100),@urloseaux varchar(100),@urloseauxbeta varchar(100),@tipomoneda varchar(10),@puerto int,@ssl bit,@servidor_email varchar(50),@nube bitasinsert into tabla_configuracion_general (ruc, razonsocial, nombrecomercial, direccion, telefono, celular, web, correo, marca, grupo_linea_familia, talla, color, medida,descripcion,f_vence,proveedor,visa,mastercard,Logo, impresora1, impresora2,ubigeo, ciudad, distrito, igv, Certificado_CPE, ContraseniaCertificadoCpe, UsuarioSecundarioSol, ContraseniaUsuarioSecundarioSol, Validar_Vendedor, ModoRapido,CodBarra, NumCopias, NumMesas, Produccion, PassCorreo,Met_Busqueda, UrlOse, TipoOse, UrlOseBeta, UrlOseOtros,UrlOseOtrosBeta,UrlOseAux, UrlOseAuxBeta, TipoMoneda, Puerto, Ssl, Servidor_Email, Nube)values(@ruc,@razon,@nombrecomercial,@direccion,@telefono,@celular,@web,@correo,@marca,@gruplinfam,@talla,@color,@medidas,@descripcion,@fvence,@proveedor, @visa, @mastercard,@logo,@impresora1,@impresora2,@ubigeo,@ciudad,@distrito,@igv, @certificadocpe,@ContraseniaCertificadoCpe,@UsuarioSecundarioSol,@ContraseniaUsuarioSecundarioSol,@validar_vendedor,@modrapido,@codbarra, @numcopias,@nummesas,@produccion, @passcorreo,@met_busqueda,@urlose,@tipoose,@urlosebeta,@urloseotros,@urloseotrosbeta,@urloseaux,@urloseauxbeta,@tipomoneda,@puerto,@ssl,@servidor_email,@nube)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_insertar_venta_llevar",
    "Content": "CREATE proc [dbo].[sp_insertar_venta_llevar]@id int,@id_venta int,@id_contacto intasif @id = 0\tbegin\t\t\t\tdeclare @apertura int = (select IdApertura from mst_Venta where id = @id_venta)\t\tdeclare @idusuario int = (select IdUsuario from mst_Venta where id = @id_venta)\t\tdeclare @idcaja int = (select IdCaja from mst_Venta where id = @id_venta)\t\t\t\t \t\tUPDATE mst_Venta SET llevar = 1\t\twhere id = @id_venta \t\t--declare @fecha_actual date = getDate();\t\t\t\t--declare @countDelivery int = (select count(id) from mst_Venta where Fecha = @fecha_actual and delivery = 1)\t\tdeclare @countDelivery int = dbo.F_SecuenciaLlevar()\t\tif @countDelivery = null or @countDelivery = 0\t\tBEGIN\t\t\tset @countDelivery = 1\t\tEND\t\t\t \t\t\t\t\t\tinsert into venta_delivery (id_venta, id_contacto, estado, flag, num_correlative)\t\tvalues(@id_venta, 0, 1,1, @countDelivery)\t\t\t\tdeclare @id_despues int = SCOPE_IDENTITY();\t\tselect @id_despues as 'id'\tendelse\tbegin\t \tupdate venta_delivery set id_venta = @id_venta, id_contacto = 0\twhere id = @id\tend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetPedidosDetallesByIdPedido",
    "Content": "CREATE proc [dbo].[SpGetPedidosDetallesByIdPedido]@idPedido intasselect * from PedidosDetalleswhere IdPedido = @idPedido"
  },
  {
    "Type": "VIEW",
    "Name": "vw_tbl_cab_cpe",
    "Content": "CREATE VIEW [dbo].[vw_tbl_cab_cpe] AS SELECT\ta.Id AS id_cab_cpe,\ta.IdDocumento AS codigo,CASE\t\ta.IdDocumento \t\tWHEN '03' THEN\t\t'BOLETA ELECTRONICA' \t\tWHEN '01' THEN\t\t'FACTURA ELECTRONICA' \t\tWHEN '07' THEN\t\t'NOTA DE CREDITO' \t\tWHEN '08' THEN\t\t'NOTA DE DEBITO' \tEND AS descri_doc,\ta.SerieDoc AS serie_doc_cpe,\ta.NumeroDoc AS nro_doc_cpe,\ta.SerieDoc + '-' + CAST ( a.NumeroDoc AS CHAR ( 15 ) ) AS serie_nro_doc_cpe,\tCAST(a.FechaEmision as DATE) AS fecha_emi_doc_cpe,\t'' AS nro_guia_remi,\ta.TipoMoneda AS tipo_moneda,\tCAST ( '20' AS CHAR ( 2 ) ) AS tipo_afec_igv,\tCAST ( a.CodigoTipoDoc AS CHAR ( 2 ) ) AS tipo_doc_cli,\tCAST ( a.DniRuc AS CHAR ( 15 ) ) AS ruc_cliente,\tCAST ( a.DniRuc AS CHAR ( 8 ) ) AS dni_cliente,\tCAST ( a.DniRuc AS CHAR ( 15 ) ) AS ruc_dni_cliente,\ta.RazonSocial AS nombre_cliente,\ta.Direccion,\tCAST ( 'PERÚ' AS CHAR ( 25 ) ) AS pais,\tISNULL( a.Email, '' ) AS correo_cliente,\tCAST ( ISNULL( a.TipoNotCred, '' ) AS CHAR ( 2 ) ) AS tipo_not_crede,\tCAST ( ISNULL( a.DescripNotCred, '' ) AS CHAR ( 50 ) ) AS descri_not_crede,\tCAST ( ISNULL( a.TipoDocAfectado, '' ) AS CHAR ( 2 ) ) AS tipo_doc_afecta,\tCAST ( ISNULL( a.NumeroDocAfectado, '' ) AS CHAR ( 30 ) ) AS nro_doc_afecta,\tCAST ( a.SubTotal AS NUMERIC ( 12, 2 ) ) AS sub_total,\tdbo.F_CalcularTotalExoneradas_Gravadas_Ventas ( a.Id, 1 ) AS ope_gravada,\tdbo.F_CalcularTotalExoneradas_Gravadas_Ventas ( a.Id, 0 ) AS ope_exonerada,\tCAST ( 0.00 AS NUMERIC ( 12, 2 ) ) AS ope_inafecta,\tCAST ( 0.00 AS NUMERIC ( 12, 2 ) ) AS ope_gratuita,\ta.Descuento,\ta.Igv,\tCAST ( 0.00 AS NUMERIC ( 12, 2 ) ) AS isc,\tCAST ( a.TotalVenta AS NUMERIC ( 12, 2 ) ) AS total_cpe,\tCAST ( 0.00 AS NUMERIC ( 12, 2 ) ) AS m_percepcion,\tCAST ( A.TotalVenta AS NUMERIC ( 12, 2 ) ) AS total_cpe_pagar,\tCAST ( a.Total_Letras AS VARCHAR ) AS total_cpe_letras,\tCAST ( a.Anulado AS NUMERIC ( 1 ) ) AS estatus,\tCAST ( 0 AS NUMERIC ( 12 ) ) AS cpe_ope_detraccion,\tCAST ( '' AS VARCHAR ) AS cta_bancaria,\tCAST ( 0 AS NUMERIC ( 12 ) ) AS por_detraccion,\tCAST ( 0.00 AS NUMERIC ( 12, 2 ) ) AS monto_detraccion,\tCAST ( 0 AS NUMERIC ( 12 ) ) AS cpe_con_guia,\tCAST ( 0 AS NUMERIC ( 12 ) ) AS cpe_con_anticipos,\tCAST ( 0 AS NUMERIC ( 12 ) ) AS cpe_con_reg_anticipos,\tCAST ( '' AS VARCHAR ) AS ant_tipo_doc_cpe,\tCAST ( '' AS VARCHAR ) AS ant_numero_doc_cpe,\tCAST ( '' AS VARCHAR ) AS ant_tipo_doc_cli,\tCAST ( '' AS VARCHAR ) AS ant_ruc_cli,\tCAST ( 0.00 AS NUMERIC ( 12, 2 ) ) AS ant_total_cpe,\tCAST ( 0 AS NUMERIC ( 12 ) ) AS cpe_emisor_itinerante,\tCAST ( 1 AS NUMERIC ( 12 ) ) AS id_usuario,\tCAST ( '' AS VARCHAR ) AS condi_doc_cpe,\tCAST ( '01/01/1900' AS DATE ) AS fe_vencimiento,\tCAST ( '' AS VARCHAR ) AS obs_cpe,\tCAST ( 0.00 AS NUMERIC ( 12, 2 ) ) AS oth_imp,\tISNULL( dbo.tbl_info_cpe.doc_firma, 0 ) AS doc_firma,\tISNULL( dbo.tbl_info_cpe.doc_cdr, 0 ) AS doc_cdr,\tISNULL( dbo.tbl_info_cpe.doc_email, 0 ) AS doc_email,\tISNULL( dbo.tbl_info_cpe.doc_publicado, 0 ) AS doc_publicado,\tISNULL( dbo.tbl_info_cpe.cod_sunat, '' ) AS cod_sunat,\tISNULL( dbo.tbl_info_cpe.des_cod_sunat, '' ) AS des_cod_sunat,\tISNULL( dbo.tbl_info_cpe.hash_sunat, '' ) AS hash_sunat,\tISNULL( dbo.tbl_info_cpe.com_baja, 0 ) AS com_baja,\tISNULL( dbo.tbl_info_cpe.resu_boleta, 0 ) AS resu_boleta,\tISNULL( dbo.tbl_info_cpe.estacion_pc, '' ) AS estacion_pc,\tISNULL( dbo.tbl_info_cpe.doc_proceso, 0 ) AS doc_proceso,\tCAST ( a.Tipo_Operacion AS CHAR ( 5 ) ) AS tipo_operacion,\tCAST ( '' AS DATE ) AS fecha_guia_remision,\tCAST ( '' AS CHAR ( 80 ) ) AS contacto_emisor,\tCAST ( 0.00 AS NUMERIC ( 12, 2 ) ) AS total_ope_exportacion,\ta.Otro_Imp AS otros_impuestos,\tiif ( A.TipoMoneda = 'PEN', 'S/', '$' ) AS Simbolo,\t'X' AS 'IDENTIFICADOR',\tstatus_verificado,\tcodigo_verificado,\tmensaje_verificado,\tobservacion_verificado,\tIIF ( A.IdFormaPago = 1, 'Contado', 'Credito' ) forma_pago FROM\tdbo.mst_Venta AS a\tLEFT OUTER JOIN dbo.tbl_info_cpe ON a.Id = dbo.tbl_info_cpe.id_cab_cpe WHERE\tA.IdDocumento <> '99'"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarDocumentos",
    "Content": "CREATE proc [dbo].[spMostrarDocumentos]asselect  Codigo, Descripcion from mst_documentos where flag = 1order by id desc"
  },
  {
    "Type": "SQL_SCALAR_FUNCTION",
    "Name": "getIcbAmount",
    "Content": "CREATE function [dbo].[getIcbAmount]()returns decimal(9,2)asbegindeclare @date_init int = 2018, @date_now  int, @amount decimal(9,2) = 0, @diference decimal(9,2)set @date_now  = year(getdate())set @diference = CAST((@date_now - @date_init) as decimal)/10if @date_now > @date_initbeginset @amount = @amount + @diferenceendreturn @amountend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpDeleteInventario",
    "Content": "CREATE proc [dbo].[SpDeleteInventario]@id intasupdate Inventario set Estado = 0, Flag = 0where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarInventario",
    "Content": "CREATE proc [dbo].[spModificarInventario]@id int,@idalmacen int,@observacion varchar(100),@estado bit,@usuariomodifica varchar(50),@tipoinventario varchar(50),@fecha datetimeasupdate mst_Inventario setId_Almacen = @idalmacen,Observacion = @observacion,Estado=  @estado,usuariomodifica = @usuariomodifica,FechaCrea = @fecha,FechaModifica  = GETDATE(),TipoInventario = @tipoinventario,flag = 1where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarConfig",
    "Content": "CREATE proc [dbo].[spModificarConfig]@ruc varchar(20),@razon varchar(100),@nombrecomercial varchar(100),@direccion varchar(100),@telefono varchar(20),@celular varchar(20),@web varchar(100),@correo varchar(100),@marca bit,@gruplinfam bit,@talla bit,@color bit,@medidas bit,@descripcion bit,@fvence bit,@proveedor bit,@visa bit,@mastercard bit,@logo image,@impresora1 varchar(100),@impresora2 varchar(100),@ubigeo varchar(100),@ciudad varchar(100),@distrito varchar(100),@igv money,@certificadocpe varchar(100),@ContraseniaCertificadoCpe varchar(100),@UsuarioSecundarioSol varchar(100),@ContraseniaUsuarioSecundarioSol varchar(100),@validar_vendedor bit,@modrapido bit,@codbarra bit,@numcopias int,@nummesas int,@produccion bit,@passcorreo varchar(50),@met_busqueda char(2),@urlose varchar(100),@tipoose int,@urlosebeta varchar(100),@urloseotros varchar(100),@urloseotrosbeta varchar(100),@urloseaux varchar(100),@urloseauxbeta varchar(100),@tipomoneda varchar(10),@puerto int,@ssl bit,@servidor_email varchar(50),@nube bitasupdate tabla_configuracion_general setruc = @ruc,razonsocial = @razon,nombrecomercial = @nombrecomercial,direccion = @direccion,telefono = @telefono,celular = @celular,web = @web,correo = @correo,marca = @marca,grupo_linea_familia = @gruplinfam,talla = @talla,color = @color,medida = @medidas,descripcion = @descripcion,f_vence = @fvence,proveedor = @proveedor,visa = @visa,mastercard = @mastercard,Logo= @logo,impresora1= @impresora1,impresora2 = @impresora2,ubigeo = @ubigeo,ciudad = @ciudad,distrito = @distrito,igv= @igv,Certificado_CPE = @certificadocpe,ContraseniaCertificadoCpe  = @ContraseniaCertificadoCpe,UsuarioSecundarioSol = @UsuarioSecundarioSol,ContraseniaUsuarioSecundarioSol = @ContraseniaUsuarioSecundarioSol,Validar_Vendedor = @validar_vendedor,ModoRapido = @modrapido,CodBarra = @codbarra,numcopias = @numcopias,numMesas = @nummesas,Produccion = @produccion,PassCorreo = @passcorreo,Met_Busqueda = @met_busqueda,UrlOse = @urlose,TipoOse = @tipoose,urlosebeta = @urlosebeta ,urloseotros = @urloseotros,urloseotrosbeta = @urloseotrosbeta,urloseaux = @urloseaux,urloseauxbeta = @urloseauxbeta,TipoMoneda = @tipomoneda,Puerto = @puerto,Ssl = @ssl,Servidor_Email = @servidor_email,nube = @nube"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarVenta_Cpe",
    "Content": "CREATE proc [dbo].[spMostrarVenta_Cpe]@id intasdeclare @rucemisor varchar(11) = (select ruc from tabla_configuracion_general);declare @razonemisor varchar(100) = (select RazonSocial from tabla_configuracion_general);declare @direccion varchar(100)=(select direccion from tabla_configuracion_general)declare @ubigeo varchar(100) = (select ubigeo from tabla_configuracion_general)declare @ciudad varchar(100) = (select ciudad from tabla_configuracion_general)declare @distrito varchar(100) = (select distrito from tabla_configuracion_general)declare @nombrecom varchar(100) = (select nombrecomercial from tabla_configuracion_general)declare @usuariosol varchar(200) = (select UsuarioSecundarioSol from tabla_configuracion_general)declare @contrassol varchar(200) = (select ContraseniaUsuarioSecundarioSol from tabla_configuracion_general)declare @contrafirma varchar(200) = (select ContraseniaCertificadoCpe from tabla_configuracion_general)select  'PEN' 'TIPO_MONEDA','0.00','0.00','0.00',format(TotalVenta,'N','es-pe') as 'TOTAL_VENTA','20' 'TIPO_IGV','0.00' 'PORC_IGV',Total_Letras 'TOTAL_LETRAS',CAST(cast(FechaEmision as date) as varchar(10)) as 'FECHA_EMISION',@rucemisor 'RUC_EMISOR',@razonemisor 'RAZON_EMPRESA','' 'GUIA_REMISION',@rucemisor 'RUC_EMISOR',@razonemisor 'RAZON_EMISOR',@ubigeo 'UBIGEO',@direccion 'DIRECCION',@ciudad 'CIUDAD',@distrito 'DISTRITO',DniRuc 'DNI_RUC',CodigoTipoDoc 'CODIGO_TIPO_DOC',RazonSocial 'RAZON_SOCIAL',Direccion 'DIRECCION_CLIENTE','PE' 'TIPO_MONEDA2',format(Igv,'N','es-pe') 'IGV2',format(Descuento,'N','es-pe') 'DESCUENTO',format(SubTotal,'N','es-pe') 'SUB_TOTAL',format(TotalVenta,'N','es-pe') 'TOTAL',SerieDoc + '-' + cast(NumeroDoc as varchar) 'SERIE_NUMERO',NumeroDocAfectado 'DOC_AFECTA',TipoNotCred 'TIPO_NOT_CRED',DescripNotCred 'DESCRIP_NOT_CRED',TipoDocAfectado 'TIPO_DOC_AFECTADO',IdDocumento 'ID_DOCUMENTO',@nombrecom 'NOMBRE_COMERCIAL',@usuariosol 'USUARIO_SOL',@contrassol 'CONTRA_SOL',@contrafirma 'CONTRA_FIRMA'from mst_Ventawhere id = @id and Anulado = 0--EXEC SPMOSTRARCPE '','','',1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpUpdateBaseConfig",
    "Content": "CREATE proc [dbo].[SpUpdateBaseConfig]@id int,@nombre varchar(50),@serverSql varchar(50),@databaseName varchar(50),@databaseUser varchar(50),@databasePassword textasupdate BaseConfig set Nombre = @nombre,ServerSql = @serverSql, DatabaseName=@databaseName,DatabaseUser=@databaseUser,DatabasePassword=@databasePasswordwhere Id=@id"
  },
  {
    "Type": "VIEW",
    "Name": "vw_tbl_items_cab_cpe",
    "Content": "CREATE VIEW [dbo].[vw_tbl_items_cab_cpe]ASSELECT        a.Id AS id_item_cab_cpe, a.IdVenta AS id_cab_cpe, a.IdProducto AS id_producto, CAST(a.IdProducto AS char(25)) AS cve_producto, CAST('NIU' AS char(3)) AS unit_code, a.descripcion AS nom_producto, CAST('' AS char(254))                          AS descri_item, CAST(a.Cantidad AS numeric(12, 2)) AS cantidad, CAST(a.PrecioUnit AS numeric(12, 2)) AS pre_unitario, CAST(a.Subtotal AS numeric(12, 2)) AS sub_total, CAST('' AS CHAR(2)) AS tipo_isc, CAST(0 AS numeric(3))                          AS por_isc, CAST(0 AS numeric(12, 2)) AS monto_isc, CAST('20' AS CHAR(2)) AS tipo_afec_igv, CAST(a.Igv AS numeric(12, 2)) AS monto_igv, CAST(a.Total AS numeric(12, 2)) AS pre_total, d.IdProductoSunat,                          a.Adicional1 AS TipoAdicional, a.Adicional2 AS FechaAdicional, a.Adicional3 AS NumAdicional, a.Adicional4 as 'OtroAdicional',\t\t\t\t\t\t iif(a.CodigoBarra = 'ICBPER', a.Total, 0) 'otros_impuestos',\t\t\t\t\t\t 'X' AS 'IDENTIFICADOR'FROM            dbo.mst_Venta_det AS a LEFT JOIN                         dbo.mst_ProductoPresentacion AS b ON a.IdProducto = b.Id LEFT JOIN                         dbo.mst_ProductoDetalle AS c ON b.idProductosDetalle = c.Id LEFT JOIN                         dbo.mst_Producto AS d ON c.idProducto = d.Id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddAjusteToAuditoria",
    "Content": "CREATE proc [dbo].[SpAddAjusteToAuditoria]@idAuditoria int,@idAjuste intasupdate Auditoria set IdAjuste=@idAjustewhere id = @idAuditoriaselect @idAuditoria"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpDeleteInventarioDetalle",
    "Content": "CREATE proc [dbo].[SpDeleteInventarioDetalle]@id intasupdate InventarioDetalle set Estado= 0, Flag= 0where Id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarInventario",
    "Content": "--CREATE proc [dbo].[spEliminarInventario]@id intasupdate mst_Inventario set estado = 0,flag=0where id=@id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarConfig",
    "Content": "---CREATE proc [dbo].[spMostrarConfig]asselect * from tabla_configuracion_general"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spReporteDetalladoTotal",
    "Content": "CREATE proc [dbo].[spReporteDetalladoTotal]@id int,@idpiso int,@idcaja int,@idusuario intasIF @idpiso = 0\tbegin\t\tSELECT \t\tg.Numero as 'NumApertura',\t\ta.IdDocumento as 'IdDocumento',\t\ta.serieDoc as 'SerieDoc',\t\ta.NumeroDoc as 'NumeroDoc',\t\tCAST(g.Fecha AS DATE) as Fecha,\t\tb.Cantidad as Cant,\t\tf.nombreProducto,\t\tb.PrecioUnit,\t\tiif(a.anulado=0,b.Total,0.00) As ImporteTotal,\t\tiif(a.anulado=0,c.efectivo,0.00) as 'Efectivo',\t\tiif(a.anulado=0,c.visa+c.Mastercard,0.00) as 'Tarjeta',\t\tu.Nombre,\t\ta.UsuarioCrea\t\tFROM mst_Venta a\t\tINNER JOIN mst_Venta_det b ON a.Id=b.IdVenta\t\tINNER JOIN tabla_FormaPago c ON c.IdVenta = a.Id\t\tINNER JOIN mst_ProductoPresentacion d ON d.Id=b.IdProducto\t\tINNER JOIN mst_ProductoDetalle e ON e.Id=d.idProductosDetalle\t\tINNER JOIN mst_Producto f ON f.Id=e.idProducto\t\tINNER JOIN mst_Apertura g ON g.Numero=a.IdApertura and g.IdUsuario = a.IdUsuario and g.IdCaja = a.IdCaja\t\tINNER JOIN mst_Grupo h ON h.Id=f.IdGrupo\t\tINNER JOIN mst_Usuarios u ON u.Id=a.IdUsuarioPreventa\t\tWHERE g.Numero = @id and a.IdCaja = @idcaja and a.IdUsuario = @idusuario  \t\tORDER BY a.IdDocumento,a.serieDoc,a.NumeroDoc\tendelse\tbegin\t\tSELECT \t\tg.Numero as 'NumApertura',\t\ta.IdDocumento as 'IdDocumento',\t\ta.serieDoc as 'SerieDoc',\t\ta.NumeroDoc as 'NumeroDoc',\t\tCAST(g.Fecha AS DATE) as Fecha,\t\tb.Cantidad as Cant,\t\tf.nombreProducto,\t\tb.PrecioUnit,\t\tiif(a.anulado=0,b.Total,0.00) As ImporteTotal,\t\tiif(a.anulado=0,c.efectivo,0.00) as 'Efectivo',\t\tiif(a.anulado=0,c.visa+c.Mastercard,0.00) as 'Tarjeta',\t\tu.Nombre,\t\ta.UsuarioCrea\t\tFROM mst_Venta a\t\tINNER JOIN mst_Venta_det b ON a.Id=b.IdVenta\t\tINNER JOIN tabla_FormaPago c ON c.IdVenta = a.Id\t\tINNER JOIN mst_ProductoPresentacion d ON d.Id=b.IdProducto\t\tINNER JOIN mst_ProductoDetalle e ON e.Id=d.idProductosDetalle\t\tINNER JOIN mst_Producto f ON f.Id=e.idProducto\t\tINNER JOIN mst_Apertura g ON g.Numero=a.IdApertura and g.IdUsuario = a.IdUsuario and g.IdCaja = a.IdCaja\t\tINNER JOIN mst_Grupo h ON h.Id=f.IdGrupo\t\tINNER JOIN mst_Usuarios u ON u.Id=a.IdUsuarioPreventa\t\tWHERE g.Numero = @id and a.IdCaja = @idcaja and a.IdUsuario = @idusuario and a.IdPiso = @idpiso\t\tORDER BY a.IdDocumento,a.serieDoc,a.NumeroDoc\tend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spContador",
    "Content": "--SELECT v.SerieDoc,v.NumeroDoc,v.FechaEmision,v.TotalVenta,vd.descripcion FROM mst_Venta v--INNER JOIN mst_Venta_det vd--ON v.Id=vd.IdVenta--WHERE CONVERT(varchar,v.FechaEmision,103) BETWEEN '01/10/2018' AND '31/10/2018'------------------------------------------------------------------------------------CREATE proc [dbo].[spContador]@fechainicio date,@fechafin dateasSELECT case v.IdDocumentowhen '03' then '1'when '01' then '2'when '07' then '3'when '08' then '4'END Documento,RTRIM(v.SerieDoc) Serie,--cast(v.NumeroDoc as varchar) AS [Num],RIGHT(Ltrim(Rtrim(CAST(v.NumeroDoc as varchar))),10) AS [Num],CAST(v.FechaEmision AS DATE) AS FechaEmision,IIF(v.DniRuc='00000000','0002',IIF(v.Anulado=1,'00002',RTRIM(v.DniRuc))) AS DniRuc,dbo.f_promedio(IIF(v.RazonSocial='PUBLICO GENERAL','VENTAS DEL DIA',IIF(v.Anulado=1,'ANULADO',RTRIM(UPPER(v.RazonSocial))))) AS razon,RTRIM(UPPER(v.Direccion))[Direccion],'1' as Valor,IIF(v.Anulado=0,cast(v.TotalVenta as decimal(18,2)),0.00) as Importe,IIF(v.Anulado=0,'F'+CAST(vd.descripcion AS VARCHAR),'T'+CAST(vd.descripcion AS VARCHAR)) AS TagFROM mst_Venta vINNER JOIN mst_Venta_det vdON v.Id=vd.IdVentaAND (vd.id= (SELECT MIN(Id) FROM mst_Venta_det WHERE IdVenta=vd.IdVenta))where cast(V.FechaEmision as date) BETWEEN @fechainicio and @fechafin--convert(varchar, v.FechaEmision,3) >= convert(varchar, @fechainicio,3) --and convert(varchar, v.FechaEmision,3) <= convert(varchar, @fechafin,3)order by v.IdDocumento, v.FechaEmision asc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarVentaDetalle_Cpe",
    "Content": "CREATE proc [dbo].[spMostrarVentaDetalle_Cpe]@id intasselectROW_NUMBER() OVER(ORDER BY vt.ID DESC) AS Row,format(Cantidad,'N','es-pe') as 'CANTIDAD',format(Subtotal,'N','es-pe') as 'SUBTOTAL',format(Total,'N','es-pe') as 'TOTAL',format(Igv, 'N','es-pe') as 'IGV',vt.descripcion 'DESCRIPCION',vt.IdProducto 'ID_PRODUCTO',format(PrecioUnit,'N','es-pe') as 'PRECIO_UNIT',p.IdProductoSunat 'ID_PRODUCTO_SUNAT'from mst_Venta_det vtinner join mst_ProductoPresentacion pp on vt.idproducto = pp.Idinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Idinner join mst_Producto p on pd.idProducto = p.Idwhere IdVenta = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertar_Resultados_Envio_otros",
    "Content": "CREATE proc [dbo].[spInsertar_Resultados_Envio_otros]@id bigint,@doc_email bit,@doc_publicado bitasupdate tbl_info_cpe set doc_email = @doc_email, doc_publicado = @doc_publicadowhere id_cab_cpe = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpDeletePedido",
    "Content": "CREATE proc [dbo].[SpDeletePedido]@id intasupdate tabla_Pre_Venta set Eliminado = 1where Id = @idupdate tabla_Pre_Venta_Detalle set Eliminado = 1where IdPedido = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarInventario",
    "Content": "CREATE proc [dbo].[spBuscarInventario]@id intasselect i.id,i.tipoinventario,a.Nombre,i.Observacion,i.UsuarioCrea,i.FechaCrea,i.UsuarioModifica,i.FechaModifica,''Estado,i.Estado [E],a.Idfrom mst_Inventario iinner join mst_Almacen a on i.Id_Almacen = a.Idwhere i.Id = @idorder by i.id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_get_datos_backup",
    "Content": "CREATE proc [dbo].[sp_get_datos_backup]asselect ruta_copia_bd from tabla_configuracion_general"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spKardexItem",
    "Content": "CREATE proc [dbo].[spKardexItem]@id int,@idalmacen intasdeclare @idproducto int, @nombre varchar(100),@fecha date,@entrada DECIMAL(18,2), @salida DECIMAL(18,2), @doc varchar(100), @almacen_salida int, @almacen1 varchar(200), @almacen2 varchar(200)declare CCursor cursorfor(select temp.id,temp.nombre,temp.fecha, temp.entrada, temp.salida, temp.doc, temp.almacen1, temp.almacen2from(selectpd.Id,p.nombreProducto + ' ' + pd.descripcion as nombre,cast(i.FechaCrea as date) as fecha,(id.Cantidad * id.Factor) as entrada,0 as salida,'Inicial' as doc,a.Nombre as 'almacen1','' as 'almacen2'from mst_Inventario_Detalle idinner join mst_inventario i on id.Id_Inventario = i.Idinner join mst_ProductoDetalle pd on id.Id_Producto = pd.Idinner join mst_producto p on pd.idproducto = p.idinner join mst_Almacen a on i.Id_Almacen = a.Idwhere i.Id_Almacen = @idalmacen and id.flag = 1 and i.flag = 1---------------------------------------------------------------------------------------COMPRAS----------------------------union allselectpd.Id,cd.Descripcion as nombre,cast(c.FechaEmision as date) as fecha,(cd.Cantidad * um.factor) as entrada,0 as salida,cast(c.Serie as varchar)+ '-' + cast(c.Numero as varchar) as doc,a.Nombre as 'almacen1','' as 'almacen2'from mst_ComprasDetalles cdinner join mst_Compras c on cd.IdCompra = c.Idinner join mst_ProductoDetalle pd on cd.IdProducto = pd.Idinner join mst_UnidadMedida um on cd.IdUnidad = um.Idinner join mst_Almacen a on c.IdAlmacen = a.Idwhere c.IdAlmacen = @idalmacen and cd. estado = 1 and cd.Flag = 1 and c.Estado = 1 and c.flag=1 AND C.IsClosed = 1-------------------COMPRAS----------------------------UNION ALLselect pd.Id,vd.descripcion as nombre,cast(v.FechaEmision as date) as fecha,0 as entrada,(vd.Cantidad * vd.Factor) as salida,cast(v.SerieDoc as varchar) + '-' + cast(v.NumeroDoc as varchar) as doc,a.Nombre as 'almacen1','' as 'almacen2'from mst_Venta_det vdinner join mst_Venta v on vd.IdVenta = v.Idinner join mst_ProductoPresentacion pp on vd.IdProducto = pp.Idinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Idinner join mst_Almacen a on v.IdAlmacen = a.IdWHERE v.Anulado = 0 and v.IdAlmacen = @idalmacen and vd.Flag = 1 and cast(v.Observacion as varchar) = ''AND v.IdDocumento <> '07'UNION ALLselect pd.Id,vd.descripcion as nombre,cast(v.FechaEmision as date) as fecha,CASE v.TipoNotCredWHEN '01' THEN ISNULL((vd.Cantidad * vd.Factor),0.00)WHEN '02' THEN ISNULL((vd.Cantidad * vd.Factor),0.00)WHEN '03' THEN ISNULL((vd.Cantidad * vd.Factor),0.00)WHEN '06' THEN ISNULL((vd.Cantidad * vd.Factor),0.00)WHEN '07' THEN ISNULL((vd.Cantidad * vd.Factor),0.00)WHEN '08' THEN ISNULL((vd.Cantidad * vd.Factor),0.00)ELSE 0.00 END AS entrada,0.00 as salida,cast(v.SerieDoc as varchar) + '-' + cast(v.NumeroDoc as varchar) as doc,a.Nombre as 'almacen1','' as 'almacen2'from mst_Venta_det vdinner join mst_Venta v on vd.IdVenta = v.Idinner join mst_ProductoPresentacion pp on vd.IdProducto = pp.Idinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Idinner join mst_Almacen a on v.IdAlmacen = a.IdWHERE v.Anulado = 0 and v.IdAlmacen = @idalmacen and vd.Flag = 1AND v.IdDocumento = '07' AND (v.TipoNotCred<>'04' OR v.TipoNotCred<>'05' OR v.TipoNotCred<>'09' OR v.TipoNotCred<>'10')--TRASLADOS--------------------------union allselecttd.idProducto as 'id',td.nombreProducto as 'nombre',t.fecha as 'fecha',0 as entrada,(td.cantidad * td.factor) as salida,CAST(t.serie as varchar) + '-' + CAST(t.numero as varchar) as doc,a.Nombre as 'almacen1',b.Nombre as 'almacen2'from mst_almacen_traslado_detalle tdinner join mst_almacen_traslado t on t.id = td.almacen_traslado_idinner join mst_Almacen a on t.idAlmacenSalida = a.Idinner join mst_Almacen b on t.idAlmacenEntrada = b.Idwhere idAlmacenSalida = @idalmacen and td.flag = 1 and t.flag = 1---------------------------------------union allselecttd.idProducto as 'id',td.nombreProducto as 'nombre',t.fecha as 'fecha',(td.cantidad * td.factor) as 'entrada',0 as 'salida',CAST(t.serie as varchar) + '-' + CAST(t.numero as varchar) as doc,a.Nombre as 'almacen1',b.Nombre as 'almacen2'from mst_almacen_traslado_detalle tdinner join mst_almacen_traslado t on t.id = td.almacen_traslado_idinner join mst_Almacen a on t.idAlmacenSalida = a.Idinner join mst_Almacen b on t.idAlmacenEntrada = b.Idwhere idAlmacenEntrada = @idalmacen and td.flag = 1 and t.flag = 1--TRASLADOS----------------------------MOVIMIENTOS----------------------------UNION ALLSELECTmd.idProducto as 'id',md.nombreProducto as 'nombre',m.fecha as 'fecha',(md.cantidad * md.factor) as 'entrada',0 as 'salida',CAST(m.serie as varchar) + '-' + CAST(m.numero as varchar) as doc,a.Nombre as 'almacen1','' as 'almacen2'FROM mst_almacen_movimiento_detalle mdINNER JOIN mst_almacen_movimiento m on m.id = md.almacen_movimiento_idinner join mst_Almacen a on m.idAlmacen = a.IdWHERE idAlmacen = @idalmacen and entrada = 1 and md.flag = 1 and m.flag = 1---------------------------------------------UNION ALLSELECTmd.idProducto as 'id',md.nombreProducto as 'nombre',m.fecha as 'fecha',0 as 'entrada',(md.cantidad * md.factor) as 'salida',CAST(m.serie as varchar) + '-' + CAST(m.numero as varchar) as 'doc',a.Nombre as 'almacen1',c.razonSocial as 'almacen2'FROM mst_almacen_movimiento_detalle mdINNER JOIN mst_almacen_movimiento m on m.id = md.almacen_movimiento_idinner join mst_Almacen a on m.idAlmacen = a.IdINNER JOIN mst_Cliente c ON c.Id = m.idClienteWHERE idAlmacen = @idalmacen and salida = 1 and md.flag = 1 and m.flag = 1--MOVIMIENTOS------------------------------AJUSTESUNION ALLSELECTmd.idProducto as 'id',md.nombreProducto as 'nombre',m.fecha as 'fecha',(md.cantidad * md.factor) as 'entrada',0 as 'salida',CAST(m.serie as varchar) + '-' + CAST(m.numero as varchar) as 'doc',a.Nombre as 'almacen1','' as 'almacen2'FROM mst_almacen_movimiento_detalle mdINNER JOIN mst_almacen_movimiento m on m.id = md.almacen_movimiento_idinner join mst_Almacen a on m.idAlmacen = a.IdWHERE idAlmacen = @idalmacen and m.ajuste = 1 and md.flag = 1 and m.flag = 1) as Tempwhere temp.id = @id)order by temp.fecha ascfor updateOPEN CCursorFETCH CCursor INTO @idproducto,@nombre,@fecha,@entrada,@salida,@doc,@almacen1, @almacen2declare @saldo money = 0declare @suma money = 0create table #temp(id int, doc varchar(100),fecha date,nombre varchar(100),entrada money,salida money,saldo money, Almacen1 varchar(200), Almacen2 varchar(200));WHILE (@@FETCH_STATUS = 0)BEGIN  \t\tif(@entrada != 0)\tbegin\tset @saldo = @saldo + @entrada;\t--print cast(@idproducto as varchar) + '|' + @nombre + '|'+ cast(@entrada as varchar) + '|' + cast(@salida as varchar) + '|' + cast(@saldo as varchar) + '|' + @doc+'|'+cast(@fecha as varchar)\tend\telse\t\tbegin\tset @saldo = @saldo - @salida;\t--print cast(@idproducto as varchar) + '|' + @nombre + '|'+ cast(@entrada as varchar) + '|' + cast(@salida as varchar) + '|' + cast(@saldo as varchar) + '|' + @doc+'|'+cast(@fecha as varchar)\tend\tSET NOCOUNT ON\tinsert into #temp values(@idproducto,@doc,@fecha,@nombre,@entrada,@salida,@saldo,@almacen1, @almacen2)-- LECTURA DE LA SIGUIENTE FILA DEL CURSOR   FETCH CCursor INTO @idproducto,@nombre,@fecha,@entrada,@salida,@doc,@almacen1, @almacen2END-- CIERRE DEL CURSORCLOSE CCursor-- LIBERAR LOS RECURSOSDEALLOCATE CCursorselect * from #temp"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBusarPresentaciones_Det",
    "Content": "CREATE proc [dbo].[spBusarPresentaciones_Det]@idProductoDetalle intasselect um.nombreUnidad Unidad,p.precioUnitario Precio, p.Id, p.Codigo as CodigoBarrafrom mst_ProductoPresentacion pinner join mst_UnidadMedida um on p.idUnidad = um.Idwhere p.idProductosDetalle = @idProductoDetalle and p.estado = 1 and p.flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpDeleteProducto",
    "Content": "CREATE proc [dbo].[SpDeleteProducto]@id intasupdate Producto set estado = 0, flag = 0where Id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarInventario",
    "Content": "CREATE proc [dbo].[spMostrarInventario]asselect i.id,i.tipoinventario,a.Nombre,i.Observacion,i.UsuarioCrea,i.FechaCrea,i.UsuarioModifica,i.FechaModifica,''Estado,i.Estado [E],a.Id as 'IdAlmacen'from mst_Inventario iinner join mst_Almacen a on i.Id_Almacen = a.Idwhere i.flag = 1order by i.id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "Reporte_Gastos_Operativos_Cierre",
    "Content": "CREATE proc [dbo].[Reporte_Gastos_Operativos_Cierre]@idapertura int,@idcaja int,@idusuario intasselect g.*, t.Descripcion 'Tipo_de_Gasto' from mst_GastosOperativos ginner join mst_tipoGasto t on g.IdTipoGasto = t.Idwhere eliminado = 0 and IdApertura = @idapertura and idcaja = @idcaja and IdUsuario = @idusuarioorder by g.id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spReporteClienteVenta",
    "Content": "CREATE proc [dbo].[spReporteClienteVenta]@fechaInit date,@fechaFin dateasSELECT CAST(v.FechaEmision AS date) as FechaEmision,v.DniRuc,v.RazonSocial,SUM(d.Cantidad) AS Cantidad,u.nombreUnidad,d.descripcion,us.usuarioFROM mst_Venta vINNER JOIN mst_Venta_det dON v.Id = d.IdVentaINNER JOIN mst_UnidadMedida uON u.Id = d.IdUnidadinner join mst_Usuarios us on v.IdUsuarioPreventa = us.IdWHERE v.Anulado = 0 AND CAST(v.FechaEmision AS date) BETWEEN @fechaInit AND @fechaFinGROUP BY v.DniRuc,v.RazonSocial,CAST(v.FechaEmision AS date),u.nombreUnidad,d.descripcion, us.usuarioORDER BY v.RazonSocial"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpDeleteProductoDetalle",
    "Content": "CREATE proc [dbo].[SpDeleteProductoDetalle]@id intasupdate mst_ProductoDetalle set estado = 0, flag = 0where Id = @idupdate mst_ProductoPresentacion set estado = 0, flag = 0where idProductosDetalle = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spReporteClienteVentaProductos",
    "Content": "CREATE proc [dbo].[spReporteClienteVentaProductos]@fechaInit date,@fechaFin dateasSELECT v.DniRuc,v.RazonSocial,v.SerieDoc,v.NumeroDoc,CAST(v.FechaEmision AS date) as FechaEmision,v.SubTotal,v.Otro_Imp,v.TotalVenta,d.Cantidad,u.nombreUnidad,d.descripcion,d.PrecioUnit,d.Total,us.usuarioFROM mst_Venta vINNER JOIN mst_Venta_det dON v.Id = d.IdVentaINNER JOIN mst_UnidadMedida uON u.Id = d.IdUnidadinner join mst_Usuarios us on v.IdUsuarioPreventa = us.IdWHERE v.Anulado = 0 AND CAST(v.FechaEmision AS date) BETWEEN @fechaInit AND @fechaFinORDER BY v.RazonSocial, CAST(v.FechaEmision AS date)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpDeleteProductoPresentacion",
    "Content": "CREATE proc [dbo].[SpDeleteProductoPresentacion]@id intasupdate mst_ProductoPresentacion set estado = 0, flag = 0where Id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_insertar_credenciales_api_sunat",
    "Content": "CREATE procedure [dbo].[sp_insertar_credenciales_api_sunat]@id_api_sunat varchar(100),@clave_api_sunat varchar(100)asupdate tabla_configuracion_general set id_api_sunat = @id_api_sunat,clave_api_sunat = @clave_api_sunat"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarCierreCaja",
    "Content": "CREATE proc [dbo].[spMostrarCierreCaja]@idapertura int,@efectivoocredito bit,@idusuario int,@idcaja intas declare @gastos money =  (select sum(Monto) from mst_GastosOperativos where IdApertura = @idapertura and IdUsuario = @idusuario and idcaja = @idcaja)if(@efectivoocredito = 0)beginselect sum(Fp.Total) Efectivo, (sum(Visa) + sum(Mastercard)) Tarjetas from tabla_FormaPago fpinner join mst_Venta v on fp.IdVenta = v.Idwhere v.IdApertura = @idapertura and v.Anulado = 0 and Contado = 1 and v.IdCaja = @idcaja and v.IdUsuario = @idusuarioendelsebeginselect sum(fp.Total) Credito from tabla_FormaPago fpinner join mst_Venta v on fp.IdVenta = v.Idwhere v.IdApertura = @idapertura and v.Anulado = 0 and Credito = 1 and v.IdCaja = @idcaja and v.IdUsuario = @idusuarioend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarMarcas",
    "Content": "----------------------------------------------------------------------------------Mostrar----------------------------CREATE procedure [dbo].[spMostrarMarcas]@top bitasif(@top = 0)select top 200 Id as 'ID', nombreMarca as 'Nombre Marca', usuarioCrea as 'Usuario de Creación',fechaCrea as 'Fecha de Creación', usuarioModifica as 'Usuario de Modificacion',fechaModifica as 'Fecha de Modificación', estado as 'Estado' from  mst_Marcawhere flag = 1order by id descelseselectId as 'ID', nombreMarca as 'Nombre Marca', usuarioCrea as 'Usuario de Creación',fechaCrea as 'Fecha de Creación', usuarioModifica as 'Usuario de Modificacion',fechaModifica as 'Fecha de Modificación', estado as 'Estado' from  mst_Marcawhere flag = 1order by id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpDeleteProductoPresentacionCodigoBarra",
    "Content": "CREATE proc [dbo].[SpDeleteProductoPresentacionCodigoBarra]@id intasupdate ProductoPresentacionCodigoBarra set estado = 0, flag = 0where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_insertar_datos_backup",
    "Content": "CREATE proc [dbo].[sp_insertar_datos_backup]@ruta varchar(250)asupdate tabla_configuracion_general set ruta_copia_bd = @ruta"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetComisionConfig",
    "Content": "CREATE proc [dbo].[SpGetComisionConfig]asselectconfig.Id,config.IdTipoUsuario,tu.descripcion 'TipoUsuario',config.IdGrupo,g.Descripcion 'Grupo',config.Porcentajefrom ComisionConfig configinner join mst_TipoUsuario tu on config.IdTipoUsuario = tu.Idinner join mst_Grupo g on config.IdGrupo = g.Id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpValidateDniProveedor",
    "Content": "CREATE proc [dbo].[SpValidateDniProveedor]@ruc varchar(20)asselect * from mst_Proveedorwhere ruc = @ruc and estado = 1 and flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarPermisos",
    "Content": "CREATE proc [dbo].[spMostrarPermisos]@id intasselect * from mst_permisos_ventawhere IdUsuario = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpDeleteRestPisos",
    "Content": "CREATE proc [dbo].[SpDeleteRestPisos]@id intasdelete from tabla_RestPisoswhere Id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddComisionConfig",
    "Content": "CREATE proc [dbo].[SpAddComisionConfig]@id int,@idTipoUsuario int,@idGrupo int,@porcentaje floatasif @id = 0begin\tinsert into ComisionConfig (IdTipoUsuario, IdGrupo, Porcentaje)\tvalues(@idTipoUsuario, @idGrupo, @porcentaje)\tselect CAST(SCOPE_IDENTITY() as int)endelsebegin\tupdate ComisionConfig set IdTipoUsuario = @idTipoUsuario, IdGrupo = @idGrupo,\tPorcentaje = @porcentaje\twhere id = @id\tselect @idend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_insertar_cortesia_venta",
    "Content": " CREATE proc [dbo].[sp_insertar_cortesia_venta]@idventa int,@cortesia bitasupdate mst_Venta set cortesia = @cortesiawhere id = @idventa"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_validar_pago_almacenMovimiento_by_idMovimiento",
    "Content": "CREATE proc [dbo].[sp_validar_pago_almacenMovimiento_by_idMovimiento]@id intasupdate api_almacen_pagos set validado = 1where almacen_movimiento_id = @iddeclare @monto money = (select SUM(Monto) from api_almacen_pagos where almacen_movimiento_id = @id and validado = 1)update mst_almacen_movimiento set importe_pagado = @montowhere id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarPreVenta",
    "Content": "CREATE proc [dbo].[spMostrarPreVenta]@pm bit,@idpiso intasif(@pm = 0) select *from tabla_Pre_Ventawhere Eliminado = 0 and pagado = 0 and IdMesa = 0order by IdPedido ascelseselect *from tabla_Pre_Ventawhere IdPiso = @idpiso and Pagado = 0 and Eliminado = 0"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpDeleteUsuario",
    "Content": "CREATE proc [dbo].[SpDeleteUsuario]@id intasupdate mst_Usuarios set estado = 0, flag = 0where Id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarInventario_Detalle",
    "Content": "--CREATE proc [dbo].[spInsertarInventario_Detalle]@idinventario int,@idproducto int,@cantidad float,@usuariocrea varchar(50),@idunidad int,@factor decimal,@costo money,@total money,@zona varchar(100),@stand varchar(100)asinsert into mst_Inventario_Detalle(Id_Inventario,Id_Producto,Cantidad,usuariocrea,IdUnidad,Factor,Costo, Total, Zona, Stand)values(@idinventario,@idproducto,@cantidad,@usuariocrea,@idunidad,@factor,@costo,@total,@zona,@stand)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpDeleteComisionConfig",
    "Content": "CREATE proc [dbo].[SpDeleteComisionConfig]@id intasdelete from ComisionConfig where id=@id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_mostrar_caja_chica",
    "Content": "CREATE proc [dbo].[sp_mostrar_caja_chica]@numero int,@id_usuario int,@idCaja intasSELECT caja_chica as total FROM mst_Aperturawhere IdUsuario = @id_usuario and Numero = @numero and IdCaja = @idCaja"
  },
  {
    "Type": "VIEW",
    "Name": "ViewProductForApp",
    "Content": "CREATE view [dbo].[ViewProductForApp]asSELECT pp.Id as Id, p.NombreProducto ProductName, g.Descripcion ProductGroup, pp.IdUnidad ProductUnitId, u.NombreUnidad ProductUnitName, pp.PrecioUnitario ProductPriceFROM mst_Producto pINNER JOIN mst_ProductoDetalle pd ON pd.idProducto = p.IdINNER JOIN mst_ProductoPresentacion pp ON pp.idProductosDetalle = pd.IdINNER JOIN mst_Grupo g ON g.Id = p.IdGrupoINNER JOIN mst_UnidadMedida u ON u.Id = pp.idUnidadWHERE (p.flag = 1 AND p.estado = 1) AND (pd.flag = 1 AND pd.estado = 1)AND (pp.flag = 1 AND pp.estado = 1)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInertarGastosOperativos",
    "Content": "CREATE proc [dbo].[spInertarGastosOperativos]@idusuario int,@idapertura int,@idtipogasto int,@num_bolfact varchar(100),@ruc varchar(50),@proveedor varchar(100),@concepto varchar(50),@monto money,@idcaja intasinsert into mst_GastosOperativos(idusuario,idapertura,idtipogasto,num_bolfact,ruc,proveedor,concepto,monto,idcaja)values(@idusuario,@idapertura,@idtipogasto,@num_bolfact,@ruc,@proveedor,@concepto,@monto,@idcaja)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarProducto",
    "Content": "--------------------------------------------------------------------------------------mostrar-----------------CREATE procedure [dbo].[spMostrarProducto]asselect top 200 pd.id as 'ID' ,pd.codigobarra as 'Codigo Barra',p.nombreProducto + ' ' + pd.descripcion + ' ' + m.nombreMarca +' ' +t.descripcion+' '+ c.descripcion as 'Nombre',um.nombreUnidad as 'Unidad',(pp.PrecioUnitario) as 'Precio',cast(pro.id as varchar) + '-' + pro.nombre [Proveedor],p.estado as 'Estado',um.id [Id Unidad],p.Idfrom mst_producto pinner join mst_ProductoDetalle pd on p.id = pd.idProductoinner join mst_ProductoPresentacion pp on pd.Id = pp.idProductosDetalleinner join mst_Marca m on p.idMarca = m.Id--inner join mst_Grupo g on p.idGrupo = g.Id--inner join mst_Linea l on p.idLinea = l.Id--inner join mst_Familia f on p.idFamilia = f.Idinner join mst_Talla t on pd.idTalla = t.Idinner join mst_Color c on pd.idColores = c.Idinner join mst_UnidadMedida um on pp.idUnidad = um.Idinner join mst_proveedor pro on p.idproveedor = pro.idwhere p.id = pd.IdProducto and pd.Id = pp.IdProductosDetalleand p.flag = 1 and pd.flag = 1 and pp.flag = 1 and pp.Principal  =1order by pp.Id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetGrupos",
    "Content": "CREATE proc [dbo].[spGetGrupos]@text VARCHAR(50)asselect id,Descripcionfrom mst_Grupowhere Estado = 1 and Flag = 1and Descripcion like '%'+@text+'%'"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarInventario_Detalle",
    "Content": "CREATE proc [dbo].[spModificarInventario_Detalle]@id int,@idinventario int,@idproducto int,@cantidad float,@usuariomodifica varchar(50),@idunidad int,@factor decimal,@costo money,@total money,@zona VARCHAR(100),@stand VARCHAR(100)asupdate mst_Inventario_Detalle setId_Inventario = @idinventario,Id_Producto = @idproducto,Cantidad= @cantidad,UsuarioModifica = @usuariomodifica,FechaModifica = GETDATE(),IdUnidad = @idunidad,Factor = @factor,costo = @costo,total = @total,zona = @zona,stand = @standwhere id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetTiposUsuarios",
    "Content": "CREATE proc [dbo].[SpGetTiposUsuarios]asselectId,Descripcionfrom mst_TipoUsuariowhere estado = 1 and flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_mostrar_tabla_dinero_aperturas",
    "Content": "CREATE proc [dbo].[sp_mostrar_tabla_dinero_aperturas]@idapertura int,@idcaja int,@idusuario intasSELECT m010, m020, m050, m1, m2,m5,m10,m20,m50, m100, m200 FROM mst_Apertura where Numero = @idapertura and IdCaja = @idcaja and IdUsuario = @idusuario"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarGuia",
    "Content": "CREATE proc [dbo].[spInsertarGuia]@codigoDoc char(2),@seriedoc char(4),@numerodoc int,@idcliente int,@codigotipodocsunat int,@dniruc varchar(20),@razonsocial varchar(200),@direccion varchar(200),@email varchar(200),@observacion text,@usuariocrea varchar(50),@fechainiciotraslado date,@puntopartido varchar(100),@puntollegada varchar(100),@idtransportista int,@placa varchar(10),@idmotivo int,@descripcionmotivo varchar(100),@idventa int,@idalmacen intasinsert into mst_guia(IdDocumento,SerieDoc,NumeroDoc,FechaEmision,IdCliente,CodigoTipoDoc,DniRuc,RazonSocial,Direccion,Email,Anulado,Observacion,UsuarioCrea,FechaCrea,FechaInicioTraslado,PuntoPartido,PuntoLLegada, IdTrasnportista, Placa, idmotivo,DescripcionMotivo, idventa, IdAlmacen)values(@codigoDoc,'0001',@numeroDoc,GETDATE(),@idcliente,@codigoTipoDocSunat,@dniRuc,@RazonSocial,@direccion,@email,0,@observacion,@usuariocrea,GETDATE(),@fechainiciotraslado,@puntopartido,@puntollegada, @idtransportista, @placa,@idmotivo,@descripcionmotivo,@idventa, @idalmacen)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarSeriesDoc",
    "Content": "CREATE proc [dbo].[spMostrarSeriesDoc]@iddoc char(2)asSelect s.Serie,s.Id [Id Serie],ds.Id [Id Serie Doc] from mst_doc_serie dsinner join mst_Serie s on ds.idserie = s.Idwhere ds.IdDoc = @iddoc and ds.Estado = 1 and ds.Flag = 1 and s.Estado = 1 and s.Flag = 1order by ds.id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetIdentificacionGrupoProducto",
    "Content": "CREATE proc [dbo].[spGetIdentificacionGrupoProducto]asselect * from IdentificadorGrupoProductowhere estado = 1 and flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarInventario_Detalle",
    "Content": "CREATE proc [dbo].[spBuscarInventario_Detalle]@id int,@buscar varchar(100)asselect *from(select  0 Aux,id.Id,id.Id_Producto as 'IdProducto',pd.codigoBarra as [Cod/Barra],p.nombreProducto + ' ' + pd.descripcion + ' ' + LTRIM(mmm.descripcion) + ' ' +LTRIM(mm.nombreMarca) + ' ' + LTRIM(t.descripcion)+' '+ LTRIM(c.descripcion) as 'Descripcion',um.nombreUnidad [U. Medida],um.factor [Factor],um.Id [Id_Unidad],id.Cantidad,pd.codigoBarra as 'Cod_Barra',ISNULL(Costo, 0) Costo,ISNULL(Total, ISNULL(Costo * precioUnitario, 0)) Total,id.Zona,id.Standfrom mst_Inventario_Detalle idinner join mst_ProductoDetalle pd on id.Id_Producto = pd.idinner join mst_Producto p on pD.idProducto = p.Idinner join mst_ProductoPresentacion pp on pp.idProductosDetalle = pd.Idinner join mst_Marca mm on p.idMarca = mm.Idinner join mst_Talla t on pd.idTalla = t.Idinner join mst_Color c on pd.idColores = c.Idinner join mst_UnidadMedida um on pp.idUnidad = um.Idinner join mst_Medidas mmm on pd.idmedida = mmm.idwhere id.Id_Inventario = @id andp.estado = 1 andp.flag = 1 andpd.estado = 1 andpd.flag = 1 andpp.Principal = 1 andpp.estado = 1 andpp.flag = 1)as tempwhere (temp.descripcion+temp.Cod_Barra like '%'+@buscar+'%' or cast(temp.IdProducto as varchar) = @buscar)order by temp.Id asc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetComisionConfigById",
    "Content": "CREATE proc [dbo].[SpGetComisionConfigById]@id intasselectconfig.Id,config.IdTipoUsuario,tu.descripcion 'TipoUsuario',config.IdGrupo,g.Descripcion 'Grupo',config.Porcentajefrom ComisionConfig configinner join mst_TipoUsuario tu on config.IdTipoUsuario = tu.Idinner join mst_Grupo g on config.IdGrupo = g.Idwhere config.Id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_mostrar_detalles_deuda_acumulada",
    "Content": "CREATE PROC [dbo].[sp_mostrar_detalles_deuda_acumulada]@id_usuario int,@fecha date\tas--detalleselectv.id as id,CONCAT(V.SerieDoc, '-' , CAST(v.NumeroDoc as varchar)) as factura,v.RazonSocial AS 'cliente',v.TotalVenta as 'total_deuda',SUM(s.monto) as 'importe_pagado'from mst_Venta vinner join tbl_Seguimiento s on s.IdVenta = v.Idinner join mst_Usuarios u on v.IdUsuario = u.Idwhere s.Eliminado = 0 and s.validado = 0 and v.Anulado = 0  AND v.IdUsuarioPreventa = @id_usuario and FechaPago = @fechagroup by  v.SerieDoc, v.NumeroDoc, V.RazonSocial, v.TotalVenta, v.Id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarSeriesDocTodos",
    "Content": "CREATE proc [dbo].[spMostrarSeriesDocTodos]asSelect s.Serie,ds.Id [Id Serie Doc] from mst_doc_serie dsinner join mst_Serie s on ds.idserie = s.Idwhere ds.Estado = 1 and ds.Flag = 1order by ds.id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarMedidas",
    "Content": "---CREATE proc [dbo].[spInsertarMedidas]@descripcion varchar(100),@usuariocrea varchar(50)asinsert into mst_Medidas(descripcion, usuariocrea)values(@descripcion,@usuariocrea)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarGuiaDetalle",
    "Content": "-------------------------------ahora los detallesCREATE proc [dbo].[spInsertarGuiaDetalle]@idproducto int,@idguia int,@cantidad money,@idunidad int,@factor int,@descripcion text,@peso decimal(18,2),@codbarra varchar(100),@adicional1 varchar(max)asinsert into mst_Guia_det(IdProducto,idguia,Flag,anulado,cantidad,IdUnidad,Factor,descripcion, peso, codigobarra, Adicional1)values(@idproducto,@idguia,1,0,@cantidad,@idunidad,@factor,@descripcion,@peso,@codbarra,@adicional1)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spActualizarTotales",
    "Content": "CREATE proc [dbo].[spActualizarTotales]@id int,@pm bit,@idpiso int,@esconvenio bitasexec spIngresarOtrosImpuestos_Preventa @id, @pm,@esconveniodeclare @subtotal moneydeclare @descuento money declare @igv moneydeclare @icbper moneydeclare @adicional moneyif(@pm = 0)begin\tif(@esconvenio = 0)\t\tbegin\t\t\tset @subtotal  =  (select SUM(Subtotal) from tabla_Pre_Venta_Detalle  where IdPedido = @id and Pagado = 0 and Eliminado = 0)\t\t\tset @descuento  =  (select SUM(Descuento) from tabla_Pre_Venta_Detalle where IdPedido = @id and Pagado = 0 and Eliminado = 0)\t\t\tset @igv  = (select sum(igv) from tabla_Pre_Venta_Detalle  where IdPedido = @id and Pagado = 0 and Eliminado = 0)\t\t\tset @icbper  = (select sum(Otro_Imp) from tabla_Pre_Venta  where IdPedido = @id and Pagado = 0 and Eliminado = 0)\t\t\t--\t\t\tset @igv = ROUND(@igv, 2)\t\t\tset @subtotal = ROUND(@subtotal, 2) \t\t\t--\t\t\tupdate tabla_Pre_Venta set sub_total = @subtotal,\t\t\tDescuento = @descuento,\t\t\tigv = @igv,\t\t\ttotal = ROUND(((@subtotal + @igv) - @descuento) + @icbper,1)\t\t\twhere IdPedido = @id\t\tend\telse\t\tbegin\t\t\tset @subtotal  =  (select SUM(ISNULL(Subtotal, 0)) from tabla_Pre_Venta_Detalle_Convenio  where IdPedido = @id and Pagado = 0 and Eliminado = 0)\t\t\tset @descuento  =  (select SUM(ISNULL(Descuento, 0)) from tabla_Pre_Venta_Detalle_Convenio where IdPedido = @id and Pagado = 0 and Eliminado = 0)\t\t\tset @igv  = (select sum(ISNULL(igv, 0)) from tabla_Pre_Venta_Detalle_Convenio  where IdPedido = @id and Pagado = 0 and Eliminado = 0)\t\t\tset @icbper  = (select sum(ISNULL(Otro_Imp, 0)) from tabla_Pre_Venta_Convenio  where Id = @id and Pagado = 0 and Eliminado = 0)\t\t\t  \t\t\t--\t\t\tset @igv = ROUND(@igv, 2)\t\t\tset @subtotal = ROUND(@subtotal, 2) \t\t\t--\t\t\tupdate tabla_Pre_Venta_Convenio set sub_total = @subtotal,\t\t\tDescuento = @descuento,\t\t\tigv = @igv,\t\t\ttotal = ROUND(((@subtotal + @igv) - @descuento) + @icbper,1)\t\t\t\t\t\twhere Id = @id\t\t\t\t \t\tendendelse if(@pm = 1)beginset @subtotal  =  (select SUM(Subtotal) from tabla_Pre_Venta_Detalle  where IdMesa = @id and IdPiso = @idpiso and Pagado = 0 and Eliminado = 0)set @descuento  =  (select SUM(Descuento) from tabla_Pre_Venta_Detalle where IdMesa = @id and IdPiso = @idpiso and Pagado = 0 and Eliminado = 0)set @igv  = (select sum(igv) from tabla_Pre_Venta_Detalle  where IdMesa = @id and IdPiso = @idpiso  and Pagado = 0 and Eliminado = 0)set @icbper  = (select sum(Otro_Imp) from tabla_Pre_Venta  where IdMesa = @id and IdPiso = @idpiso  and Pagado = 0 and Eliminado = 0)set @subtotal = (@subtotal + 0)--set @igv = ROUND(@igv, 2)set @subtotal = ROUND(@subtotal, 2) --update tabla_Pre_Venta set sub_total = @subtotal,Descuento = @descuento,igv = @igv,total = ROUND(((@subtotal + @igv)-@descuento) + @icbper,1)where IdMesa = @id and IdPiso = @idpisoend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarSeriesTodos",
    "Content": "CREATE proc [dbo].[spMostrarSeriesTodos]asselect s.Id,s.Serie from mst_Serie swhere s.Estado = 1 and s.Flag = 1order by s.Serie asc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarMedidas",
    "Content": "---CREATE proc [dbo].[spModificarMedidas]@id int,@descripcion varchar(100),@estado bit,@usuariomodifica varchar(50)asupdate mst_Medidas set descripcion = @descripcion,estado = @estado,usuariomodifica = @usuariomodificawhere id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_reporte_cierre_denominaciones_por_fecha",
    "Content": "CREATE proc [dbo].[sp_reporte_cierre_denominaciones_por_fecha]@fecha_ini date,@fecha_fin dateasSELECT a.Fecha, SUM(a.caja_chica) as caja_chica,SUM(a.contado) as contado,SUM(a.credito) as credito,SUM(a.tarjetas) as tarjetas,SUM(a.otros_ingresos) as otros_ingresos,SUM(a.gastos) as gastos,SUM(a.total_efectivo) as total_efectivo,SUM(a.total_egreso) as total_egreso,SUM(a.efectivo_declarado) as efectivo_declarado,SUM(a.diferencia) as diferencia,SUM(a.m010) as m010,SUM(a.m020) as m020,SUM(a.m050) as m050,SUM(a.m1) as m1,SUM(a.m2) as m2,SUM(a.m5) as m5,SUM(a.m10) as m10,SUM(a.m20) as m20,SUM(a.m50) as m50,SUM(a.m100) as m100,SUM(a.m200) as m200,SUM(a.m010*0.10) as tm010,SUM(a.m020*0.20) as tm020,SUM(a.m050*0.50) as tm050,SUM(a.m1*1.00) as tm1,SUM(a.m2*2.00) as tm2,SUM(a.m5*5.00) as tm5,SUM(a.m10*10.00) as tm10,SUM(a.m20*20.00) as tm20,SUM(a.m50*50.00) as tm50,SUM(a.m100*100.00) as tm100,SUM(a.m200*200.00) as tm200FROM mst_Apertura aINNER JOIN mst_Usuarios uON a.IdUsuario = u.IdWHERE CAST(a.Fecha as date) between @fecha_ini and @fecha_fin group by A.Fecha"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_mostrar_deudas_acumuladas",
    "Content": "CREATE proc [dbo].[sp_mostrar_deudas_acumuladas]asselectidusuario,usuario as usuario,fecha_pago,sum(total) as total,sum(total_pagado) as total_pagado,sum(efectivo) as efectivo,sum(cheque) as cheque,sum(transferencia) as transferencia,sum(deposito) as depositofrom (selectidusuario,usuario,fecha_pago,total,(isnull(efectivo, 0) + isnull(cheque, 0) + isnull(transferencia, 0) + isnull(deposito, 0)) as total_pagado,isnull(efectivo, 0) as efectivo,isnull(cheque, 0) as cheque,isnull(transferencia, 0) as transferencia,isnull(deposito, 0) as depositofrom (selectidusuariopreventa as idusuario,u.nombre as usuario,s.FechaPago as 'fecha_pago',SUM(totalventa) total,isnull(sum(s.monto), 0) importe_pagado,ts.descripcion as 'tipo_pago'from mst_venta vinner join tbl_seguimiento s on s.idventa = v.idinner join tbl_tipopago_seguimiento ts on s.idtipopago = ts.idinner join mst_usuarios u on v.idusuariopreventa = u.idinner join mst_formapago fp on v.idformapago = fp.idwhere v.anulado = 0 and (s.Eliminado = 0 and s.validado = 0) --and v.idformapago = 2 group by idusuariopreventa, u.nombre, ts.descripcion, s.FechaPago) as deudaspivot (sum(importe_pagado)for tipo_pago in ([efectivo], [cheque], [transferencia], [deposito])) as pivote_final) as finalgroup by idusuario, usuario, fecha_pago"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarGuia",
    "Content": "CREATE proc [dbo].[spModificarGuia]@id int,@codigoDoc char(2),@seriedoc char(4),@numerodoc int,@idcliente int,@codigotipodocsunat int,@dniruc varchar(20),@razonsocial varchar(200),@direccion varchar(200),@email varchar(200),@observacion text,@usuariomodifica varchar(50),@fechainiciotraslado date,@puntopartido varchar(100),@puntollegada varchar(100),@idtrasnportista int,@placa varchar(20),@idmotivo int,@descripcionmotivo varchar(100),@idventa int,@idalmacen intasupdate mst_Guia set IdDocumento = @codigoDoc,SerieDoc = @serieDoc,NumeroDoc = @numeroDoc,IdCliente = @idcliente,CodigoTipoDoc = @codigoTipoDocSunat,DniRuc = @dniRuc,RazonSocial = @RazonSocial,Direccion = @direccion,Email = @email,Anulado = 0,Observacion = @observacion,UsuarioModifica = @usuariomodifica,FechaModifica = GETDATE(),FechaInicioTraslado = @fechainiciotraslado,PuntoPartido = @puntopartido,PuntoLLegada = @puntollegada,idtrasnportista = @idtrasnportista,Placa = @placa,IdMotivo = @idmotivo,DescripcionMotivo = @descripcionmotivo,IdAlmacen=@idalmacenwhere Id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarSerieUsuario",
    "Content": "CREATE proc [dbo].[spMostrarSerieUsuario]@idusuario intasselect dsu.Id,s.Serie,s.Id IdSerie from mst_Doc_Serie_Usuario dsuinner join mst_Doc_Serie ds on dsu.IdSerie = ds.Idinner join mst_Serie s on ds.IdSerie = s.Idwhere dsu.IdUsuario = @idusuario and dsu.Estado = 1 and dsu.Flag = 1 and s.Estado = 1 and s.Flag = 1order by s.Serie asc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarMedidas",
    "Content": "-------------------------CREATE proc [dbo].[spEliminarMedidas]@id intasupdate mst_Medidas set estado = 0,flag = 0where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_mostrar_aperturas",
    "Content": "CREATE proc [dbo].[sp_mostrar_aperturas]@numero_apertura int,@id_usuario int,@caja intasif @numero_apertura <> 0\tbegin\t\tselect a.Id, Numero, IdUsuario, u.usuario, Fecha, Abierto_Cerrado as Cerrado, IdCaja, fechacierre, caja_chica, contado, credito, tarjetas, otros_ingresos, gastos, total_efectivo, total_egreso, efectivo_declarado, diferencia, reserva from mst_Apertura a\t\tinner join mst_Usuarios u on a.IdUsuario = u.Id\t\twhere Numero = @numero_apertura and IdUsuario = @id_usuario and IdCaja = @caja\t\torder by Fecha desc\tendelse\tif(@id_usuario = 0)\t\tselect a.Id, Numero, IdUsuario, u.usuario, Fecha, Abierto_Cerrado as Cerrado, IdCaja, fechacierre, caja_chica, contado, credito, tarjetas, otros_ingresos, gastos, total_efectivo, total_egreso, efectivo_declarado, diferencia, reserva from mst_Apertura a\t\tINNER join mst_Usuarios u on a.IdUsuario = u.Id\t\torder by Fecha desc\telse\t\tselect a.Id, Numero, IdUsuario, u.usuario, Fecha, Abierto_Cerrado as Cerrado, IdCaja, fechacierre, caja_chica, contado, credito, tarjetas, otros_ingresos, gastos, total_efectivo, total_egreso, efectivo_declarado, diferencia, reserva from mst_Apertura a\t\tinner join mst_Usuarios u on a.IdUsuario = u.Id\t\twhere IdUsuario = @id_usuario and IdCaja = @caja\t\torder by Fecha desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_reporte_cierre_suma_denominaciones_por_usuairo",
    "Content": "CREATE proc [dbo].[sp_reporte_cierre_suma_denominaciones_por_usuairo]@fecha_ini date,@fecha_fin dateasselect u.nombre, a.total_efectivo from mst_Apertura aINNER JOIN mst_Usuarios uON a.IdUsuario = u.IdWHERE CAST(Fecha as date) between @fecha_ini and @fecha_fin"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarGuiaDetalle",
    "Content": "CREATE proc [dbo].[spModificarGuiaDetalle]@id int,@idproducto int,@cantidad money,@idunidad int,@factor decimal,@descripcion text,@peso decimal(18,2),@codbarra varchar(100),@adicional1 varchar(MAX)asupdate mst_guia_det setIdProducto = @idproducto,Cantidad = @cantidad,IdUnidad = @idunidad,Factor = @factor,descripcion = @descripcion,Peso = @peso,CodigoBarra = @codbarra,Adicional1 = @adicional1where Id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarTalla",
    "Content": "--mostrarCREATE proc [dbo].[spMostrarTalla]@top bitasif(@top = 0)select TOP 200 id as 'ID', descripcion as 'Descripción', usuarioCrea as 'Usuario de Creación',fechaCrea as 'Fecha de Creación', usuarioModifica as 'Usuario de Modificación',  fechaModifica as 'Fecha de Modificación',estado as 'Estado'from  mst_Tallawhere flag = 1order by id descelseselect id as 'ID', descripcion as 'Descripción', usuarioCrea as 'Usuario de Creación',fechaCrea as 'Fecha de Creación', usuarioModifica as 'Usuario de Modificación',  fechaModifica as 'Fecha de Modificación',estado as 'Estado'from  mst_Tallawhere flag = 1order by id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetPreciosByIdProductoDetalle",
    "Content": "CREATE proc [dbo].[SpGetPreciosByIdProductoDetalle]@idProductoDetalle intasselectpp.Id,pp.idProductosDetalle 'IdProductoDetalle',pp.idUnidad 'IdUnidad',iif(pp.Codigo = '' or pp.Codigo is null, pd.CodigoBarra, pp.Codigo) 'CodigoBarra',um.nombreUnidad 'Unidad',um.factor 'Factor',pp.precioUnitario 'Precio',pp.Principal 'IsPrincipal',pp.PrincipalAlmacen 'IsPrincipalAlmacen'from mst_ProductoPresentacion ppinner join mst_UnidadMedida um on pp.idUnidad = um.Idinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Idwhere idProductosDetalle = @idProductoDetalleand pp.estado = 1 and pp.flag = 1order by pp.Principal desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarMedidas",
    "Content": "--------CREATE proc [dbo].[spMostrarMedidas]@top bitasif(@top = 0)select TOP 200m.id [Id],m.descripcion [Medida],m.usuariocrea [Usuario Crea.],m.fechacrea [Fecha Crea],m.usuariomodifica [Usuario Modifica],m.fechamodifica [Fecha Modifica],m.estado [Estado]from mst_Medidas mwhere m.flag = 1order by id descelse selectm.id [Id],m.descripcion [Medida],m.usuariocrea [Usuario Crea.],m.fechacrea [Fecha Crea],m.usuariomodifica [Usuario Modifica],m.fechamodifica [Fecha Modifica],m.estado [Estado]from mst_Medidas mwhere m.flag = 1order by id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarSeguimientoCompra",
    "Content": "CREATE proc [dbo].[spEliminarSeguimientoCompra]@id int,@idcompra intasdelete from tbl_SeguimientoCompra where Id = @idexec spIrCancelando_Deuda_SeguimientoCompra @idcompra"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarPedido",
    "Content": "CREATE proc [dbo].[spMostrarPedido]@id int,@bit bit,@esconvenio bitasif(@bit = 0)\tbegin\t\tif @esconvenio = 0\t\t\tbegin\t\t\t\tselect \t\t\t\tIdPedido,\t\t\t\tp.IdCliente,\t\t\t\tCodigoDoc,\t\t\t\tDniRuc,\t\t\t\tp.RazonSocial,\t\t\t\tp.Direccion,\t\t\t\tEmail,\t\t\t\tBolFac,\t\t\t\tu.Id,\t\t\t\tu.usuario,\t\t\t\tIdPiso,\t\t\t\tAdicional,\t\t\t\tBeneficiario,\t\t\t\tIdConvenio,\t\t\t\tco.Razon,\t\t\t\tp.IdParentesco,\t\t\t\tc.nacionalidad,\t\t\t\tisnull(p.Idalmacen,1) as 'IdAlmacen'\t\t\t\tfrom tabla_Pre_Venta p\t\t\t\tinner join mst_TipoDocumento td on p.CodigoDoc = td.codigoSunat\t\t\t\tinner join mst_Usuarios u on IdUsuario = u.Id\t\t\t\tleft join mst_convenios co on p.IdConvenio = co.Id\t\t\t\tleft join mst_Cliente c on p.IdCliente = c.Id\t\t\t\twhere p.IdPedido = @id and p.pagado = 0 and p.eliminado = 0\t\t\tend\t\telse\t\t\tbegin\t\t\t\tselect \t\t\t\tp.Id,\t\t\t\tp.IdCliente,\t\t\t\tCodigoDoc,\t\t\t\tDniRuc,\t\t\t\tp.RazonSocial,\t\t\t\tp.Direccion,\t\t\t\tEmail,\t\t\t\tBolFac,\t\t\t\tu.Id,\t\t\t\tu.usuario,\t\t\t\tIdPiso,\t\t\t\tAdicional,\t\t\t\tBeneficiario,\t\t\t\tIdConvenio,\t\t\t\tco.Razon,\t\t\t\tp.IdParentesco,\t\t\t\tc.nacionalidad,\t\t\t\tisnull(p.Idalmacen,1) as 'IdAlmacen'\t\t\t\tfrom tabla_Pre_Venta_Convenio p\t\t\t\tinner join mst_TipoDocumento td on p.CodigoDoc = td.codigoSunat\t\t\t\tinner join mst_Usuarios u on IdUsuario = u.Id\t\t\t\tleft join mst_convenios co on p.IdConvenio = co.Id\t\t\t\tleft join mst_Cliente c on p.IdCliente = c.Id\t\t\t\twhere p.Id = @id and p.pagado = 0 and p.eliminado = 0\t\t\t\tend\tendelse if (@bit = 1)select idmesa,p.IdCliente,CodigoDoc,DniRuc,p.RazonSocial,p.Direccion,Email,BolFac,u.Id,u.usuario,IdPiso,Adicional,Beneficiario,IdConvenio,co.Razon,p.countPecho,p.countPierna,p.textObservation,c.nacionalidad,isnull(p.Idalmacen,1) as 'IdAlmacen'from tabla_Pre_Venta pinner join mst_TipoDocumento td on p.CodigoDoc = td.codigoSunatinner join mst_Usuarios u on IdUsuario = u.Idleft join mst_convenios co on p.IdConvenio = co.Idleft join mst_Cliente c on p.IdCliente = c.Idwhere p.IdMesa = @id and p.pagado = 0 and p.eliminado = 0"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarGastos",
    "Content": "CREATE proc [dbo].[spMostrarGastos]@idapertura intasselect *,cast(t.Id as varchar) + '-'+ t.Descripcion TipoGasto from mst_GastosOperativos ginner join mst_tipoGasto t on g.IdTipoGasto = t.Idwhere eliminado = 0order by g.id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarTiposDoc",
    "Content": "CREATE PROC [dbo].[spMostrarTiposDoc]ASSELECT codigoSunat,descripcion FROM mst_TipoDocumento WHERE estado = 1 AND flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarMedidas",
    "Content": "----CREATE proc [dbo].[spBuscarMedidas]@buscar varchar(100)asselect TOP 200m.id [Id],m.descripcion [Medida],m.usuariocrea [Usuario Crea.],m.fechacrea [Fecha Crea],m.usuariomodifica [Usuario Modifica],m.fechamodifica [Fecha Modifica],m.estado [Estado]from mst_Medidas mwhere m.flag = 1 and m.descripcion like '%' + @buscar + '%'order by id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_mostrar_credenciales_api_sunat",
    "Content": "CREATE proc [dbo].[sp_mostrar_credenciales_api_sunat]asselect id_api_sunat, clave_api_sunat from tabla_configuracion_general"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_reporte_denominaciones",
    "Content": "CREATE PROC [dbo].[sp_reporte_denominaciones]@id_apertura int,@id_caja int,@id_usuario intasSELECT a.Id,a.Numero,a.IdUsuario,u.nombre,a.Fecha,a.Abierto_Cerrado,a.IdCaja,a.fechacierre,a.caja_chica,a.contado,a.credito,a.tarjetas,a.otros_ingresos,a.gastos,a.total_efectivo,a.total_egreso,a.efectivo_declarado,a.diferencia,a.m010,a.m020,a.m050,a.m1,a.m2,a.m5,a.m10,a.m20,a.m50,a.m100,a.m200,(a.m010*0.10) as tm010,(a.m020*0.20) as tm020,(a.m050*0.50) as tm050,(a.m1*1.00) as tm1,(a.m2*2.00) as tm2,(a.m5*5.00) as tm5,(a.m10*10.00) as tm10,(a.m20*20.00) as tm20,(a.m50*50.00) as tm50,(a.m100*100.00) as tm100,(a.m200*200.00) as tm200FROM mst_Apertura aINNER JOIN mst_Usuarios uON a.IdUsuario = u.IdWHERE a.Numero = @id_apertura and a.IdCaja = @id_caja and a.IdUsuario = @id_usuario"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spAnularGuia",
    "Content": "CREATE proc [dbo].[spAnularGuia]@id int,@observacion textasupdate mst_Guia set Anulado = 1,Observacion = @observacionwhere Id = @idupdate mst_Guia_det set Anulado = 1where idguia = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarTipoUsuario",
    "Content": "CREATE proc [dbo].[spMostrarTipoUsuario]asselect id Id,descripcion Descripcion,usuarioCrea [Usuario Crea],fechaCrea [Fecha Crea],usuarioModifica[Usuario Modifica],fechaModifica [Fecha Modifica],estado Estado from mst_TipoUsuariowhere flag = 1order by id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarGuia",
    "Content": "--select*from mst_GuiaCREATE proc [dbo].[spMostrarGuia]@bit bit,@id intasif(@bit = 0)beginselect g.Id,v.SerieDoc + '-' + LTRIM(str(v.NumeroDoc)) [Doc. Ref.],d.Descripcion [Documento],g.SerieDoc [Serie],g.NumeroDoc [Numero],g.FechaEmision [Fecha Emision],g.razonSocial [Razón Social],g.DniRuc [RUC],g.direccion [Direccion],g.FechaInicioTraslado [Fecha  Traslado],g.PuntoPartido [Punto Partida],g.PuntoLLegada [Punto Llegada],g.anulado Anuladofrom mst_Guia ginner join mst_documentos d on g.IdDocumento = d.Codigoinner join mst_Cliente c on g.idcliente = c.idleft join mst_Venta v on g.IdVenta = v.Idorder by g.Id descendelsebegin\tif(@id = 0)\t\tbegin\t\t\t\t\t\tselect \t\t\t\tg.Id,\t\t\t\td.Descripcion Documento,\t\t\t\tg.SerieDoc Serie,\t\t\t\tg.NumeroDoc Numero,\t\t\t\tg.FechaInicioTraslado FechaInicioTraslado,\t\t\t\tg.CodigoTipoDoc,\t\t\t\tg.dniruc,\t\t\t\tg.RazonSocial,\t\t\t\tg.PuntoPartido,\t\t\t\tg.PuntoLLegada,\t\t\t\tg.IdMotivo,\t\t\t\tg.DescripcionMotivo,\t\t\t\tt.DniRuc DniTransportista,\t\t\t\tt.Nombre Nombre_Transportista,\t\t\t\tg.Placa,\t\t\t\tt.Licencia,\t\t\t\tdd.Descripcion Doc_Ref,\t\t\t\tv.SerieDoc Serie_Ref,\t\t\t\tv.NumeroDoc Numero_Ref,\t\t\t\tG.IdTrasnportista,\t\t\t\t\t\t\t\tISNULL(v.id , 0) idventa,\t\t\t\tG.IdCliente\t\t\t\tfrom mst_Guia g\t\t\t\tinner join mst_documentos d on g.IdDocumento = d.Codigo\t\t\t\tinner join mst_Cliente c on g.idcliente = c.id\t\t\t\tinner join mst_Transportistas t on g.IdTrasnportista = t.Id\t\t\t\tleft join mst_Venta v on g.idventa = v.Id\t\t\t\tLEFT join mst_documentos dd on v.IdDocumento = dd.Codigo\t\t\t\torder by g.Id desc\t\tend\telse\t\tbegin\t\t\t\t\t\tselect \t\t\t\tg.Id,\t\t\t\td.Descripcion Documento,\t\t\t\tg.SerieDoc Serie,\t\t\t\tg.NumeroDoc Numero,\t\t\t\tg.FechaInicioTraslado FechaInicioTraslado,\t\t\t\tg.CodigoTipoDoc,\t\t\t\tg.dniruc,\t\t\t\tg.RazonSocial,\t\t\t\tg.PuntoPartido,\t\t\t\tg.PuntoLLegada,\t\t\t\tg.IdMotivo,\t\t\t\tg.DescripcionMotivo,\t\t\t\tt.DniRuc DniTransportista,\t\t\t\tt.Nombre Nombre_Transportista,\t\t\t\tg.Placa,\t\t\t\tt.Licencia,\t\t\t\tdd.Descripcion Doc_Ref,\t\t\t\tv.SerieDoc Serie_Ref,\t\t\t\tv.NumeroDoc Numero_Ref,\t\t\t\tG.IdTrasnportista,\t\t\t\tISNULL(v.id , 0) idventa,\t\t\t\tG.IdCliente\t\t\t\tfrom mst_Guia g\t\t\t\tinner join mst_documentos d on g.IdDocumento = d.Codigo\t\t\t\tinner join mst_Cliente c on g.idcliente = c.id\t\t\t\tinner join mst_Transportistas t on g.IdTrasnportista = t.Id\t\t\t\tleft join mst_Venta v on g.idventa = v.Id\t\t\t\tLEFT join mst_documentos dd on v.IdDocumento = dd.Codigo\t\t\t\twhere g.id = @id\t\t\t\torder by g.Id desc\t\tendend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarUnidad",
    "Content": "----------------------------------------------------------------------mostrar unidad-------------CREATE procedure [dbo].[spMostrarUnidad]@top bitasif(@top = 0)select top 100 id as 'ID', nombreUnidad as 'Nombre Unidad',factor as 'Factor' ,usuarioCrea as 'Usuario Creador', fechaCrea as 'Fecha de Registro', usuarioModifica as 'Usuario Modifica', fechaModifica as 'Fecha de Modificación' , estado as 'Estado'from  mst_UnidadMedidawhere flag = 1order by id descelseselect id as 'ID', nombreUnidad as 'Nombre Unidad',factor as 'Factor' ,usuarioCrea as 'Usuario Creador', fechaCrea as 'Fecha de Registro', usuarioModifica as 'Usuario Modifica', fechaModifica as 'Fecha de Modificación' , estado as 'Estado'from  mst_UnidadMedidawhere flag = 1order by id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetProductoConstulasPrecio",
    "Content": "CREATE proc [dbo].[SpGetProductoConstulasPrecio]@text varchar(250)asSELECT top 20Descripcion 'Nombre',U_Medida 'Unidad',Precio_Unit 'Precio'FROM vw_FiltroProductoswhere Descripcion like CONCAT('%', @text, '%')ORDER BY IdProducto, principal DESC"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddPedidoBusqueda",
    "Content": "CREATE proc [dbo].[SpAddPedidoBusqueda]@numPedido int,@idPiso int,@isCodBarraBusqueda bitasupdate tabla_Pre_Venta_Detalle set  isCodBarraBusqueda = @isCodBarraBusquedafrom tabla_Pre_Venta p where p.IdPedido = @numPedido and p.IdPiso = @idPisoand p.Pagado = 0 and p.Eliminado = 0"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spinsertardescuento",
    "Content": "CREATE proc [dbo].[spinsertardescuento]@idgrupo int,@des_subida decimal(18,2),@des_bajada decimal(18,2)asif((select count(idgrupo) from descuentos where idgrupo = @idgrupo) > 0)\tupdate descuentos set desc_subida = @des_subida, desc_bajada = @des_bajada where idgrupo = @idgrupoelse\tinsert into descuentos \tvalues(@idgrupo,@des_subida,@des_bajada)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spActualizarTotales_Compra",
    "Content": "CREATE proc [dbo].[spActualizarTotales_Compra]@id intasdeclare @subtotal money =  (select SUM(Subtotal) from mst_ComprasDetalles  where IdCompra = @id and Flag  = 1)declare @descuento money =  (select SUM(Descuento) from mst_ComprasDetalles where IdCompra = @id and Flag = 1)declare @igv money = 0--update mst_Compras set Subtotal = @subtotal,--Totaldescuento = @descuento,--TotalIgv = @igv,--total = ROUND((@subtotal + @igv) - @descuento,2)--where Id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetComisionByIdVenta",
    "Content": "CREATE proc [dbo].[SpGetComisionByIdVenta]@idVenta intasselectc.Id,c.IdVenta,CONCAT(v.SerieDoc, '-', v.NumeroDoc) as 'Referencia',v.TotalVenta,c.Total 'Comision',c.MontoPagado,c.IdUsuario,u.usuario 'Usuario' from Comision cinner join mst_Venta v on c.IdVenta = v.idinner join mst_Usuarios u on c.idUsuario = u.Idwhere c.IdVenta = @idVentaorder by v.FechaEmision asc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarVentas",
    "Content": "CREATE proc [dbo].[spMostrarVentas]@id intasif(@id = 0)selectTOP 200 v.Id,case v.IdDocumentowhen '03' then 'BOLETA'when '01' then 'FACTURA'when '07' then 'NOTA DE CREDITO'when '08' then 'NOTA DE DÉBITO'END Documento,v.SerieDoc Serie,v.NumeroDoc [N°],v.RazonSocial [Razon Social - Cliente],v.TotalVenta,v.FechaEmision [Fecha Emisión],u.usuario [Atendido por],v.Anulado Estado,ISNULL(cpe.doc_firma, 0) Firma,isnull(cpe.doc_cdr ,0)  Cdr,v.IdGuia Guiafrom mst_Venta vinner join mst_documentos d on v.IdDocumento = d.Codigoinner join mst_Usuarios u on v.IdUsuarioPreventa = u.Idleft join tbl_info_cpe cpe on v.Id = cpe.id_cab_cpeorder by Id descelseselect v.Id,case v.IdDocumentowhen '03' then 'BOLETA'when '01' then 'FACTURA'when '07' then 'NOTA DE CREDITO'when '08' then 'NOTA DE DÉBITO'END Documento,v.SerieDoc Serie,v.NumeroDoc [N°],v.RazonSocial [Razon Social - Cliente],v.TotalVenta,v.FechaEmision [Fecha Emisión],u.usuario [Atendido por],v.Anulado Estado,ISNULL(cpe.doc_firma, 0) Firma,isnull(cpe.doc_cdr ,0)  Cdr,v.IdCliente,v.Direccionfrom mst_Venta vinner join mst_documentos d on v.IdDocumento = d.Codigoinner join mst_Usuarios u on v.IdUsuarioPreventa = u.Idleft join tbl_info_cpe cpe on v.Id = cpe.id_cab_cpewhere v.id = @idorder by Id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spmostrardescuentos",
    "Content": "------------CREATE proc [dbo].[spmostrardescuentos]@idgrupo intasif(@idgrupo = 0)\tselect * from descuentoselse\tselect * from descuentos where idgrupo = @idgrupo"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarGuiaDetalle",
    "Content": "CREATE proc [dbo].[spEliminarGuiaDetalle]@id intasupdate mst_Guia_det set Anulado = 1, flag = 0where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostraUsuario",
    "Content": "---CREATE proc [dbo].[spMostraUsuario]@top bitasif(@top = 0)select TOP 200 u.Id Id,tu.descripcion [Tipo de Usuario],u.nombre Nombre,u.dni Dni,u.direccion Direccion,u.telefono Telefono, u.correo Correo,u.usuario Usuario,u.pass Pass,u.usuarioCrea [Usuario Crea],u.fechaCrea [Fecha Crea],u.usuarioModifica [Usuario Modifica], u.fechaModifica [Fecha Modifica],u.Foto ,u.estado Estado, tu.Id IDtipoUsuario, is_cobrador,verVentas, u.DocVentaDefecto from mst_Usuarios uinner join mst_TipoUsuario tu on u.idtipoUsuario = tu.Idwhere u.flag = 1 and tu.flag = 1order by u.id descelseselect u.Id Id,tu.descripcion [Tipo de Usuario],u.nombre Nombre,u.dni Dni,u.direccion Direccion,u.telefono Telefono,u.correo Correo, u.usuario Usuario,u.pass Pass,u.usuarioCrea [Usuario Crea],u.fechaCrea [Fecha Crea],u.usuarioModifica [Usuario Modifica],u.fechaModifica [Fecha Modifica], u.Foto ,u.estado Estado, tu.Id IDtipoUsuario,is_cobrador, verVentas, u.DocVentaDefecto from mst_Usuarios uinner join mst_TipoUsuario tu on u.idtipoUsuario = tu.Idwhere u.flag = 1 and tu.flag = 1order by u.id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetProductoDetalleByIdProducto",
    "Content": "CREATE proc [dbo].[SpGetProductoDetalleByIdProducto]@idProducto intasselect Id,idProducto 'IdProducto',idTalla 'IdTalla',idColores 'IdColor',stockminimo 'StockMinimo',stockactual 'StockActual',fechavencimiento 'FechaVence',descripcion 'Descripcion',codigoBarra 'CodigoBarra',estado 'Estado',idmedida 'IdMedida',checkStock 'CheckStock'from mst_ProductoDetallewhere idProducto = @idProducto and flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarFamilia",
    "Content": "--------------------------------------------------------------Procedimiento de Almacenado BuscarCREATE procedure [dbo].[spBuscarFamilia]@buscar varchar(100) asselect top 200 f.id as 'ID',f.nombreFamilia as 'Nombre',l.nombreLinea as 'Linea', f.usuarioCrea as 'Usuario Creador', f.fechaCrea as 'Fecha de Creación', f.usuarioModifica as 'Usuario Modifica', f.fechaModifica as 'Fecha Modificación', f.estado as 'Estado',cast(l.Id as varchar) AS 'ID LINEA'from mst_Familia finner join mst_Linea l on f.idLinea = l.idwhere f.nombreFamilia like '%'+@buscar +'%' and f.flag = 1order by id  desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spPreVenta_Contacto_Insertar",
    "Content": "CREATE proc [dbo].[spPreVenta_Contacto_Insertar]@idmesa int,@idpedido int,@codigodoc char(2),@idcliente int,@dniruc varchar(50),@razonsocial varchar(200),@direccion varchar(200),@email varchar(200),@idusuario int,@bolfac char(2),@idalmacen int,@idpiso int,@adicional varchar(250),@beneficiario varchar(250),@idconvenio int,@esconvenio bit,@idparentesco intas declare @id_antes int = 0, @id_despues int;IF(@esconvenio = 0)beginset @id_antes = ISNULL((select MAX(id) from tabla_Pre_Venta),0)endelsebeginset @id_antes = ISNULL((select MAX(id) from tabla_Pre_Venta_Convenio),0)enddeclare @id_pedido_despues int = 0if(@id_antes > 0)\tbegin\t\tif @esconvenio = 0\t\t\tbegin\t\t\tset @id_pedido_despues = (select idpedido from tabla_Pre_Venta where Id = @id_antes)\t\t\tend\t\telse\t\t\tbegin\t\t\tset @id_pedido_despues = (select idpedido from tabla_Pre_Venta_Convenio where Id = @id_antes)\t\t\tend\tendif(@esconvenio = 0)\tbegin\t\tdeclare @secuencia int\t\tif (@idmesa>=500 and @idmesa < 1000)set @secuencia = dbo.F_SecuenciaLlevar()\t\telse set @secuencia = dbo.F_SecuenciaDelivery()\t\tif(@idmesa < 500) set @secuencia = 0\t\telse\t\tbegin\t\tif(@secuencia = 0)\t\tbegin set @secuencia = 1 end\t\tend\t\tinsert into tabla_Pre_Venta(IdMesa, CodigoDoc,IdCliente,DniRuc,RazonSocial,Direccion,Email,Pagado,Eliminado,IdUsuario,bolfac,Idalmacen,idpiso,numSecuencia, Adicional, Beneficiario, IdConvenio, IdParentesco)\t\tvalues(@idmesa,@codigodoc,@idcliente,@dniruc,@razonsocial,@direccion,@email,0,0,@idusuario,@bolfac,@idalmacen,@idpiso,@secuencia, @adicional,@beneficiario, @idconvenio,@idparentesco)\tendelse\tbegin\t \t \tinsert into tabla_Pre_Venta_Convenio(IdMesa, CodigoDoc,IdCliente,DniRuc,RazonSocial,Direccion,Email,Pagado,Eliminado,IdUsuario,bolfac,Idalmacen,idpiso,numSecuencia, Adicional, Beneficiario, IdConvenio, IdParentesco)\tvalues(@idmesa,@codigodoc,@idcliente,@dniruc,@razonsocial,@direccion,@email,0,0,@idusuario,@bolfac,@idalmacen,@idpiso,@secuencia, @adicional,@beneficiario, @idconvenio, @idparentesco)\tendset @id_despues = SCOPE_IDENTITY();--select @id_antes as 'idpedido',  @id_despues as 'xxx'if(@id_despues > @id_antes)\tbegin\t\t\t\t\t\t \t\tif @esconvenio = 0\t\t\tbegin\t\t\tSET @id_pedido_despues = @id_pedido_despues + 1\t\t\tupdate tabla_Pre_Venta set IdPedido = @id_pedido_despues where Id = @id_despues\t\t\tselect @id_pedido_despues as 'id'\t\t\tend\t\telse\t\tbegin\t\t \t\tSET @id_pedido_despues = @id_pedido_despues + 1\t\tupdate tabla_Pre_Venta_Convenio set IdPedido = @id_pedido_despues where Id = @id_despues\t\tselect @id_despues as 'id'\t\tend\tendelse\tbegin\t\tselect 0 as 'id';\tend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarUsuario_Items",
    "Content": "CREATE proc [dbo].[spInsertarUsuario_Items]@opciones int,@idusuario int,@idmenu int,@idsubmenu int,@addmod bit,@estado bitasif(@opciones = 0)beginif(@addmod=0)begininsert into tabla_Usuarios_Menu(idusuario,idmenu)values(@idusuario,@idmenu)endelsebeginupdate tabla_Usuarios_Menu set Estado=@estadowhere idusuario = @idusuario and idmenu = @idmenuendendelse if(@opciones = 1)beginif(@addmod = 0)begininsert into tabla_Usuario_SubMenu(idusuario,idmenu,idsubmenu)values(@idusuario,@idmenu,@idsubmenu)endelsebeginupdate tabla_Usuario_SubMenu set Estado=@estadowhere idusuario = @idusuario and idmenu = @idmenu and idsubmenu = @idsubmenuendend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEnviarPulsos",
    "Content": "CREATE proc [dbo].[spEnviarPulsos]@nombre varchar(100),@piso int,@mesa intasif((select count(*) from tabla_pulsos where NombreUsuario = @nombre and IdPiso = @piso)>0)\tbegin\tupdate tabla_pulsos set IdMesa = @mesa\twhere NombreUsuario = @nombre and IdPiso = @piso\tend\telse\tbegin\tinsert into tabla_pulsos\tvalues(@nombre,@piso,@mesa)\tend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spPreVenta_Detalle_Insertar",
    "Content": "CREATE proc [dbo].[spPreVenta_Detalle_Insertar]@idmesa int,@idcontacto int,@idproducto int,@descripcion  varchar(200),@codigobarra varchar(50),@umedida varchar(50),@cantidad money,@precio money,@subtotal money,@descuento money,@factor decimal,@idunidad int,@igv money,@total money,@idpiso int,@adicional1 text,@adicional2 date,@adicional3 varchar(200),@adicional4 varchar(200),@igv_incluido bit,@esconvenio bit,@isCodBarraBusqueda bit = 1asdeclare @subtotalBD moneydeclare @totalBD moneydeclare @secuencia intif @esconvenio = 0\tbegin\t\t\t\tset @subtotalBD = (@cantidad * @precio)\t\tset @totalBD = ROUND(((@cantidad * @precio)+@igv) - @descuento,2)\t\tset @secuencia = (select max(numsecuencia) from tabla_Pre_Venta)\t\tif(@idmesa < 500) set @secuencia = 0\t\tinsert into tabla_Pre_Venta_Detalle(IdMesa,IdPedido,IdProducto,Descripcion,CodigoBarra,UMedida,Cantidad,Precio,Subtotal,Pagado,Eliminado,Descuento,factor,idunidad,igv,total,IdPiso,NumSecuencia,adicional1,adicional2,adicional3,Adicional4,igv_incluido, IsCodBarraBusqueda)\t\tvalues(@idmesa,@idcontacto,@idproducto,@descripcion,@codigobarra,@umedida,@cantidad,@precio,@subtotalBD,0,0,@descuento,@factor,@idunidad,@igv,@totalBD,@idpiso,@secuencia,@adicional1,@adicional2,@adicional3,@adicional4,@igv_incluido, @isCodBarraBusqueda)\t\tdeclare @idaux int = @idmesa, @bit bit = 1\t\tif(@idmesa = 0) begin\t\tset @idaux = @idcontacto \t\tset @bit = 0\t\tend\t\texec spIngresarOtrosImpuestos_Preventa @idaux, @bit, 0\tendelse\tbegin\t\tset @subtotalBD = (@cantidad * @precio)\t\tset @totalBD = ROUND(((@cantidad * @precio)+@igv) - @descuento,2)\t\tset @secuencia = 0\t\tif(@idmesa < 500) set @secuencia = 0\t\tinsert into tabla_Pre_Venta_Detalle_Convenio(IdMesa,IdPedido,IdProducto,Descripcion,CodigoBarra,UMedida,Cantidad,Precio,Subtotal,Pagado,Eliminado,Descuento,factor,idunidad,igv,total,IdPiso,NumSecuencia,adicional1,adicional2,adicional3,Adicional4,igv_incluido)\t\tvalues(@idmesa,@idcontacto,@idproducto,@descripcion,@codigobarra,@umedida,@cantidad,@precio,@subtotalBD,0,0,@descuento,@factor,@idunidad,@igv,@totalBD,@idpiso,@secuencia,@adicional1,@adicional2,@adicional3,@adicional4,@igv_incluido)\t\texec spIngresarOtrosImpuestos_Preventa @idaux, @bit, 1\tend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetSerieDocumentoByIdUsuarioYDocumento",
    "Content": "CREATE proc [dbo].[SpGetSerieDocumentoByIdUsuarioYDocumento]@idUsuario int,@codigoDocumento varchar(2)as selects.Id 'IdSerie',s.Serie 'Serie',u.Id 'IdUsuario',u.nombre 'Usuario',d.Codigo 'CodigoDocumento',d.Descripcion 'Documento'from mst_Doc_Serie_Usuario dsuinner join mst_Doc_Serie ds on dsu.idserie = ds.Idinner join mst_Serie s on ds.IdSerie = s.Idinner join mst_documentos d on ds.IdDoc = d.Codigoinner join mst_usuarios u on dsu.idusuario = u.idwhere dsu.IdUsuario = @idusuario and d.Codigo = @codigoDocumentoand dsu.Estado = 1 and dsu.Flag = 1 and ds.Estado = 1 and ds.Flag = 1and s.Estado = 1 and s.Flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_reporte_delivery",
    "Content": "CREATE proc [dbo].[sp_reporte_delivery]@id_venta intasselect v_d.Id_contacto,v_d.num_correlative,c.razonSocial as Contacto,d.Direccion,v.Id,v.IdDocumento,v.SerieDoc,v.NumeroDoc,cast(v.FechaEmision as date) as FechaEmision,v.SubTotal as Importe,v.Otro_Imp,v.TotalVenta,v.Total_Letras,v.Anulado,vd.IdProducto,vd.descripcion,vd.Cantidad,vd.SubTotal,vd.Total,vd.Anulado,v_d.estado,v_d.flag,v.countPecho,v.countPierna,v.textObservation,c.telefono,g.Descripcion 'grupo'from mst_Venta vinner join mst_Venta_det vd on vd.IdVenta = v.Idinner JOIN venta_delivery v_d on v_d.id_venta = v.Idleft join mst_Cliente c on v_d.id_contacto = c.idleft join mst_Cliente_Direccion d ON c.Id = d.IdCliente inner join mst_ProductoPresentacion pp on vd.IdProducto = pp.Idinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Idinner join mst_Producto p on pd.idProducto = p.Idinner join mst_Grupo g on p.IdGrupo = g.Idwhere (v.Anulado = 0 and vd.Anulado = 0) and v.Id = @id_venta"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spSecuenciaIdProforma",
    "Content": "CREATE proc [dbo].[spSecuenciaIdProforma]asselect max(id) id from tabla_Proforma"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarUsuarioItems",
    "Content": "CREATE proc [dbo].[spMostrarUsuarioItems]@idusuario int,@opcion int,@hay bitasif(@hay != 0)beginif(@opcion= 0)beginselect cast(mm.id as varchar),nombre,text,Estado,mm.Icono Icono from tabla_Usuarios_Menu minner join tabla_Menus mm on m.idmenu = mm.idwhere idusuario = @idusuario and m.idmenu = mm.idendelse if(@opcion = 1)beginselect cast(sm.idmenu as varchar) + '.'+cast(sm.id as varchar),nombre,text,Estado,sm.icon from tabla_Usuario_SubMenu minner join tabla_SubMenus sm on m.idsubmenu = sm.idwhere idusuario = @idusuario and sm.idmenu = m.idmenuendendelsebeginif(@opcion= 0)beginselect * from tabla_Menusendelse if(@opcion = 1)beginselect cast(idmenu as varchar) + '.'+cast(id as varchar),text from tabla_SubMenusendend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpUpdateLote",
    "Content": "CREATE proc [dbo].[SpUpdateLote]@state bitasupdate tabla_configuracion_general set ActivarLote = @state"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spSecuenciaId",
    "Content": "CREATE Procedure [dbo].[spSecuenciaId]( @nombreTabla nvarchar(100), @columna varchar(100))AsDeclare @tabla nvarchar(max);declare @columnas nvarchar(500);set @columnas = '@columna varchar(100)';Set @tabla = 'SELECT cast(max(' + @columna+') as varchar) FROM ' + QUOTENAME(@nombreTabla);exec sp_executesql @tabla"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpDeletePedidosDetalles",
    "Content": "CREATE proc [dbo].[SpDeletePedidosDetalles]@id intasupdate PedidosDetalles set Eliminado = 1where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_reporte_general_pagos_facturacion",
    "Content": "CREATE PROC [dbo].[sp_reporte_general_pagos_facturacion]@fecha_ini date,@fecha_fin date,@IdCliente int,@IdVendedor int,@onlyDeudas bit = 0asif @IdCliente = 0beginIF @IdVendedor = 0BEGIN\t--REPORTE GENERAL DE PAGOS FACTURACION\tSELECT c.numeroDocumento,c.razonSocial,v.idDocumento,v.SerieDoc,v.NumeroDoc,CAST(v.FechaEmision AS Date) as FechaEmision,\tv.TotalVenta,ISNULL(s.IdTipoPago,' ') as IdTipoPago,ISNULL(ts.Descripcion,' ') as TipoPago,\tISNULL(s.descripcion,' ') AS descripcion,ISNULL(s.monto,0.00) AS monto,ISNULL(s.FechaPago,' ') AS FechaPago,u.nombre,v.IdUsuarioPreventa as IdVendedor,\tn.nombre as nacionalidad\tFROM mst_Venta v\tINNER JOIN mst_Cliente c\tON v.IdCliente = c.Id\tLEFT JOIN tbl_Seguimiento s\tON v.Id = s.IdVenta\tLEFT JOIN tbl_TipoPago_Seguimiento ts\tON ts.Id = s.IdTipoPago\tINNER JOIN mst_Usuarios u\tON u.Id = v.IdUsuarioPreventa\tINNER JOIN nacionalidad n\tON n.Id = c.nacionalidad\tWHERE v.IdFormaPago = 2 AND v.Anulado = 0 AND\t(c.estado = 1 and c.flag = 1) AND\tCAST(v.FechaEmision AS Date) BETWEEN @fecha_ini AND @fecha_fin\tAND ISNULL(s.Eliminado,0) = 0 \tAND v.ImportePagado <=\t\tCASE\t\t\t@onlyDeudas \t\t\tWHEN 0 THEN\t\t\tv.TotalVenta\t\t\tELSE\t\t\t(v.TotalVenta - 1)\t\tEND\tORDER BY c.razonSocial,v.SerieDoc,v.NumeroDocENDELSE\tBEGIN\t\t--REPORTE GENERAL DE PAGOS FACTURACION\t\tSELECT c.numeroDocumento,c.razonSocial,v.idDocumento,v.SerieDoc,v.NumeroDoc,CAST(v.FechaEmision AS Date) as FechaEmision,\t\tv.TotalVenta,ISNULL(s.IdTipoPago,' ') as IdTipoPago,ISNULL(ts.Descripcion,' ') as TipoPago,\t\tISNULL(s.descripcion,' ') AS descripcion,ISNULL(s.monto,0.00) AS monto,ISNULL(s.FechaPago,' ') AS FechaPago,u.nombre,v.IdUsuarioPreventa as IdVendedor,\t\tn.nombre as nacionalidad\t\tFROM mst_Venta v\t\tINNER JOIN mst_Cliente c\t\tON v.IdCliente = c.Id\t\tLEFT JOIN tbl_Seguimiento s\t\tON v.Id = s.IdVenta\t\tLEFT JOIN tbl_TipoPago_Seguimiento ts\t\tON ts.Id = s.IdTipoPago\t\tINNER JOIN mst_Usuarios u\t\tON u.Id = v.IdUsuarioPreventa\t\tINNER JOIN nacionalidad n\t\tON n.Id = c.nacionalidad\t\tWHERE v.IdFormaPago = 2 AND v.Anulado = 0 AND\t\t(c.estado = 1 and c.flag = 1) AND\t\tCAST(v.FechaEmision AS Date) BETWEEN @fecha_ini AND @fecha_fin AND v.IdUsuarioPreventa = @IdVendedor\t\tAND ISNULL(s.Eliminado,0) = 0\t\tAND v.ImportePagado <=\t\tCASE\t\t\t@onlyDeudas \t\t\tWHEN 0 THEN\t\t\tv.TotalVenta\t\t\tELSE\t\t\t(v.TotalVenta - 1)\t\tEND\t\tORDER BY c.razonSocial,v.SerieDoc,v.NumeroDoc\tENDEndelsebegin--REPORTE GENERAL DE PAGOS FACTURACION - AGREGADO JPUGASELECT c.numeroDocumento,c.razonSocial,v.idDocumento,v.SerieDoc,v.NumeroDoc,CAST(v.FechaEmision AS Date) as FechaEmision,v.TotalVenta,ISNULL(s.IdTipoPago,' ') as IdTipoPago,ISNULL(ts.Descripcion,' ') as TipoPago,ISNULL(s.descripcion,' ') AS descripcion,ISNULL(s.monto,0.00) AS monto,ISNULL(s.FechaPago,' ') AS FechaPago,u.nombre,v.IdUsuarioPreventa as IdVendedor,n.nombre as nacionalidadFROM mst_Venta vINNER JOIN mst_Cliente cON v.IdCliente = c.IdLEFT JOIN tbl_Seguimiento sON v.Id = s.IdVentaLEFT JOIN tbl_TipoPago_Seguimiento tsON ts.Id = s.IdTipoPagoINNER JOIN mst_Usuarios uON u.Id = v.IdUsuarioPreventaINNER JOIN nacionalidad nON n.Id = c.nacionalidadWHERE v.IdFormaPago = 2 AND v.Anulado = 0 AND(c.estado = 1 and c.flag = 1) AND c.Id = @IdCliente AND v.TotalVenta <> v.ImportePagado --AND ISNULL(s.monto,0.00)=0AND ISNULL(s.IdTipoPago,' ')=0ORDER BY c.razonSocial,v.SerieDoc,v.NumeroDocend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spStockActualizarAcumulado",
    "Content": "CREATE PROC [dbo].[spStockActualizarAcumulado]@idalmacen intasINSERT INTO Stocks_Acumulados select  @idalmacen as IdAlmacen, id as IdProducto, 0.00 as Entradas, 0.00 as Salidas, 0.00 as Saldo, '2019-03-10' as Fecha_Crea, NULL as Fecha_Modifica, 'ADMIN' AS Usuario_Crea, NULL AS Usuario_Modifica from mst_ProductoDetalle where flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_validar_contrasenia_admin",
    "Content": "CREATE PROC [dbo].[sp_validar_contrasenia_admin]@pass varchar(250)asselect * from mst_Usuarios uinner join mst_TipoUsuario tu on u.idtipoUsuario = tu.Idwhere pass = @pass and tu.descripcion = 'admin' or tu.descripcion = 'administrador'"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_modificar_pago_defecto",
    "Content": "CREATE proc [dbo].[sp_modificar_pago_defecto]@pago_defecto char(2)asupdate tabla_configuracion_general set pago_defecto = @pago_defecto"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spVersiHay",
    "Content": "CREATE proc [dbo].[spVersiHay]@idventa intasselect * from tbl_info_cpewhere id_cab_cpe = @idventa"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_reporte_general_pagos_notas_salidas",
    "Content": "CREATE PROC [dbo].[sp_reporte_general_pagos_notas_salidas]@fecha_ini date,@fecha_fin date,@IdCliente intasif @IdCliente = 0begin--REPORTE GENERAL DE PAGOS NOTAS DE SALIDASSELECT v.Id, c.numeroDocumento,c.razonSocial,'NS' as 'Documento',v.Serie,v.Numero,CAST(v.Fecha AS Date) as FechaEmision,v.Total,ISNULL(s.tipo_pago_seguimiento_id,'') as IdTipoPago,ISNULL(ts.Descripcion,'') as TipoPago,ISNULL(s.descripcion,'') AS descripcion,ISNULL(s.monto,0.00) AS monto,ISNULL(cast(s.Fecha as date),'') AS FechaPago FROM mst_almacen_movimiento vINNER JOIN mst_Cliente c ON v.IdCliente = c.IdLEFT JOIN api_almacen_pagos s ON v.Id = s.almacen_movimiento_idLEFT JOIN tbl_TipoPago_Seguimiento ts ON ts.Id = s.tipo_pago_seguimiento_idWHERE v.salida = 1 and (v.estado = 1 and v.flag = 1)AND (c.estado = 1 and c.flag = 1) AND CAST(v.Fecha AS Date) BETWEEN @fecha_ini AND @fecha_finORDER BY c.razonSocial,v.Serie,v.NumeroendelsebeginSELECT v.Id, c.numeroDocumento,c.razonSocial,'NS' as 'Documento',v.Serie,v.Numero,CAST(v.Fecha AS Date) as FechaEmision,v.Total,ISNULL(s.tipo_pago_seguimiento_id,'') as IdTipoPago,ISNULL(ts.Descripcion,'') as TipoPago,ISNULL(s.descripcion,'') AS descripcion,ISNULL(s.monto,0.00) AS monto,ISNULL(cast(s.Fecha as date),'') AS FechaPago FROM mst_almacen_movimiento vINNER JOIN mst_Cliente c ON v.IdCliente = c.IdLEFT JOIN api_almacen_pagos s ON v.Id = s.almacen_movimiento_idLEFT JOIN tbl_TipoPago_Seguimiento ts ON ts.Id = s.tipo_pago_seguimiento_idWHERE v.salida = 1 and (v.estado = 1 and v.flag = 1)AND (c.estado = 1 and c.flag = 1) AND c.Id = @IdCliente AND ISNULL(s.monto,0.00)=0ORDER BY c.razonSocial,v.Serie,v.Numeroend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarPulsos",
    "Content": "CREATE proc [dbo].[spMostrarPulsos]@idpiso intasselect * from tabla_pulsos where IdPiso = @idpiso"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarLinea",
    "Content": "----------------------------------------------BUSCAR LINEACREATE procedure [dbo].[spBuscarLinea]@buscar varchar(100) asselect top 200 l.id as 'ID', l.nombreLinea as 'Nombre', g.nombregrupo as 'Grupo',l.usuarioCrea as 'Usuario de Creación',l.fechaCrea as 'Fecha de Creación',l.usuarioModifica as 'Usuario de Modificación', l.fechaModifica as 'Fecha de Modificación', l.estado as 'Estado' ,cast(g.id as varchar) AS 'ID GRUPO'from mst_Linea linner join mst_Grupo g on l.idGrupo = g.idwhere l.nombreLinea like '%'+@buscar +'%' and l.flag = 1order by l.id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spAM_RestaurantPisos",
    "Content": "CREATE proc [dbo].[spAM_RestaurantPisos]@numpiso int,@canmesas int,@descripcion varchar(100),@num_inicio intasdeclare @cont int = (select COUNT(id) from tabla_RestPisos where NumPiso = @numpiso)if(@cont >= 1)beginupdate tabla_RestPisos set CantMesas = @canmesas, numInicio = @num_inicio where NumPiso = @numpisoendelsebegininsert into tabla_RestPisos(NumPiso,CantMesas, numInicio)values(@numpiso,@canmesas, @num_inicio)end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spVerificarPulso",
    "Content": "CREATE proc [dbo].[spVerificarPulso]@nombre varchar(100),@piso int,@mesa intasselect * from tabla_pulsos where NombreUsuario = @nombre and IdPiso = @piso and IdMesa = @mesa"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_mostrar_pago_defecto",
    "Content": "CREATE proc [dbo].[sp_mostrar_pago_defecto]asselect pago_defecto from tabla_configuracion_general"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetProveedorById",
    "Content": "CREATE proc [dbo].[SpGetProveedorById]@id intasselect top 50 Id,Nombre,Ruc,Direccion,Telefono,Emailfrom mst_Proveedorwhere estado = 1 and flag = 1and id = @idORDER BY id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarPiso",
    "Content": "CREATE proc [dbo].[spEliminarPiso]@id intasdelete from tabla_RestPisoswhere NumPiso = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spModificarGastosOperativos",
    "Content": "CREATE proc [dbo].[spModificarGastosOperativos]@id int,@idtipogasto int,@num_bolfact varchar(100),@ruc varchar(50),@proveedor varchar(100),@concepto varchar(50),@monto money,@idcaja intasupdate mst_GastosOperativos setIdTipoGasto = @idtipogasto,Num_BolFact = @num_bolfact,Ruc = @ruc,Proveedor = @proveedor,Concepto = @concepto,Monto = @monto,idcaja = @idcajawhere id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetComisionPagosByIdComision",
    "Content": "CREATE proc [dbo].[SpGetComisionPagosByIdComision]@idComision intasselect * from ComisionPagoswhere IdComision = @idComision and Eliminado = 0"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spCodigoBarraImpresion",
    "Content": "CREATE procedure [dbo].[spCodigoBarraImpresion]@idPresentacion int,@isPresentacion bitasselect top 1 pd.id Id,iif(@isPresentacion = 1, pp.Codigo, pd.CodigoBarra) as 'CodigoBarra',concat(p.nombreProducto, pd.descripcion) Descripcion, um.nombreUnidad U_Medida,um.factor Factor,proveedor.nombre Proveedor,pd.fechavencimiento F_Vence,pp.precioUnitario Precio_Unit,pp.idUnidad Id_Unidad,p.Id Id_Producto,pd.estado Estado,ISNULL(stock.Saldo, 0) Stock,pp.Id IdPresentacion,stock.IdAlmacen IdAlmacen,g.Descripcion Grupo,g.Id idGrupo,pd.stockminimofrom mst_ProductoPresentacion pp inner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.idinner join mst_Producto p on pd.idProducto = p.idinner join mst_UnidadMedida um on pp.idUnidad = um.Idinner join mst_Proveedor proveedor on p.idproveedor = proveedor.idleft join Stocks_Acumulados stock on pd.id = stock.IdProductoinner join mst_Grupo g on p.IdGrupo = g.IdWHERE pp.id = @idPresentacion"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spInsertarPreVenta",
    "Content": "CREATE proc [dbo].[spInsertarPreVenta]@idprecontacto int,@idpredetalle int,@idmesa int,@idusuario intasinsert into mst_Pre_Venta(IdPre_Contacto,IdPre_Detalle,IdMesa,Pagado,Cancelado,idusuario)VALUES(@idprecontacto,@idpredetalle,@idmesa,0,0,@idusuario)"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarGasto",
    "Content": "CREATE proc [dbo].[spEliminarGasto]@id intasupdate mst_GastosOperativos seteliminado = 1where id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpGetComisionByIdUsuario",
    "Content": "CREATE proc [dbo].[SpGetComisionByIdUsuario]@idUsuario intasselectc.Id,c.IdVenta,CONCAT(v.SerieDoc, '-', v.NumeroDoc) as 'Referencia',v.TotalVenta,c.Total 'Comision',c.MontoPagado,c.IdUsuario,u.usuario 'Usuario' from Comision cinner join mst_Venta v on c.IdVenta = v.idinner join mst_Usuarios u on c.idUsuario = u.Idwhere c.IdUsuario = @idUsuarioorder by v.FechaEmision asc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddVentaDetalle",
    "Content": "CREATE proc [dbo].[SpAddVentaDetalle]@id int,@idProducto int,@descripcion varchar(max),@idVenta int,@cantidad money,@precio money,@descuento money,@subtotal money,@igv money,@total money,@unidad varchar(50),@idUnidad int,@factor money,@adicional1 varchar(max),@adicional2 date,@adicional3 varchar(max),@adicional4 varchar(max),@codigoBarra varchar(max),@igvIncluido bit,@countPecho int,@countPierna int,@textObservation text,@isCodBarraBusqueda bit,@idProductoDetalle intasif @id = 0begin\tinsert into mst_Venta_det (IdProducto, descripcion, IdVenta, Cantidad, PrecioUnit, Descuento, Subtotal, Igv, Total,\tIdUnidad, Factor, Adicional1, Adicional2, Adicional3, Adicional4, igv_incluido, countPecho, countPierna, textObservation, IsCodBarraBusqueda)\tvalues(@idProducto, @descripcion, @idVenta, @cantidad, @precio, @descripcion, @subtotal, @igv, @total,\t@idUnidad, @factor, @adicional1, @adicional2, @adicional3, @adicional4, @igvIncluido, @countPecho, @countPierna, @textObservation, @isCodBarraBusqueda)\tselect CAST(SCOPE_IDENTITY() as int) 'id'endelsebegin\tupdate mst_Venta_det set IdProducto = @idProducto, descripcion = @descripcion, IdVenta = @idVenta, Cantidad = @cantidad, PrecioUnit=@precio,\tDescuento=@descuento, Subtotal=@subtotal, Igv=@igv,Total=@total,IdUnidad=@idUnidad,Factor=@factor,Adicional1=@adicional1,Adicional2=@adicional2,\tAdicional3=@adicional3,Adicional4=@adicional4,igv_incluido=@igvIncluido,countPecho=@countPecho,countPierna=@countPierna,textObservation=@textObservation,\tIsCodBarraBusqueda=@isCodBarraBusqueda\twhere Id=@idend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spEliminarPulso",
    "Content": "CREATE proc [dbo].[spEliminarPulso]@nombre varchar(100)asdelete from tabla_pulsos where NombreUsuario =@nombre"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarCPE_DETALLE",
    "Content": "CREATE proc [dbo].[spMostrarCPE_DETALLE]@id intASselectROW_NUMBER() OVER(ORDER BY id_item_cab_cpe DESC) AS Row,format(cantidad,'N','es-pe') 'CANTIDAD',format(sub_total,'N','es-pe') 'SUB_TOTAL',format(pre_total,'N','es-pe') 'TOTAL',format(MONTO_IGV,'N','es-pe') 'IGV',nom_producto 'DESCRIPCION',id_producto 'ID_PRODUCTO',format(pre_unitario,'N','es-pe')  'PRECIO_UNIT',IdProductoSunat 'ID_PRODUCTO_SUNAT',TipoAdicional 'TIPO_ADICIONAL',NumAdicional 'NUMERO_ADICIONAL',convert(date,FechaAdicional,103) 'FECHA_ADICIONAL',OtroAdicional 'OTRO_ADICIONAL',otros_impuestosfrom vw_tbl_items_cab_cpe where id_cab_cpe = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spAMProforma",
    "Content": "CREATE proc [dbo].[spAMProforma]@id int,@codigodoc char(2),@idcliente int,@dniruc varchar(50),@razonsocial varchar(200),@direccion varchar(200),@email varchar(200),@idusuario int,@bolfac char(2),@idalmacen int,@fecha datetime--@descuento money,--@total moneyasif(@id = 0)begin insert into tabla_Proforma(CodigoDoc,IdCliente,DniRuc,RazonSocial,Direccion,Email,Pagado,Eliminado,IdUsuario,bolfac,Idalmacen,fecha)--,Descuento,Total)values(@codigodoc,@idcliente,@dniruc,@razonsocial,@direccion,@email,0,0,@idusuario,@bolfac,@idalmacen,GETDATE())--,@descuento,@total)endelse beginupdate tabla_Proforma setCodigoDoc = @codigodoc,IdCliente = @idcliente,DniRuc = @dniruc,RazonSocial = @razonsocial,Direccion=@direccion,Email = @email,IdUsuario = @idusuario,BolFac = @bolfac,Idalmacen = @idalmacenwhere id = @idend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_agregar_pagos_almacenMovimiento",
    "Content": "CREATE PROC [dbo].[sp_agregar_pagos_almacenMovimiento]@monto decimal(9,3),@fecha datetime,@almacenmovimientoid int,@tipopagoseguimientoid int,@userid int,@descripcion varchar(250),@id int,@idCaja int,@idApertura intasif @id = 0begin\tinsert into api_almacen_pagos (monto, fecha, almacen_movimiento_id, tipo_pago_seguimiento_id, user_id, descripcion, idCaja, idApertura)\tvalues (@monto, @fecha, @almacenmovimientoid, @tipopagoseguimientoid, @userid, @descripcion, @idCaja, @idApertura)select SCOPE_IDENTITY() as 'id';endelsebeginupdate api_almacen_pagos set monto = @monto, fecha = @fecha, tipo_pago_seguimiento_id = @tipopagoseguimientoid, descripcion = @descripcionwhere id = @idselect @id as 'id';end"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarProformaNew",
    "Content": "CREATE proc [dbo].[spMostrarProformaNew]@id intasif(@id = 0)beginselect c.Id N,C.fecha,d.Descripcion Doc,c.RazonSocial,c.Direccion,u.nombre Atendio,c.sub_total as 'Sub_Total',0.00 as 'ICBPER',c.igv as 'Igv',c.Total,BolFac,cl.nacionalidad,isnull(c.Idalmacen,1) as 'IdAlmacen',c.Idfrom tabla_Proforma c inner join mst_Usuarios u on c.IdUsuario = u.Idinner join mst_documentos d on c.BolFac = d.Codigoleft join mst_Cliente cl on c.IdCliente = cl.idwhere c.Pagado = 0 and c.Eliminado = 0 and BolFac  != '07' and BolFac != '08'order by c.Id descendelsebeginselect c.Id,c.IdCliente,c.CodigoDoc,c.dniruc,c.RazonSocial,c.Direccion,c.Email,c.BolFac,c.IdUsuario,u.usuario,0 as 'IdPiso','' as Adicional,'' as Beneficiario,0 as IdConvenio,'' as 'Razon',0 as 'IdParentesco',cl.nacionalidad,isnull(c.Idalmacen,1) as 'IdAlmacen',c.Idfrom tabla_Proforma c inner join mst_Usuarios u on c.IdUsuario = u.Idinner join mst_documentos d on c.BolFac = d.Codigoleft join mst_Cliente cl on c.IdCliente = cl.idwhere c.Id = @id and c.Pagado = 0 and c.Eliminado = 0 and BolFac  != '07' and BolFac != '08'order by c.Id descend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "SpAddComisionPagos",
    "Content": "CREATE proc [dbo].[SpAddComisionPagos]@id int,@idComision int,@monto float,@token textasif @id = 0begin\tinsert into ComisionPagos (IdComision, Monto, Fecha, Token)\tvalues(@idComision, @monto, GETDATE(), @token)\tselect CAST(SCOPE_IDENTITY() as int)endelsebegin\tupdate ComisionPagos set Monto = @monto\twhere Id = @idend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "ModificarVentaDetalle",
    "Content": "CREATE proc [dbo].[ModificarVentaDetalle]@id int,@idproducto int,@preciounitario money,@cantidad int,@descuento money,@idunidad int,@factor int,@subtotal moneyasupdate mst_Venta_det setIdProducto = @idproducto,PrecioUnit = @preciounitario,Cantidad = @cantidad,Descuento = @descuento,IdUnidad = @idunidad,Factor =@factor,Subtotal = @subtotalwhere Id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spMostrarRestPisos",
    "Content": "CREATE proc [dbo].[spMostrarRestPisos]asselectid,numpiso Piso,cantmesas Cant_Mesas,numInicio Iniciofrom tabla_RestPisoswhere Estado = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spAMProformaDetalle",
    "Content": "CREATE proc [dbo].[spAMProformaDetalle]@id int,@idproforma int,@idproducto int,@descripcion  varchar(200),@codigobarra varchar(50),@umedida varchar(50),@cantidad money,@precio money,@subtotal money,@descuento money,@factor int,@idunidad int,@igv money,@total money,@adicional1 varchar(max)asif(@id = 0)begininsert into tabla_Proforma_Detalle(IdProforma, IdProducto,Descripcion,CodigoBarra,UMedida,Cantidad,Precio,Subtotal,Pagado,Eliminado,Descuento,factor,idunidad,igv,total,Adicional1)values(@idproforma, @idproducto,@descripcion,@codigobarra,@umedida,@cantidad,@precio,@subtotal,0,0,@descuento,@factor,@idunidad,@igv,@total,@adicional1)endelsebeginupdate tabla_Proforma_Detalle set idproducto = @idproducto,Descripcion = @descripcion,CodigoBarra=@codigobarra,UMedida = @umedida,Cantidad = @cantidad,Precio= @precio,Subtotal = @subtotal,Descuento = @descuento,Factor = @factor,IdUnidad = @idunidad,igv = @igv,total = @total,Adicional1=@adicional1where id = @idend"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_get_almacen",
    "Content": "CREATE proc [dbo].[sp_get_almacen]asselectid,nombre,estado,flagfrom mst_Almacenwhere Estado = 1 and Flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarPrecioPorIdPresentacion",
    "Content": "CREATE proc [dbo].[spBuscarPrecioPorIdPresentacion]@id intas--declare @idunidad int = (select id from mst_unidadmedida where nombreunidad = @unidad)select pp.precioUnitario,pp.Id,um.factor,um.id as 'ID_UNIDAD', pd.Id as 'IdProductoDetalle' from mst_ProductoPresentacion ppinner join mst_ProductoDetalle pd on pp.idProductosDetalle = pd.Idinner join mst_UnidadMedida um on pp.idunidad = um.Idwhere pp.Id = @idAND pp.flag = 1 and pp.estado = 1and pd.estado = 1and pd.flag = 1"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spAnularVenta",
    "Content": "CREATE proc [dbo].[spAnularVenta]@id int,@observacion textasupdate  mst_Venta set Anulado = 1,Subtotal = 0,Igv = 0,Descuento = 0,TotalVenta = 0,Total_Letras = 'CERO 0/100',ImportePagado = 0,Observacion = @observacion,Otro_Imp = 0where Id = @idupdate mst_Venta_det set Anulado = 1where IdVenta = @idupdate mst_Venta_det set Anulado = 1, Total = 0, Subtotal = 0 where IdVenta = @idexec spEliminarVenta_Ext @iddeclare @idconvenio int = (select IdConvenio from mst_Venta where id = @id)if(@idconvenio != 0)\tbegin\t\tupdate tabla_Pre_Venta_Convenio set IdVenta = 0, Pagado = 0 where IdConvenio = @idconvenio and IdVenta = @id\tendupdate tabla_FormaPago set Total = 0, Efectivo = 0,Visa = 0, Mastercard = 0, Vuelto = 0where IdVenta = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_get_almacen_by_id",
    "Content": "CREATE proc [dbo].[sp_get_almacen_by_id]@id intasselectid,nombre,estado,flagfrom mst_Almacenwhere Estado = 1 and Flag = 1 and id = @id"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spBuscarCliente",
    "Content": "CREATE procedure [dbo].[spBuscarCliente]@buscar varchar(200)asselect top 200 c.id as 'ID',td.descripcion as 'Documento',c.numeroDocumento as 'N° Documento',c.NombreCarrera 'NombreCarrera',c.Nivel,c.razonSocial as 'Razón',c.nombreComercial as 'Nombre Comercial',cd.Direccion as 'Direccion',c.telefono as 'Teléfono',c.correo as 'Correo',c.usuarioCrea as 'Usuario Crea',c.fechaCrea as 'Fecha Crea', c.usuarioModifica as 'Usuario Modifica', c.fechaModifica as 'Fecha Mod.',c.estado as 'Estado',TD.codigoSunat AS 'ID DOCUMENTO',cd.referencia as \"Referencia\",ISNULL(c.IdProgramaEstudio, 0) 'IdProgramaEstudio',c.Nivelfrom mst_Cliente cinner join mst_TipoDocumento td on c.idDocumento = td.codigoSunatinner join mst_Cliente_Direccion cd on c.Id = cd.idclientewhere c.razonSocial like '%'+@buscar+'%' and cd.principal = 1and c.flag = 1order by c.id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "LiberarResumenes",
    "Content": "CREATE proc [dbo].[LiberarResumenes]@numticket varchar(100)asupdate Tbl_Resumen_Det set NumTicket = '', Enviado = 0where NumTicket = @numticket"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "sp_get_almacen_movimiento",
    "Content": "CREATE proc [dbo].[sp_get_almacen_movimiento]@fecha_ini date,@fecha_fin dateasselectam.id 'id',am.estado 'estado',CONCAT(serie,'-', CAST(numero as varchar)) as 'serie',numero as 'numero',credito 'credito',total 'total',documento 'documento',c.razonSocial 'cliente',am.idCliente 'id_cliente',am.direccion 'direccion',am.fecha 'fecha',am.referencia 'referencia',IIF(am.ajuste = 0, iif(am.entrada = 1, 'Entrada', 'Salida'), 'Ajuste') 'tipo',a.Nombre 'almacen',am.idAlmacen 'id_almacen',am.doc_facturado 'doc_factura',am.cerrado 'cerrado',am.entrada 'entrada',am.salida 'salida',am.ajuste 'ajuste',IIF(am.importe_pagado = am.total, cast(0 as bit), cast(1 as bit)) 'status_deuda',am.idvendedor 'id_vendedor',u.usuario 'vendedor',AM.clasificadorId,am.importe_pagadofrom mst_almacen_movimiento amleft join mst_Cliente c on am.idCliente = c.Idinner join mst_almacen a on am.idAlmacen = a.Idinner join mst_Usuarios u on am.idvendedor = u.Idwhere CAST(am.fecha as date) between @fecha_ini and @fecha_finorder by am.id desc"
  },
  {
    "Type": "SQL_STORED_PROCEDURE",
    "Name": "spGetTotalContadoMovimiento",
    "Content": "CREATE proc [dbo].[spGetTotalContadoMovimiento]@idApertura int,@idCaja int,@idUsuario intasselectISNULL(SUM(total), 0) totalfrom mst_almacen_movimientowhere credito = 0 and idUsuario = @idUsuario and idCaja = @idCaja and idApertura = @idApertura"
  }
]