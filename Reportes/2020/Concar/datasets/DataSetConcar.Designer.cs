//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Presentacion.Reportes._2020.Concar.datasets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetConcar")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetConcar : global::System.Data.DataSet {
        
        private SpReporteConcarDataTable tableSpReporteConcar;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public DataSetConcar() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected DataSetConcar(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SpReporteConcar"] != null)) {
                    base.Tables.Add(new SpReporteConcarDataTable(ds.Tables["SpReporteConcar"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SpReporteConcarDataTable SpReporteConcar {
            get {
                return this.tableSpReporteConcar;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSetConcar cln = ((DataSetConcar)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SpReporteConcar"] != null)) {
                    base.Tables.Add(new SpReporteConcarDataTable(ds.Tables["SpReporteConcar"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableSpReporteConcar = ((SpReporteConcarDataTable)(base.Tables["SpReporteConcar"]));
            if ((initTable == true)) {
                if ((this.tableSpReporteConcar != null)) {
                    this.tableSpReporteConcar.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSetConcar";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetConcar.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSpReporteConcar = new SpReporteConcarDataTable();
            base.Tables.Add(this.tableSpReporteConcar);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSpReporteConcar() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetConcar ds = new DataSetConcar();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SpReporteConcarRowChangeEventHandler(object sender, SpReporteConcarRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SpReporteConcarDataTable : global::System.Data.TypedTableBase<SpReporteConcarRow> {
            
            private global::System.Data.DataColumn columnRestricciones;
            
            private global::System.Data.DataColumn columnSubDiario;
            
            private global::System.Data.DataColumn columnNumComprobante;
            
            private global::System.Data.DataColumn columnFechaComprobante;
            
            private global::System.Data.DataColumn columnCod_Moneda;
            
            private global::System.Data.DataColumn columnGlosa;
            
            private global::System.Data.DataColumn columnTipoCambio;
            
            private global::System.Data.DataColumn columnTipoConversion;
            
            private global::System.Data.DataColumn columnFlagConversion;
            
            private global::System.Data.DataColumn columnFechaTipoCambio;
            
            private global::System.Data.DataColumn columnCuentaContable;
            
            private global::System.Data.DataColumn columnCodigoAnexo;
            
            private global::System.Data.DataColumn columnCodigoCentroCosto;
            
            private global::System.Data.DataColumn columnDebe_Haber;
            
            private global::System.Data.DataColumn columnImporteOriginal;
            
            private global::System.Data.DataColumn columnImporteDolar;
            
            private global::System.Data.DataColumn columnImporteSoles;
            
            private global::System.Data.DataColumn columnTipoDoc;
            
            private global::System.Data.DataColumn columnNumDocumento;
            
            private global::System.Data.DataColumn columnFechaDocumento;
            
            private global::System.Data.DataColumn columnFechaVencimiento;
            
            private global::System.Data.DataColumn columnCodigoArea;
            
            private global::System.Data.DataColumn columnGlosaDetalle;
            
            private global::System.Data.DataColumn columnAnexoAuxiliar;
            
            private global::System.Data.DataColumn columnMedioPago;
            
            private global::System.Data.DataColumn columnTipoDocReferencia;
            
            private global::System.Data.DataColumn columnNumDocReferencia;
            
            private global::System.Data.DataColumn columnFechaDocReferencia;
            
            private global::System.Data.DataColumn columnMaqRegistradora;
            
            private global::System.Data.DataColumn columnBaseDocReferencia;
            
            private global::System.Data.DataColumn columnIgvDocprevison;
            
            private global::System.Data.DataColumn columnMq;
            
            private global::System.Data.DataColumn columnFechaOperacion;
            
            private global::System.Data.DataColumn columnTipotasa;
            
            private global::System.Data.DataColumn columnTasaDetrac;
            
            private global::System.Data.DataColumn columnImporteDetracDol;
            
            private global::System.Data.DataColumn columnImporteDetracSol;
            
            private global::System.Data.DataColumn columnTipCambioF;
            
            private global::System.Data.DataColumn columnImporteSinIgv;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SpReporteConcarDataTable() {
                this.TableName = "SpReporteConcar";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SpReporteConcarDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SpReporteConcarDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RestriccionesColumn {
                get {
                    return this.columnRestricciones;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SubDiarioColumn {
                get {
                    return this.columnSubDiario;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumComprobanteColumn {
                get {
                    return this.columnNumComprobante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FechaComprobanteColumn {
                get {
                    return this.columnFechaComprobante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Cod_MonedaColumn {
                get {
                    return this.columnCod_Moneda;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GlosaColumn {
                get {
                    return this.columnGlosa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TipoCambioColumn {
                get {
                    return this.columnTipoCambio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TipoConversionColumn {
                get {
                    return this.columnTipoConversion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FlagConversionColumn {
                get {
                    return this.columnFlagConversion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FechaTipoCambioColumn {
                get {
                    return this.columnFechaTipoCambio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CuentaContableColumn {
                get {
                    return this.columnCuentaContable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CodigoAnexoColumn {
                get {
                    return this.columnCodigoAnexo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CodigoCentroCostoColumn {
                get {
                    return this.columnCodigoCentroCosto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Debe_HaberColumn {
                get {
                    return this.columnDebe_Haber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ImporteOriginalColumn {
                get {
                    return this.columnImporteOriginal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ImporteDolarColumn {
                get {
                    return this.columnImporteDolar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ImporteSolesColumn {
                get {
                    return this.columnImporteSoles;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TipoDocColumn {
                get {
                    return this.columnTipoDoc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumDocumentoColumn {
                get {
                    return this.columnNumDocumento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FechaDocumentoColumn {
                get {
                    return this.columnFechaDocumento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FechaVencimientoColumn {
                get {
                    return this.columnFechaVencimiento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CodigoAreaColumn {
                get {
                    return this.columnCodigoArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GlosaDetalleColumn {
                get {
                    return this.columnGlosaDetalle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AnexoAuxiliarColumn {
                get {
                    return this.columnAnexoAuxiliar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MedioPagoColumn {
                get {
                    return this.columnMedioPago;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TipoDocReferenciaColumn {
                get {
                    return this.columnTipoDocReferencia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumDocReferenciaColumn {
                get {
                    return this.columnNumDocReferencia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FechaDocReferenciaColumn {
                get {
                    return this.columnFechaDocReferencia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MaqRegistradoraColumn {
                get {
                    return this.columnMaqRegistradora;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BaseDocReferenciaColumn {
                get {
                    return this.columnBaseDocReferencia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IgvDocprevisonColumn {
                get {
                    return this.columnIgvDocprevison;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MqColumn {
                get {
                    return this.columnMq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FechaOperacionColumn {
                get {
                    return this.columnFechaOperacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TipotasaColumn {
                get {
                    return this.columnTipotasa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TasaDetracColumn {
                get {
                    return this.columnTasaDetrac;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ImporteDetracDolColumn {
                get {
                    return this.columnImporteDetracDol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ImporteDetracSolColumn {
                get {
                    return this.columnImporteDetracSol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TipCambioFColumn {
                get {
                    return this.columnTipCambioF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ImporteSinIgvColumn {
                get {
                    return this.columnImporteSinIgv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SpReporteConcarRow this[int index] {
                get {
                    return ((SpReporteConcarRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SpReporteConcarRowChangeEventHandler SpReporteConcarRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SpReporteConcarRowChangeEventHandler SpReporteConcarRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SpReporteConcarRowChangeEventHandler SpReporteConcarRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SpReporteConcarRowChangeEventHandler SpReporteConcarRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSpReporteConcarRow(SpReporteConcarRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SpReporteConcarRow AddSpReporteConcarRow(
                        string Restricciones, 
                        string SubDiario, 
                        int NumComprobante, 
                        System.DateTime FechaComprobante, 
                        string Cod_Moneda, 
                        string Glosa, 
                        string TipoCambio, 
                        string TipoConversion, 
                        string FlagConversion, 
                        System.DateTime FechaTipoCambio, 
                        string CuentaContable, 
                        string CodigoAnexo, 
                        string CodigoCentroCosto, 
                        string Debe_Haber, 
                        decimal ImporteOriginal, 
                        string ImporteDolar, 
                        decimal ImporteSoles, 
                        string TipoDoc, 
                        string NumDocumento, 
                        System.DateTime FechaDocumento, 
                        System.DateTime FechaVencimiento, 
                        string CodigoArea, 
                        string GlosaDetalle, 
                        string AnexoAuxiliar, 
                        string MedioPago, 
                        string TipoDocReferencia, 
                        string NumDocReferencia, 
                        string FechaDocReferencia, 
                        string MaqRegistradora, 
                        string BaseDocReferencia, 
                        string IgvDocprevison, 
                        string Mq, 
                        string FechaOperacion, 
                        string Tipotasa, 
                        string TasaDetrac, 
                        string ImporteDetracDol, 
                        string ImporteDetracSol, 
                        string TipCambioF, 
                        string ImporteSinIgv) {
                SpReporteConcarRow rowSpReporteConcarRow = ((SpReporteConcarRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Restricciones,
                        SubDiario,
                        NumComprobante,
                        FechaComprobante,
                        Cod_Moneda,
                        Glosa,
                        TipoCambio,
                        TipoConversion,
                        FlagConversion,
                        FechaTipoCambio,
                        CuentaContable,
                        CodigoAnexo,
                        CodigoCentroCosto,
                        Debe_Haber,
                        ImporteOriginal,
                        ImporteDolar,
                        ImporteSoles,
                        TipoDoc,
                        NumDocumento,
                        FechaDocumento,
                        FechaVencimiento,
                        CodigoArea,
                        GlosaDetalle,
                        AnexoAuxiliar,
                        MedioPago,
                        TipoDocReferencia,
                        NumDocReferencia,
                        FechaDocReferencia,
                        MaqRegistradora,
                        BaseDocReferencia,
                        IgvDocprevison,
                        Mq,
                        FechaOperacion,
                        Tipotasa,
                        TasaDetrac,
                        ImporteDetracDol,
                        ImporteDetracSol,
                        TipCambioF,
                        ImporteSinIgv};
                rowSpReporteConcarRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSpReporteConcarRow);
                return rowSpReporteConcarRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SpReporteConcarDataTable cln = ((SpReporteConcarDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SpReporteConcarDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnRestricciones = base.Columns["Restricciones"];
                this.columnSubDiario = base.Columns["SubDiario"];
                this.columnNumComprobante = base.Columns["NumComprobante"];
                this.columnFechaComprobante = base.Columns["FechaComprobante"];
                this.columnCod_Moneda = base.Columns["Cod_Moneda"];
                this.columnGlosa = base.Columns["Glosa"];
                this.columnTipoCambio = base.Columns["TipoCambio"];
                this.columnTipoConversion = base.Columns["TipoConversion"];
                this.columnFlagConversion = base.Columns["FlagConversion"];
                this.columnFechaTipoCambio = base.Columns["FechaTipoCambio"];
                this.columnCuentaContable = base.Columns["CuentaContable"];
                this.columnCodigoAnexo = base.Columns["CodigoAnexo"];
                this.columnCodigoCentroCosto = base.Columns["CodigoCentroCosto"];
                this.columnDebe_Haber = base.Columns["Debe_Haber"];
                this.columnImporteOriginal = base.Columns["ImporteOriginal"];
                this.columnImporteDolar = base.Columns["ImporteDolar"];
                this.columnImporteSoles = base.Columns["ImporteSoles"];
                this.columnTipoDoc = base.Columns["TipoDoc"];
                this.columnNumDocumento = base.Columns["NumDocumento"];
                this.columnFechaDocumento = base.Columns["FechaDocumento"];
                this.columnFechaVencimiento = base.Columns["FechaVencimiento"];
                this.columnCodigoArea = base.Columns["CodigoArea"];
                this.columnGlosaDetalle = base.Columns["GlosaDetalle"];
                this.columnAnexoAuxiliar = base.Columns["AnexoAuxiliar"];
                this.columnMedioPago = base.Columns["MedioPago"];
                this.columnTipoDocReferencia = base.Columns["TipoDocReferencia"];
                this.columnNumDocReferencia = base.Columns["NumDocReferencia"];
                this.columnFechaDocReferencia = base.Columns["FechaDocReferencia"];
                this.columnMaqRegistradora = base.Columns["MaqRegistradora"];
                this.columnBaseDocReferencia = base.Columns["BaseDocReferencia"];
                this.columnIgvDocprevison = base.Columns["IgvDocprevison"];
                this.columnMq = base.Columns["Mq"];
                this.columnFechaOperacion = base.Columns["FechaOperacion"];
                this.columnTipotasa = base.Columns["Tipotasa"];
                this.columnTasaDetrac = base.Columns["TasaDetrac"];
                this.columnImporteDetracDol = base.Columns["ImporteDetracDol"];
                this.columnImporteDetracSol = base.Columns["ImporteDetracSol"];
                this.columnTipCambioF = base.Columns["TipCambioF"];
                this.columnImporteSinIgv = base.Columns["ImporteSinIgv"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnRestricciones = new global::System.Data.DataColumn("Restricciones", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRestricciones);
                this.columnSubDiario = new global::System.Data.DataColumn("SubDiario", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubDiario);
                this.columnNumComprobante = new global::System.Data.DataColumn("NumComprobante", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumComprobante);
                this.columnFechaComprobante = new global::System.Data.DataColumn("FechaComprobante", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaComprobante);
                this.columnCod_Moneda = new global::System.Data.DataColumn("Cod_Moneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_Moneda);
                this.columnGlosa = new global::System.Data.DataColumn("Glosa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlosa);
                this.columnTipoCambio = new global::System.Data.DataColumn("TipoCambio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoCambio);
                this.columnTipoConversion = new global::System.Data.DataColumn("TipoConversion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoConversion);
                this.columnFlagConversion = new global::System.Data.DataColumn("FlagConversion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlagConversion);
                this.columnFechaTipoCambio = new global::System.Data.DataColumn("FechaTipoCambio", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaTipoCambio);
                this.columnCuentaContable = new global::System.Data.DataColumn("CuentaContable", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCuentaContable);
                this.columnCodigoAnexo = new global::System.Data.DataColumn("CodigoAnexo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigoAnexo);
                this.columnCodigoCentroCosto = new global::System.Data.DataColumn("CodigoCentroCosto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigoCentroCosto);
                this.columnDebe_Haber = new global::System.Data.DataColumn("Debe_Haber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebe_Haber);
                this.columnImporteOriginal = new global::System.Data.DataColumn("ImporteOriginal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImporteOriginal);
                this.columnImporteDolar = new global::System.Data.DataColumn("ImporteDolar", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImporteDolar);
                this.columnImporteSoles = new global::System.Data.DataColumn("ImporteSoles", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImporteSoles);
                this.columnTipoDoc = new global::System.Data.DataColumn("TipoDoc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoDoc);
                this.columnNumDocumento = new global::System.Data.DataColumn("NumDocumento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumDocumento);
                this.columnFechaDocumento = new global::System.Data.DataColumn("FechaDocumento", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaDocumento);
                this.columnFechaVencimiento = new global::System.Data.DataColumn("FechaVencimiento", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaVencimiento);
                this.columnCodigoArea = new global::System.Data.DataColumn("CodigoArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigoArea);
                this.columnGlosaDetalle = new global::System.Data.DataColumn("GlosaDetalle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlosaDetalle);
                this.columnAnexoAuxiliar = new global::System.Data.DataColumn("AnexoAuxiliar", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnexoAuxiliar);
                this.columnMedioPago = new global::System.Data.DataColumn("MedioPago", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedioPago);
                this.columnTipoDocReferencia = new global::System.Data.DataColumn("TipoDocReferencia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoDocReferencia);
                this.columnNumDocReferencia = new global::System.Data.DataColumn("NumDocReferencia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumDocReferencia);
                this.columnFechaDocReferencia = new global::System.Data.DataColumn("FechaDocReferencia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaDocReferencia);
                this.columnMaqRegistradora = new global::System.Data.DataColumn("MaqRegistradora", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaqRegistradora);
                this.columnBaseDocReferencia = new global::System.Data.DataColumn("BaseDocReferencia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseDocReferencia);
                this.columnIgvDocprevison = new global::System.Data.DataColumn("IgvDocprevison", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIgvDocprevison);
                this.columnMq = new global::System.Data.DataColumn("Mq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMq);
                this.columnFechaOperacion = new global::System.Data.DataColumn("FechaOperacion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaOperacion);
                this.columnTipotasa = new global::System.Data.DataColumn("Tipotasa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipotasa);
                this.columnTasaDetrac = new global::System.Data.DataColumn("TasaDetrac", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTasaDetrac);
                this.columnImporteDetracDol = new global::System.Data.DataColumn("ImporteDetracDol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImporteDetracDol);
                this.columnImporteDetracSol = new global::System.Data.DataColumn("ImporteDetracSol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImporteDetracSol);
                this.columnTipCambioF = new global::System.Data.DataColumn("TipCambioF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipCambioF);
                this.columnImporteSinIgv = new global::System.Data.DataColumn("ImporteSinIgv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImporteSinIgv);
                this.columnRestricciones.ReadOnly = true;
                this.columnRestricciones.MaxLength = 1;
                this.columnSubDiario.ReadOnly = true;
                this.columnSubDiario.MaxLength = 1;
                this.columnNumComprobante.ReadOnly = true;
                this.columnFechaComprobante.ReadOnly = true;
                this.columnCod_Moneda.ReadOnly = true;
                this.columnCod_Moneda.MaxLength = 2;
                this.columnGlosa.MaxLength = 200;
                this.columnTipoCambio.ReadOnly = true;
                this.columnTipoCambio.MaxLength = 1;
                this.columnTipoConversion.ReadOnly = true;
                this.columnTipoConversion.MaxLength = 1;
                this.columnFlagConversion.ReadOnly = true;
                this.columnFlagConversion.MaxLength = 1;
                this.columnFechaTipoCambio.ReadOnly = true;
                this.columnCuentaContable.ReadOnly = true;
                this.columnCuentaContable.MaxLength = 6;
                this.columnCodigoAnexo.ReadOnly = true;
                this.columnCodigoAnexo.MaxLength = 4;
                this.columnCodigoCentroCosto.ReadOnly = true;
                this.columnCodigoCentroCosto.MaxLength = 1;
                this.columnDebe_Haber.ReadOnly = true;
                this.columnDebe_Haber.MaxLength = 1;
                this.columnImporteOriginal.ReadOnly = true;
                this.columnImporteDolar.ReadOnly = true;
                this.columnImporteDolar.MaxLength = 1;
                this.columnImporteSoles.ReadOnly = true;
                this.columnTipoDoc.ReadOnly = true;
                this.columnTipoDoc.MaxLength = 2;
                this.columnNumDocumento.ReadOnly = true;
                this.columnNumDocumento.MaxLength = 20;
                this.columnFechaDocumento.ReadOnly = true;
                this.columnFechaVencimiento.ReadOnly = true;
                this.columnCodigoArea.ReadOnly = true;
                this.columnCodigoArea.MaxLength = 3;
                this.columnGlosaDetalle.ReadOnly = true;
                this.columnGlosaDetalle.MaxLength = 1;
                this.columnAnexoAuxiliar.ReadOnly = true;
                this.columnAnexoAuxiliar.MaxLength = 1;
                this.columnMedioPago.ReadOnly = true;
                this.columnMedioPago.MaxLength = 1;
                this.columnTipoDocReferencia.ReadOnly = true;
                this.columnTipoDocReferencia.MaxLength = 1;
                this.columnNumDocReferencia.ReadOnly = true;
                this.columnNumDocReferencia.MaxLength = 1;
                this.columnFechaDocReferencia.ReadOnly = true;
                this.columnFechaDocReferencia.MaxLength = 1;
                this.columnMaqRegistradora.ReadOnly = true;
                this.columnMaqRegistradora.MaxLength = 1;
                this.columnBaseDocReferencia.ReadOnly = true;
                this.columnBaseDocReferencia.MaxLength = 1;
                this.columnIgvDocprevison.ReadOnly = true;
                this.columnIgvDocprevison.MaxLength = 1;
                this.columnMq.ReadOnly = true;
                this.columnMq.MaxLength = 1;
                this.columnFechaOperacion.ReadOnly = true;
                this.columnFechaOperacion.MaxLength = 1;
                this.columnTipotasa.ReadOnly = true;
                this.columnTipotasa.MaxLength = 1;
                this.columnTasaDetrac.ReadOnly = true;
                this.columnTasaDetrac.MaxLength = 1;
                this.columnImporteDetracDol.ReadOnly = true;
                this.columnImporteDetracDol.MaxLength = 1;
                this.columnImporteDetracSol.ReadOnly = true;
                this.columnImporteDetracSol.MaxLength = 1;
                this.columnTipCambioF.ReadOnly = true;
                this.columnTipCambioF.MaxLength = 1;
                this.columnImporteSinIgv.ReadOnly = true;
                this.columnImporteSinIgv.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SpReporteConcarRow NewSpReporteConcarRow() {
                return ((SpReporteConcarRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SpReporteConcarRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SpReporteConcarRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SpReporteConcarRowChanged != null)) {
                    this.SpReporteConcarRowChanged(this, new SpReporteConcarRowChangeEvent(((SpReporteConcarRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SpReporteConcarRowChanging != null)) {
                    this.SpReporteConcarRowChanging(this, new SpReporteConcarRowChangeEvent(((SpReporteConcarRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SpReporteConcarRowDeleted != null)) {
                    this.SpReporteConcarRowDeleted(this, new SpReporteConcarRowChangeEvent(((SpReporteConcarRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SpReporteConcarRowDeleting != null)) {
                    this.SpReporteConcarRowDeleting(this, new SpReporteConcarRowChangeEvent(((SpReporteConcarRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSpReporteConcarRow(SpReporteConcarRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetConcar ds = new DataSetConcar();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SpReporteConcarDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SpReporteConcarRow : global::System.Data.DataRow {
            
            private SpReporteConcarDataTable tableSpReporteConcar;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SpReporteConcarRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSpReporteConcar = ((SpReporteConcarDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Restricciones {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.RestriccionesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Restricciones\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.RestriccionesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SubDiario {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.SubDiarioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubDiario\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.SubDiarioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int NumComprobante {
                get {
                    try {
                        return ((int)(this[this.tableSpReporteConcar.NumComprobanteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumComprobante\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.NumComprobanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime FechaComprobante {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSpReporteConcar.FechaComprobanteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FechaComprobante\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.FechaComprobanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Cod_Moneda {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.Cod_MonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cod_Moneda\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.Cod_MonedaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Glosa {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.GlosaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Glosa\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.GlosaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TipoCambio {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.TipoCambioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TipoCambio\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.TipoCambioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TipoConversion {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.TipoConversionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TipoConversion\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.TipoConversionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FlagConversion {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.FlagConversionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FlagConversion\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.FlagConversionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime FechaTipoCambio {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSpReporteConcar.FechaTipoCambioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FechaTipoCambio\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.FechaTipoCambioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CuentaContable {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.CuentaContableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CuentaContable\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.CuentaContableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CodigoAnexo {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.CodigoAnexoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodigoAnexo\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.CodigoAnexoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CodigoCentroCosto {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.CodigoCentroCostoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodigoCentroCosto\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.CodigoCentroCostoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Debe_Haber {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.Debe_HaberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Debe_Haber\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.Debe_HaberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ImporteOriginal {
                get {
                    try {
                        return ((decimal)(this[this.tableSpReporteConcar.ImporteOriginalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImporteOriginal\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.ImporteOriginalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ImporteDolar {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.ImporteDolarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImporteDolar\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.ImporteDolarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ImporteSoles {
                get {
                    try {
                        return ((decimal)(this[this.tableSpReporteConcar.ImporteSolesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImporteSoles\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.ImporteSolesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TipoDoc {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.TipoDocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TipoDoc\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.TipoDocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NumDocumento {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.NumDocumentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumDocumento\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.NumDocumentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime FechaDocumento {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSpReporteConcar.FechaDocumentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FechaDocumento\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.FechaDocumentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime FechaVencimiento {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSpReporteConcar.FechaVencimientoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FechaVencimiento\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.FechaVencimientoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CodigoArea {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.CodigoAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodigoArea\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.CodigoAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GlosaDetalle {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.GlosaDetalleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GlosaDetalle\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.GlosaDetalleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AnexoAuxiliar {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.AnexoAuxiliarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnexoAuxiliar\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.AnexoAuxiliarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MedioPago {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.MedioPagoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MedioPago\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.MedioPagoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TipoDocReferencia {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.TipoDocReferenciaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TipoDocReferencia\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.TipoDocReferenciaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NumDocReferencia {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.NumDocReferenciaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumDocReferencia\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.NumDocReferenciaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FechaDocReferencia {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.FechaDocReferenciaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FechaDocReferencia\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.FechaDocReferenciaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MaqRegistradora {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.MaqRegistradoraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaqRegistradora\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.MaqRegistradoraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BaseDocReferencia {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.BaseDocReferenciaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseDocReferencia\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.BaseDocReferenciaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string IgvDocprevison {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.IgvDocprevisonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IgvDocprevison\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.IgvDocprevisonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Mq {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.MqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mq\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.MqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FechaOperacion {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.FechaOperacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FechaOperacion\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.FechaOperacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Tipotasa {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.TipotasaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tipotasa\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.TipotasaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TasaDetrac {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.TasaDetracColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TasaDetrac\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.TasaDetracColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ImporteDetracDol {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.ImporteDetracDolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImporteDetracDol\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.ImporteDetracDolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ImporteDetracSol {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.ImporteDetracSolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImporteDetracSol\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.ImporteDetracSolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TipCambioF {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.TipCambioFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TipCambioF\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.TipCambioFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ImporteSinIgv {
                get {
                    try {
                        return ((string)(this[this.tableSpReporteConcar.ImporteSinIgvColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImporteSinIgv\' in table \'SpReporteConcar\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpReporteConcar.ImporteSinIgvColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRestriccionesNull() {
                return this.IsNull(this.tableSpReporteConcar.RestriccionesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRestriccionesNull() {
                this[this.tableSpReporteConcar.RestriccionesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSubDiarioNull() {
                return this.IsNull(this.tableSpReporteConcar.SubDiarioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSubDiarioNull() {
                this[this.tableSpReporteConcar.SubDiarioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNumComprobanteNull() {
                return this.IsNull(this.tableSpReporteConcar.NumComprobanteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNumComprobanteNull() {
                this[this.tableSpReporteConcar.NumComprobanteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFechaComprobanteNull() {
                return this.IsNull(this.tableSpReporteConcar.FechaComprobanteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFechaComprobanteNull() {
                this[this.tableSpReporteConcar.FechaComprobanteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCod_MonedaNull() {
                return this.IsNull(this.tableSpReporteConcar.Cod_MonedaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCod_MonedaNull() {
                this[this.tableSpReporteConcar.Cod_MonedaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGlosaNull() {
                return this.IsNull(this.tableSpReporteConcar.GlosaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGlosaNull() {
                this[this.tableSpReporteConcar.GlosaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTipoCambioNull() {
                return this.IsNull(this.tableSpReporteConcar.TipoCambioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTipoCambioNull() {
                this[this.tableSpReporteConcar.TipoCambioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTipoConversionNull() {
                return this.IsNull(this.tableSpReporteConcar.TipoConversionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTipoConversionNull() {
                this[this.tableSpReporteConcar.TipoConversionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFlagConversionNull() {
                return this.IsNull(this.tableSpReporteConcar.FlagConversionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFlagConversionNull() {
                this[this.tableSpReporteConcar.FlagConversionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFechaTipoCambioNull() {
                return this.IsNull(this.tableSpReporteConcar.FechaTipoCambioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFechaTipoCambioNull() {
                this[this.tableSpReporteConcar.FechaTipoCambioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCuentaContableNull() {
                return this.IsNull(this.tableSpReporteConcar.CuentaContableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCuentaContableNull() {
                this[this.tableSpReporteConcar.CuentaContableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCodigoAnexoNull() {
                return this.IsNull(this.tableSpReporteConcar.CodigoAnexoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCodigoAnexoNull() {
                this[this.tableSpReporteConcar.CodigoAnexoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCodigoCentroCostoNull() {
                return this.IsNull(this.tableSpReporteConcar.CodigoCentroCostoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCodigoCentroCostoNull() {
                this[this.tableSpReporteConcar.CodigoCentroCostoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDebe_HaberNull() {
                return this.IsNull(this.tableSpReporteConcar.Debe_HaberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDebe_HaberNull() {
                this[this.tableSpReporteConcar.Debe_HaberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsImporteOriginalNull() {
                return this.IsNull(this.tableSpReporteConcar.ImporteOriginalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetImporteOriginalNull() {
                this[this.tableSpReporteConcar.ImporteOriginalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsImporteDolarNull() {
                return this.IsNull(this.tableSpReporteConcar.ImporteDolarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetImporteDolarNull() {
                this[this.tableSpReporteConcar.ImporteDolarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsImporteSolesNull() {
                return this.IsNull(this.tableSpReporteConcar.ImporteSolesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetImporteSolesNull() {
                this[this.tableSpReporteConcar.ImporteSolesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTipoDocNull() {
                return this.IsNull(this.tableSpReporteConcar.TipoDocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTipoDocNull() {
                this[this.tableSpReporteConcar.TipoDocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNumDocumentoNull() {
                return this.IsNull(this.tableSpReporteConcar.NumDocumentoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNumDocumentoNull() {
                this[this.tableSpReporteConcar.NumDocumentoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFechaDocumentoNull() {
                return this.IsNull(this.tableSpReporteConcar.FechaDocumentoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFechaDocumentoNull() {
                this[this.tableSpReporteConcar.FechaDocumentoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFechaVencimientoNull() {
                return this.IsNull(this.tableSpReporteConcar.FechaVencimientoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFechaVencimientoNull() {
                this[this.tableSpReporteConcar.FechaVencimientoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCodigoAreaNull() {
                return this.IsNull(this.tableSpReporteConcar.CodigoAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCodigoAreaNull() {
                this[this.tableSpReporteConcar.CodigoAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGlosaDetalleNull() {
                return this.IsNull(this.tableSpReporteConcar.GlosaDetalleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGlosaDetalleNull() {
                this[this.tableSpReporteConcar.GlosaDetalleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAnexoAuxiliarNull() {
                return this.IsNull(this.tableSpReporteConcar.AnexoAuxiliarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAnexoAuxiliarNull() {
                this[this.tableSpReporteConcar.AnexoAuxiliarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMedioPagoNull() {
                return this.IsNull(this.tableSpReporteConcar.MedioPagoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMedioPagoNull() {
                this[this.tableSpReporteConcar.MedioPagoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTipoDocReferenciaNull() {
                return this.IsNull(this.tableSpReporteConcar.TipoDocReferenciaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTipoDocReferenciaNull() {
                this[this.tableSpReporteConcar.TipoDocReferenciaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNumDocReferenciaNull() {
                return this.IsNull(this.tableSpReporteConcar.NumDocReferenciaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNumDocReferenciaNull() {
                this[this.tableSpReporteConcar.NumDocReferenciaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFechaDocReferenciaNull() {
                return this.IsNull(this.tableSpReporteConcar.FechaDocReferenciaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFechaDocReferenciaNull() {
                this[this.tableSpReporteConcar.FechaDocReferenciaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMaqRegistradoraNull() {
                return this.IsNull(this.tableSpReporteConcar.MaqRegistradoraColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMaqRegistradoraNull() {
                this[this.tableSpReporteConcar.MaqRegistradoraColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBaseDocReferenciaNull() {
                return this.IsNull(this.tableSpReporteConcar.BaseDocReferenciaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBaseDocReferenciaNull() {
                this[this.tableSpReporteConcar.BaseDocReferenciaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIgvDocprevisonNull() {
                return this.IsNull(this.tableSpReporteConcar.IgvDocprevisonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIgvDocprevisonNull() {
                this[this.tableSpReporteConcar.IgvDocprevisonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMqNull() {
                return this.IsNull(this.tableSpReporteConcar.MqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMqNull() {
                this[this.tableSpReporteConcar.MqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFechaOperacionNull() {
                return this.IsNull(this.tableSpReporteConcar.FechaOperacionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFechaOperacionNull() {
                this[this.tableSpReporteConcar.FechaOperacionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTipotasaNull() {
                return this.IsNull(this.tableSpReporteConcar.TipotasaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTipotasaNull() {
                this[this.tableSpReporteConcar.TipotasaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTasaDetracNull() {
                return this.IsNull(this.tableSpReporteConcar.TasaDetracColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTasaDetracNull() {
                this[this.tableSpReporteConcar.TasaDetracColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsImporteDetracDolNull() {
                return this.IsNull(this.tableSpReporteConcar.ImporteDetracDolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetImporteDetracDolNull() {
                this[this.tableSpReporteConcar.ImporteDetracDolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsImporteDetracSolNull() {
                return this.IsNull(this.tableSpReporteConcar.ImporteDetracSolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetImporteDetracSolNull() {
                this[this.tableSpReporteConcar.ImporteDetracSolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTipCambioFNull() {
                return this.IsNull(this.tableSpReporteConcar.TipCambioFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTipCambioFNull() {
                this[this.tableSpReporteConcar.TipCambioFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsImporteSinIgvNull() {
                return this.IsNull(this.tableSpReporteConcar.ImporteSinIgvColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetImporteSinIgvNull() {
                this[this.tableSpReporteConcar.ImporteSinIgvColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SpReporteConcarRowChangeEvent : global::System.EventArgs {
            
            private SpReporteConcarRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SpReporteConcarRowChangeEvent(SpReporteConcarRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SpReporteConcarRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Presentacion.Reportes._2020.Concar.datasets.DataSetConcarTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SpReporteConcarTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SpReporteConcarTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SpReporteConcar";
            tableMapping.ColumnMappings.Add("Restricciones", "Restricciones");
            tableMapping.ColumnMappings.Add("SubDiario", "SubDiario");
            tableMapping.ColumnMappings.Add("NumComprobante", "NumComprobante");
            tableMapping.ColumnMappings.Add("FechaComprobante", "FechaComprobante");
            tableMapping.ColumnMappings.Add("Cod_Moneda", "Cod_Moneda");
            tableMapping.ColumnMappings.Add("Glosa", "Glosa");
            tableMapping.ColumnMappings.Add("TipoCambio", "TipoCambio");
            tableMapping.ColumnMappings.Add("TipoConversion", "TipoConversion");
            tableMapping.ColumnMappings.Add("FlagConversion", "FlagConversion");
            tableMapping.ColumnMappings.Add("FechaTipoCambio", "FechaTipoCambio");
            tableMapping.ColumnMappings.Add("CuentaContable", "CuentaContable");
            tableMapping.ColumnMappings.Add("CodigoAnexo", "CodigoAnexo");
            tableMapping.ColumnMappings.Add("CodigoCentroCosto", "CodigoCentroCosto");
            tableMapping.ColumnMappings.Add("Debe_Haber", "Debe_Haber");
            tableMapping.ColumnMappings.Add("ImporteOriginal", "ImporteOriginal");
            tableMapping.ColumnMappings.Add("ImporteDolar", "ImporteDolar");
            tableMapping.ColumnMappings.Add("ImporteSoles", "ImporteSoles");
            tableMapping.ColumnMappings.Add("TipoDoc", "TipoDoc");
            tableMapping.ColumnMappings.Add("NumDocumento", "NumDocumento");
            tableMapping.ColumnMappings.Add("FechaDocumento", "FechaDocumento");
            tableMapping.ColumnMappings.Add("FechaVencimiento", "FechaVencimiento");
            tableMapping.ColumnMappings.Add("CodigoArea", "CodigoArea");
            tableMapping.ColumnMappings.Add("GlosaDetalle", "GlosaDetalle");
            tableMapping.ColumnMappings.Add("AnexoAuxiliar", "AnexoAuxiliar");
            tableMapping.ColumnMappings.Add("MedioPago", "MedioPago");
            tableMapping.ColumnMappings.Add("TipoDocReferencia", "TipoDocReferencia");
            tableMapping.ColumnMappings.Add("NumDocReferencia", "NumDocReferencia");
            tableMapping.ColumnMappings.Add("FechaDocReferencia", "FechaDocReferencia");
            tableMapping.ColumnMappings.Add("MaqRegistradora", "MaqRegistradora");
            tableMapping.ColumnMappings.Add("BaseDocReferencia", "BaseDocReferencia");
            tableMapping.ColumnMappings.Add("IgvDocprevison", "IgvDocprevison");
            tableMapping.ColumnMappings.Add("Mq", "Mq");
            tableMapping.ColumnMappings.Add("FechaOperacion", "FechaOperacion");
            tableMapping.ColumnMappings.Add("Tipotasa", "Tipotasa");
            tableMapping.ColumnMappings.Add("TasaDetrac", "TasaDetrac");
            tableMapping.ColumnMappings.Add("ImporteDetracDol", "ImporteDetracDol");
            tableMapping.ColumnMappings.Add("ImporteDetracSol", "ImporteDetracSol");
            tableMapping.ColumnMappings.Add("TipCambioF", "TipCambioF");
            tableMapping.ColumnMappings.Add("ImporteSinIgv", "ImporteSinIgv");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Presentacion.Properties.Settings.Default.BD_ALMATRINCHERO_2020_NEWConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SpReporteConcar";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fechaInicio", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fechaFin", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetConcar.SpReporteConcarDataTable dataTable, global::System.Nullable<global::System.DateTime> fechaInicio, global::System.Nullable<global::System.DateTime> fechaFin) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((fechaInicio.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(fechaInicio.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((fechaFin.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(fechaFin.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetConcar.SpReporteConcarDataTable GetData(global::System.Nullable<global::System.DateTime> fechaInicio, global::System.Nullable<global::System.DateTime> fechaFin) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((fechaInicio.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(fechaInicio.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((fechaFin.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(fechaFin.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            DataSetConcar.SpReporteConcarDataTable dataTable = new DataSetConcar.SpReporteConcarDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(DataSetConcar dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(DataSetConcar dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(DataSetConcar dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(DataSetConcar dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591